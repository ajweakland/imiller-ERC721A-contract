{
	"id": "cd1423110e34f7bd6dec0c525b8d8b6d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.12",
	"solcLongVersion": "0.8.12+commit.f00d7308",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/fourtwo.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >0.8.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\";\r\nimport \"./ERC721A.sol\";\r\n\r\n\r\ncontract fourtwo is Ownable, ERC721A, ReentrancyGuard {\r\n\r\n  using StringsUpgradeable  for uint256;\r\n    \r\n  string baseURI;\r\n  string public baseExtension = \".json\";\r\n\r\n  uint256 public cost = 0.00 ether;\r\n  uint256 public maxSupply = 420;\r\n  uint256 public AllowlistLimit = 5;\r\n\r\n  bool public paused = false;\r\n  bool public onlyAllowlisted = false;\r\n  mapping(address => bool) public allowlist;\r\n  mapping(address => uint256) public addressMintedBalance;\r\n\r\n  constructor(\r\n    string memory _initBaseURI\r\n  ) ERC721A(\"442200\", \"IMI\") {\r\n    setBaseURI(_initBaseURI);\r\n  }\r\n\r\n  // internal\r\n  function _baseURI() internal view virtual override returns (string memory) {\r\n    return baseURI;\r\n  }\r\n\r\n\r\n  // public\r\n  function mint(uint256 _mintAmount) public payable {\r\n    uint256 supply = totalSupply();\r\n    // add balanceOf?\r\n    require(!paused, \"WOAH hold up the mint is not yet live, a little too early there... or late? Transmission Ending\");\r\n    require(_mintAmount > 0, \"must mint at least 1 nft, 0 is not allowed. Transmission Ending\");\r\n    require(supply + _mintAmount <= maxSupply, \"looks like we are popular max supply has been reached\");\r\n    \r\n\r\n    if (msg.sender != owner()) {\r\n        //max mint amount is 3\r\n        require(_mintAmount <= 1, \"only 1 at a time :) \");\r\n        if(onlyAllowlisted == true) {\r\n            require(isAllowlisted(msg.sender), \"Not Allowlisted\");\r\n            uint256 ownerMintedCount = addressMintedBalance[msg.sender];\r\n            require(ownerMintedCount + _mintAmount <= AllowlistLimit, \"Already minted\");\r\n        }\r\n        require(msg.value >= cost * _mintAmount, \"Cost doesn't match\");\r\n    }\r\n\r\n    _safeMint(msg.sender, _mintAmount);\r\n    addressMintedBalance[msg.sender] += _mintAmount;\r\n  }\r\n  \r\n\r\n  function isAllowlisted(address _user) public view returns (bool) {\r\n    return allowlist[_user];\r\n  }\r\n\r\n  function tokenURI(uint256 tokenId)\r\n    public\r\n    view\r\n    virtual\r\n    override\r\n    returns (string memory)\r\n  {\r\n    require(\r\n      _exists(tokenId),\r\n      \"ERC721Metadata: URI query for nonexistent token\"\r\n    );\r\n\r\n\r\n    string memory currentBaseURI = _baseURI();\r\n    return bytes(currentBaseURI).length > 0\r\n        ? string(abi.encodePacked(currentBaseURI, tokenId.toString(), baseExtension))\r\n        : \"\";\r\n  }\r\n  \r\n\r\n  function setBaseURI(string memory _newBaseURI) public onlyOwner {\r\n    baseURI = _newBaseURI;\r\n  }\r\n\r\n  function setBaseExtension(string memory _newBaseExtension) public onlyOwner {\r\n    baseExtension = _newBaseExtension;\r\n  }\r\n\r\n  function pause(bool _state) external onlyOwner {\r\n    paused = _state;\r\n  }\r\n\r\n\r\n  function setOnlyAllowlisted(bool _state) public onlyOwner {\r\n    onlyAllowlisted = _state;\r\n  }\r\n\r\n  function allowlistUsers(address[] calldata addresses) external onlyOwner {\r\n    for (uint256 i = 0; i < addresses.length; i++) {\r\n      allowlist[addresses[i]] = true;\r\n    }\r\n  }\r\n\r\n  function removeUsersFromAllowlist(address[] calldata addresses) external onlyOwner {\r\n    for (uint256 i = 0; i < addresses.length; i++) {\r\n      allowlist[addresses[i]] = false;\r\n    }\r\n  }\r\n\r\n  function ownerOfTokenIds(address tokenOwner) external view returns (uint256[] memory) {\r\n        uint256 supplyCurrent = totalSupply();\r\n        uint256[] memory result = new uint256[](balanceOf(tokenOwner));\r\n        uint256 counter = 0;\r\n        for (uint256 i = 0; i < supplyCurrent; i++) {\r\n            if (ownerOf(i) == tokenOwner) {\r\n                result[counter] = i;\r\n                counter++;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n \r\n  function withdraw() public payable onlyOwner {\r\n    payable(owner()).transfer(address(this).balance);\r\n  }\r\n\r\n\r\n}"
			},
			"contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v4.2.3\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport './IERC721A.sol';\r\n\r\n/**\r\n * @dev Interface of ERC721 token receiver.\r\n */\r\ninterface ERC721A__IERC721Receiver {\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\n/**\r\n * @title ERC721A\r\n *\r\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\r\n * Non-Fungible Token Standard, including the Metadata extension.\r\n * Optimized for lower gas during batch mints.\r\n *\r\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\r\n * starting from `_startTokenId()`.\r\n *\r\n * Assumptions:\r\n *\r\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\r\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\r\n */\r\ncontract ERC721A is IERC721A {\r\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\r\n    struct TokenApprovalRef {\r\n        address value;\r\n    }\r\n\r\n    // =============================================================\r\n    //                           CONSTANTS\r\n    // =============================================================\r\n\r\n    // Mask of an entry in packed address data.\r\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\r\n\r\n    // The bit position of `numberMinted` in packed address data.\r\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\r\n\r\n    // The bit position of `numberBurned` in packed address data.\r\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\r\n\r\n    // The bit position of `aux` in packed address data.\r\n    uint256 private constant _BITPOS_AUX = 192;\r\n\r\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\r\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\r\n\r\n    // The bit position of `startTimestamp` in packed ownership.\r\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\r\n\r\n    // The bit mask of the `burned` bit in packed ownership.\r\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\r\n\r\n    // The bit position of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\r\n\r\n    // The bit mask of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\r\n\r\n    // The bit position of `extraData` in packed ownership.\r\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\r\n\r\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\r\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\r\n\r\n    // The mask of the lower 160 bits for addresses.\r\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\r\n\r\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\r\n    // This limit is to prevent overflows on the address data entries.\r\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\r\n    // is required to cause an overflow, which is unrealistic.\r\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\r\n\r\n    // The `Transfer` event signature is given by:\r\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\r\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\r\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\r\n\r\n    // =============================================================\r\n    //                            STORAGE\r\n    // =============================================================\r\n\r\n    // The next token ID to be minted.\r\n    uint256 private _currentIndex;\r\n\r\n    // The number of tokens burned.\r\n    uint256 private _burnCounter;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to ownership details\r\n    // An empty struct value does not necessarily mean the token is unowned.\r\n    // See {_packedOwnershipOf} implementation for details.\r\n    //\r\n    // Bits Layout:\r\n    // - [0..159]   `addr`\r\n    // - [160..223] `startTimestamp`\r\n    // - [224]      `burned`\r\n    // - [225]      `nextInitialized`\r\n    // - [232..255] `extraData`\r\n    mapping(uint256 => uint256) private _packedOwnerships;\r\n\r\n    // Mapping owner address to address data.\r\n    //\r\n    // Bits Layout:\r\n    // - [0..63]    `balance`\r\n    // - [64..127]  `numberMinted`\r\n    // - [128..191] `numberBurned`\r\n    // - [192..255] `aux`\r\n    mapping(address => uint256) private _packedAddressData;\r\n\r\n    // Mapping from token ID to approved address.\r\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    // =============================================================\r\n    //                          CONSTRUCTOR\r\n    // =============================================================\r\n\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _currentIndex = _startTokenId();\r\n    }\r\n\r\n    // =============================================================\r\n    //                   TOKEN COUNTING OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the starting token ID.\r\n     * To change the starting token ID, please override this function.\r\n     */\r\n    function _startTokenId() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the next token ID to be minted.\r\n     */\r\n    function _nextTokenId() internal view virtual returns (uint256) {\r\n        return _currentIndex;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens in existence.\r\n     * Burned tokens will reduce the count.\r\n     * To get the total number of tokens minted, please see {_totalMinted}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        // Counter underflow is impossible as _burnCounter cannot be incremented\r\n        // more than `_currentIndex - _startTokenId()` times.\r\n        unchecked {\r\n            return _currentIndex - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens minted in the contract.\r\n     */\r\n    function _totalMinted() internal view virtual returns (uint256) {\r\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\r\n        // and it is initialized to `_startTokenId()`.\r\n        unchecked {\r\n            return _currentIndex - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens burned.\r\n     */\r\n    function _totalBurned() internal view virtual returns (uint256) {\r\n        return _burnCounter;\r\n    }\r\n\r\n    // =============================================================\r\n    //                    ADDRESS DATA OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in `owner`'s account.\r\n     */\r\n    function balanceOf(address owner) public view virtual override returns (uint256) {\r\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\r\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens minted by `owner`.\r\n     */\r\n    function _numberMinted(address owner) internal view returns (uint256) {\r\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens burned by or on behalf of `owner`.\r\n     */\r\n    function _numberBurned(address owner) internal view returns (uint256) {\r\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     */\r\n    function _getAux(address owner) internal view returns (uint64) {\r\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\r\n    }\r\n\r\n    /**\r\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     * If there are multiple variables, please pack them into a uint64.\r\n     */\r\n    function _setAux(address owner, uint64 aux) internal virtual {\r\n        uint256 packed = _packedAddressData[owner];\r\n        uint256 auxCasted;\r\n        // Cast `aux` with assembly to avoid redundant masking.\r\n        assembly {\r\n            auxCasted := aux\r\n        }\r\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\r\n        _packedAddressData[owner] = packed;\r\n    }\r\n\r\n    // =============================================================\r\n    //                            IERC165\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        // The interface IDs are constants representing the first 4 bytes\r\n        // of the XOR of all function selectors in the interface.\r\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\r\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\r\n        return\r\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\r\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\r\n    }\r\n\r\n    // =============================================================\r\n    //                        IERC721Metadata\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, it can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return '';\r\n    }\r\n\r\n    // =============================================================\r\n    //                     OWNERSHIPS OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r\n        return address(uint160(_packedOwnershipOf(tokenId)));\r\n    }\r\n\r\n    /**\r\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\r\n     * It gradually moves to O(1) as tokens get transferred around over time.\r\n     */\r\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\r\n     */\r\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnerships[index]);\r\n    }\r\n\r\n    /**\r\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\r\n     */\r\n    function _initializeOwnershipAt(uint256 index) internal virtual {\r\n        if (_packedOwnerships[index] == 0) {\r\n            _packedOwnerships[index] = _packedOwnershipOf(index);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the packed ownership data of `tokenId`.\r\n     */\r\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\r\n        uint256 curr = tokenId;\r\n\r\n        unchecked {\r\n            if (_startTokenId() <= curr)\r\n                if (curr < _currentIndex) {\r\n                    uint256 packed = _packedOwnerships[curr];\r\n                    // If not burned.\r\n                    if (packed & _BITMASK_BURNED == 0) {\r\n                        // Invariant:\r\n                        // There will always be an initialized ownership slot\r\n                        // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\r\n                        // before an unintialized ownership slot\r\n                        // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\r\n                        // Hence, `curr` will not underflow.\r\n                        //\r\n                        // We can directly compare the packed value.\r\n                        // If the address is zero, packed will be zero.\r\n                        while (packed == 0) {\r\n                            packed = _packedOwnerships[--curr];\r\n                        }\r\n                        return packed;\r\n                    }\r\n                }\r\n        }\r\n        revert OwnerQueryForNonexistentToken();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\r\n     */\r\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\r\n        ownership.addr = address(uint160(packed));\r\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\r\n        ownership.burned = packed & _BITMASK_BURNED != 0;\r\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\r\n    }\r\n\r\n    /**\r\n     * @dev Packs ownership data into a single uint256.\r\n     */\r\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\r\n        assembly {\r\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            owner := and(owner, _BITMASK_ADDRESS)\r\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\r\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\r\n     */\r\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\r\n        // For branchless setting of the `nextInitialized` flag.\r\n        assembly {\r\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\r\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                      APPROVAL OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the\r\n     * zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) public payable virtual override {\r\n        address owner = ownerOf(tokenId);\r\n\r\n        if (_msgSenderERC721A() != owner)\r\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\r\n                revert ApprovalCallerNotOwnerNorApproved();\r\n            }\r\n\r\n        _tokenApprovals[tokenId].value = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\r\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\r\n\r\n        return _tokenApprovals[tokenId].value;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom}\r\n     * for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\r\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted. See {_mint}.\r\n     */\r\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\r\n        return\r\n            _startTokenId() <= tokenId &&\r\n            tokenId < _currentIndex && // If within bounds,\r\n            _packedOwnerships[tokenId] & _BITMASK_BURNED == 0; // and not burned.\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\r\n     */\r\n    function _isSenderApprovedOrOwner(\r\n        address approvedAddress,\r\n        address owner,\r\n        address msgSender\r\n    ) private pure returns (bool result) {\r\n        assembly {\r\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            owner := and(owner, _BITMASK_ADDRESS)\r\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\r\n            // `msgSender == owner || msgSender == approvedAddress`.\r\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\r\n     */\r\n    function _getApprovedSlotAndAddress(uint256 tokenId)\r\n        private\r\n        view\r\n        returns (uint256 approvedAddressSlot, address approvedAddress)\r\n    {\r\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\r\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\r\n        assembly {\r\n            approvedAddressSlot := tokenApproval.slot\r\n            approvedAddress := sload(approvedAddressSlot)\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                      TRANSFER OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token\r\n     * by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public payable virtual override {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\r\n\r\n        // The nested ifs save around 20+ gas over a compound boolean condition.\r\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\r\n\r\n        if (to == address(0)) revert TransferToZeroAddress();\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\r\n        unchecked {\r\n            // We can directly increment and decrement the balances.\r\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\r\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\r\n\r\n            // Updates:\r\n            // - `address` to the next owner.\r\n            // - `startTimestamp` to the timestamp of transfering.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `true`.\r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                to,\r\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, tokenId);\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public payable virtual override {\r\n        safeTransferFrom(from, to, tokenId, '');\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token\r\n     * by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement\r\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public payable virtual override {\r\n        transferFrom(from, to, tokenId);\r\n        if (to.code.length != 0)\r\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before a set of serially-ordered token IDs\r\n     * are about to be transferred. This includes minting.\r\n     * And also called before burning one token.\r\n     *\r\n     * `startTokenId` - the first token ID to be transferred.\r\n     * `quantity` - the amount to be transferred.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after a set of serially-ordered token IDs\r\n     * have been transferred. This includes minting.\r\n     * And also called after one token has been burned.\r\n     *\r\n     * `startTokenId` - the first token ID to be transferred.\r\n     * `quantity` - the amount to be transferred.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` has been minted for `to`.\r\n     * - When `to` is zero, `tokenId` has been burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\r\n     *\r\n     * `from` - Previous owner of the given token ID.\r\n     * `to` - Target address that will receive the token.\r\n     * `tokenId` - Token ID to be transferred.\r\n     * `_data` - Optional data to send along with the call.\r\n     *\r\n     * Returns whether the call correctly returned the expected magic value.\r\n     */\r\n    function _checkContractOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\r\n            bytes4 retval\r\n        ) {\r\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\r\n        } catch (bytes memory reason) {\r\n            if (reason.length == 0) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            } else {\r\n                assembly {\r\n                    revert(add(32, reason), mload(reason))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                        MINT OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event for each mint.\r\n     */\r\n    function _mint(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\r\n        // `tokenId` has a maximum limit of 2**256.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\r\n\r\n            // Updates:\r\n            // - `address` to the owner.\r\n            // - `startTimestamp` to the timestamp of minting.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `quantity == 1`.\r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            uint256 toMasked;\r\n            uint256 end = startTokenId + quantity;\r\n\r\n            // Use assembly to loop and emit the `Transfer` event for gas savings.\r\n            // The duplicated `log4` removes an extra check and reduces stack juggling.\r\n            // The assembly, together with the surrounding Solidity code, have been\r\n            // delicately arranged to nudge the compiler into producing optimized opcodes.\r\n            assembly {\r\n                // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n                toMasked := and(to, _BITMASK_ADDRESS)\r\n                // Emit the `Transfer` event.\r\n                log4(\r\n                    0, // Start of data (0, since no data).\r\n                    0, // End of data (0, since no data).\r\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\r\n                    0, // `address(0)`.\r\n                    toMasked, // `to`.\r\n                    startTokenId // `tokenId`.\r\n                )\r\n\r\n                // The `iszero(eq(,))` check ensures that large values of `quantity`\r\n                // that overflows uint256 will make the loop run out of gas.\r\n                // The compiler will optimize the `iszero` away for performance.\r\n                for {\r\n                    let tokenId := add(startTokenId, 1)\r\n                } iszero(eq(tokenId, end)) {\r\n                    tokenId := add(tokenId, 1)\r\n                } {\r\n                    // Emit the `Transfer` event. Similar to above.\r\n                    log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId)\r\n                }\r\n            }\r\n            if (toMasked == 0) revert MintToZeroAddress();\r\n\r\n            _currentIndex = end;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * This function is intended for efficient minting only during contract creation.\r\n     *\r\n     * It emits only one {ConsecutiveTransfer} as defined in\r\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\r\n     * instead of a sequence of {Transfer} event(s).\r\n     *\r\n     * Calling this function outside of contract creation WILL make your contract\r\n     * non-compliant with the ERC721 standard.\r\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\r\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {ConsecutiveTransfer} event.\r\n     */\r\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (to == address(0)) revert MintToZeroAddress();\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\r\n\r\n            // Updates:\r\n            // - `address` to the owner.\r\n            // - `startTimestamp` to the timestamp of minting.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `quantity == 1`.\r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\r\n\r\n            _currentIndex = startTokenId + quantity;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement\r\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * See {_mint}.\r\n     *\r\n     * Emits a {Transfer} event for each mint.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal virtual {\r\n        _mint(to, quantity);\r\n\r\n        unchecked {\r\n            if (to.code.length != 0) {\r\n                uint256 end = _currentIndex;\r\n                uint256 index = end - quantity;\r\n                do {\r\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\r\n                        revert TransferToNonERC721ReceiverImplementer();\r\n                    }\r\n                } while (index < end);\r\n                // Reentrancy protection.\r\n                if (_currentIndex != end) revert();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\r\n     */\r\n    function _safeMint(address to, uint256 quantity) internal virtual {\r\n        _safeMint(to, quantity, '');\r\n    }\r\n\r\n    // =============================================================\r\n    //                        BURN OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Equivalent to `_burn(tokenId, false)`.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        _burn(tokenId, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        address from = address(uint160(prevOwnershipPacked));\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\r\n\r\n        if (approvalCheck) {\r\n            // The nested ifs save around 20+ gas over a compound boolean condition.\r\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\r\n        }\r\n\r\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance -= 1`.\r\n            // - `numberBurned += 1`.\r\n            //\r\n            // We can directly decrement the balance, and increment the number burned.\r\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\r\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\r\n\r\n            // Updates:\r\n            // - `address` to the last owner.\r\n            // - `startTimestamp` to the timestamp of burning.\r\n            // - `burned` to `true`.\r\n            // - `nextInitialized` to `true`.\r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                from,\r\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, address(0), tokenId);\r\n        _afterTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\r\n        unchecked {\r\n            _burnCounter++;\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                     EXTRA DATA OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Directly sets the extra data for the ownership data `index`.\r\n     */\r\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\r\n        uint256 packed = _packedOwnerships[index];\r\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\r\n        uint256 extraDataCasted;\r\n        // Cast `extraData` with assembly to avoid redundant masking.\r\n        assembly {\r\n            extraDataCasted := extraData\r\n        }\r\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\r\n        _packedOwnerships[index] = packed;\r\n    }\r\n\r\n    /**\r\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\r\n     * Intended to be overridden by the cosumer contract.\r\n     *\r\n     * `previousExtraData` - the value of `extraData` before transfer.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _extraData(\r\n        address from,\r\n        address to,\r\n        uint24 previousExtraData\r\n    ) internal view virtual returns (uint24) {}\r\n\r\n    /**\r\n     * @dev Returns the next extra data for the packed ownership data.\r\n     * The returned result is shifted into position.\r\n     */\r\n    function _nextExtraData(\r\n        address from,\r\n        address to,\r\n        uint256 prevOwnershipPacked\r\n    ) private view returns (uint256) {\r\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\r\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\r\n    }\r\n\r\n    // =============================================================\r\n    //                       OTHER OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the message sender (defaults to `msg.sender`).\r\n     *\r\n     * If you are writing GSN compatible contracts, you need to override this function.\r\n     */\r\n    function _msgSenderERC721A() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a uint256 to its ASCII string decimal representation.\r\n     */\r\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\r\n        assembly {\r\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\r\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\r\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\r\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\r\n            let m := add(mload(0x40), 0xa0)\r\n            // Update the free memory pointer to allocate.\r\n            mstore(0x40, m)\r\n            // Assign the `str` to the end.\r\n            str := sub(m, 0x20)\r\n            // Zeroize the slot after the string.\r\n            mstore(str, 0)\r\n\r\n            // Cache the end of the memory to calculate the length later.\r\n            let end := str\r\n\r\n            // We write the string from rightmost digit to leftmost digit.\r\n            // The following is essentially a do-while loop that also handles the zero case.\r\n            // prettier-ignore\r\n            for { let temp := value } 1 {} {\r\n                str := sub(str, 1)\r\n                // Write the character to the pointer.\r\n                // The ASCII index of the '0' character is 48.\r\n                mstore8(str, add(48, mod(temp, 10)))\r\n                // Keep dividing `temp` until zero.\r\n                temp := div(temp, 10)\r\n                // prettier-ignore\r\n                if iszero(temp) { break }\r\n            }\r\n\r\n            let length := sub(end, str)\r\n            // Move the pointer 32 bytes leftwards to make room for the length.\r\n            str := sub(str, 0x20)\r\n            // Store the length.\r\n            mstore(str, length)\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v4.2.3\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev Interface of ERC721A.\r\n */\r\ninterface IERC721A {\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error ApprovalCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error ApprovalQueryForNonexistentToken();\r\n\r\n    /**\r\n     * Cannot query the balance for the zero address.\r\n     */\r\n    error BalanceQueryForZeroAddress();\r\n\r\n    /**\r\n     * Cannot mint to the zero address.\r\n     */\r\n    error MintToZeroAddress();\r\n\r\n    /**\r\n     * The quantity of tokens minted must be more than zero.\r\n     */\r\n    error MintZeroQuantity();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error OwnerQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error TransferCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token must be owned by `from`.\r\n     */\r\n    error TransferFromIncorrectOwner();\r\n\r\n    /**\r\n     * Cannot safely transfer to a contract that does not implement the\r\n     * ERC721Receiver interface.\r\n     */\r\n    error TransferToNonERC721ReceiverImplementer();\r\n\r\n    /**\r\n     * Cannot transfer to the zero address.\r\n     */\r\n    error TransferToZeroAddress();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error URIQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\r\n     */\r\n    error MintERC2309QuantityExceedsLimit();\r\n\r\n    /**\r\n     * The `extraData` cannot be set on an unintialized ownership slot.\r\n     */\r\n    error OwnershipNotInitializedForExtraData();\r\n\r\n    // =============================================================\r\n    //                            STRUCTS\r\n    // =============================================================\r\n\r\n    struct TokenOwnership {\r\n        // The address of the owner.\r\n        address addr;\r\n        // Stores the start time of ownership with minimal overhead for tokenomics.\r\n        uint64 startTimestamp;\r\n        // Whether the token has been burned.\r\n        bool burned;\r\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\r\n        uint24 extraData;\r\n    }\r\n\r\n    // =============================================================\r\n    //                         TOKEN COUNTERS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens in existence.\r\n     * Burned tokens will reduce the count.\r\n     * To get the total number of tokens minted, please see {_totalMinted}.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    // =============================================================\r\n    //                            IERC165\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n\r\n    // =============================================================\r\n    //                            IERC721\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables\r\n     * (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in `owner`'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\r\n     * checking first that contract recipients are aware of the ERC721 protocol\r\n     * to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move\r\n     * this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement\r\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external payable;\r\n\r\n    /**\r\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external payable;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\r\n     * whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token\r\n     * by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external payable;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the\r\n     * zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external payable;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom}\r\n     * for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    // =============================================================\r\n    //                        IERC721Metadata\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n\r\n    // =============================================================\r\n    //                           IERC2309\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\r\n     * (inclusive) is transferred from `from` to `to`, as defined in the\r\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\r\n     *\r\n     * See {_mintERC2309} for more details.\r\n     */\r\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"StringsUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":199:2297  library StringsUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":199:2297  library StringsUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201e9b282b9caeb07ae25126fa2b621a739faa31b8ba098d76fa3b9fea2a613bc664736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e9b282b9caeb07ae25126fa2b621a739faa31b8ba098d76fa3b9fea2a613bc664736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E SWAP12 0x28 0x2B SWAP13 0xAE 0xB0 PUSH27 0xE25126FA2B621A739FAA31B8BA098D76FA3B9FEA2A613BC664736F PUSH13 0x634300080C0033000000000000 ",
							"sourceMap": "199:2098:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;199:2098:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e9b282b9caeb07ae25126fa2b621a739faa31b8ba098d76fa3b9fea2a613bc664736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E SWAP12 0x28 0x2B SWAP13 0xAE 0xB0 PUSH27 0xE25126FA2B621A739FAA31B8BA098D76FA3B9FEA2A613BC664736F PUSH13 0x634300080C0033000000000000 ",
							"sourceMap": "199:2098:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e9b282b9caeb07ae25126fa2b621a739faa31b8ba098d76fa3b9fea2a613bc664736f6c634300080c0033",
									".code": [
										{
											"begin": 199,
											"end": 2297,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"MathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12515  library MathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12515  library MathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205f2e02ad6f029a5aa5e9075b601aab536e98246d83a648c11579430386d6835c64736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f2e02ad6f029a5aa5e9075b601aab536e98246d83a648c11579430386d6835c64736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0x2E MUL 0xAD PUSH16 0x29A5AA5E9075B601AAB536E98246D83 0xA6 BASEFEE 0xC1 ISZERO PUSH26 0x430386D6835C64736F6C634300080C0033000000000000000000 ",
							"sourceMap": "202:12313:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12313:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f2e02ad6f029a5aa5e9075b601aab536e98246d83a648c11579430386d6835c64736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0x2E MUL 0xAD PUSH16 0x29A5AA5E9075B601AAB536E98246D83 0xA6 BASEFEE 0xC1 ISZERO PUSH26 0x430386D6835C64736F6C634300080C0033000000000000000000 ",
							"sourceMap": "202:12313:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum MathUpgradeable.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum MathUpgradeable.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205f2e02ad6f029a5aa5e9075b601aab536e98246d83a648c11579430386d6835c64736f6c634300080c0033",
									".code": [
										{
											"begin": 202,
											"end": 12515,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1047,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1163,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC721A.sol\":930:42437  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC721A.sol\":5085:5243  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC721A.sol\":5152:5165  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"contracts/ERC721A.sol\":5152:5157  _name */\n  0x02\n  swap1\n    /* \"contracts/ERC721A.sol\":5152:5165  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/ERC721A.sol\":5176:5193  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"contracts/ERC721A.sol\":5176:5183  _symbol */\n  0x03\n  swap1\n    /* \"contracts/ERC721A.sol\":5176:5193  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"contracts/ERC721A.sol\":5635:5642  uint256 */\n  0x00\n    /* \"contracts/ERC721A.sol\":5204:5235  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"contracts/ERC721A.sol\":930:42437  contract ERC721A is IERC721A {... */\n  jump(tag_26)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_16\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_19)\ntag_16:\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_19)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_19\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\n  pop\n  tag_20\n  swap3\n  swap2\n  pop\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_22)\n    /* \"#utility.yul\":14:141   */\ntag_24:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_25:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_29:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_31\n  tag_24\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_33\n  tag_24\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_34:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_35:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_35)\ntag_37:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_38:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_40:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_41:\n    /* \"#utility.yul\":1354:1415   */\n  tag_42\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_25\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_44\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_25\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_14:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_46:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  eq\n    /* \"#utility.yul\":1816:1977   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_47:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_26:\n    /* \"contracts/ERC721A.sol\":930:42437  contract ERC721A is IERC721A {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC721A.sol\":930:42437  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC721A.sol\":9410:10049  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/ERC721A.sol\":9410:10049  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":10312:10412  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":16803:17021  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1692:1724   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1674:1725   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1662:1664   */\n      0x20\n        /* \"#utility.yul\":1647:1665   */\n      add\n        /* \"contracts/ERC721A.sol\":16803:17021  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1528:1731   */\n      jump\n        /* \"contracts/ERC721A.sol\":16236:16644  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/ERC721A.sol\":6063:6386  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n        /* \"contracts/ERC721A.sol\":6337:6349  _burnCounter */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":6124:6131  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":6321:6334  _currentIndex */\n      sload\n        /* \"contracts/ERC721A.sol\":6321:6349  _currentIndex - _burnCounter */\n      sub\n        /* \"contracts/ERC721A.sol\":6063:6386  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":2319:2344   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2307:2309   */\n      0x20\n        /* \"#utility.yul\":2292:2310   */\n      add\n        /* \"contracts/ERC721A.sol\":6063:6386  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":2173:2350   */\n      jump\n        /* \"contracts/ERC721A.sol\":20442:23267  function transferFrom(... */\n    tag_7:\n      tag_38\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":23363:23556  function safeTransferFrom(... */\n    tag_8:\n      tag_38\n      tag_52\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":11705:11857  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_32\n      tag_56\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":7247:7480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_43\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":10488:10592  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_27\n      tag_67\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17361:17595  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_38\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":24154:24561  function safeTransferFrom(... */\n    tag_13:\n      tag_38\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":10698:11016  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_27\n      tag_80\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17752:17916  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_20\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":17873:17898  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":17849:17853  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":17873:17898  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17873:17891  _operatorApprovals */\n      0x07\n        /* \"contracts/ERC721A.sol\":17873:17898  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC721A.sol\":17873:17908  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":17752:17916  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/ERC721A.sol\":9410:10049  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"contracts/ERC721A.sol\":9495:9499  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":9819:9844  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"contracts/ERC721A.sol\":9819:9921  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_90\n      jumpi\n      pop\n      shl(0xe0, 0x80ac58cd)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":9896:9921  interfaceId == 0x80ac58cd */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":9819:9921  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_90:\n        /* \"contracts/ERC721A.sol\":9819:9998  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_91\n      jumpi\n      pop\n      shl(0xe0, 0x5b5e139f)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":9973:9998  interfaceId == 0x5b5e139f */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":9819:9998  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_91:\n        /* \"contracts/ERC721A.sol\":9799:9998  return... */\n      swap3\n        /* \"contracts/ERC721A.sol\":9410:10049  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10312:10412  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"contracts/ERC721A.sol\":10366:10379  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10399:10404  _name */\n      0x02\n        /* \"contracts/ERC721A.sol\":10392:10404  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":10312:10412  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":16803:17021  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"contracts/ERC721A.sol\":16879:16886  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":16904:16920  _exists(tokenId) */\n      tag_100\n        /* \"contracts/ERC721A.sol\":16912:16919  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":16904:16911  _exists */\n      tag_101\n        /* \"contracts/ERC721A.sol\":16904:16920  _exists(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/ERC721A.sol\":16899:16963  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_102\n      jumpi\n        /* \"contracts/ERC721A.sol\":16929:16963  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":16899:16963  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_102:\n      pop\n        /* \"contracts/ERC721A.sol\":16983:17007  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":16983:16998  _tokenApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":16983:17007  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":16983:17013  _tokenApprovals[tokenId].value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":16803:17021  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":16236:16644  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_41:\n        /* \"contracts/ERC721A.sol\":16325:16338  address owner */\n      0x00\n        /* \"contracts/ERC721A.sol\":16341:16357  ownerOf(tokenId) */\n      tag_104\n        /* \"contracts/ERC721A.sol\":16349:16356  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":16341:16348  ownerOf */\n      tag_57\n        /* \"contracts/ERC721A.sol\":16341:16357  ownerOf(tokenId) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/ERC721A.sol\":16325:16357  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":40569:40579  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":16374:16402  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":16370:16545  if (_msgSenderERC721A() != owner)... */\n      tag_110\n      jumpi\n        /* \"contracts/ERC721A.sol\":16422:16466  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_108\n        /* \"contracts/ERC721A.sol\":16439:16444  owner */\n      dup2\n        /* \"contracts/ERC721A.sol\":40569:40579  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17752:17916  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":16422:16466  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_108:\n        /* \"contracts/ERC721A.sol\":16417:16545  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_110\n      jumpi\n        /* \"contracts/ERC721A.sol\":16494:16529  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":16417:16545  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_110:\n        /* \"contracts/ERC721A.sol\":16557:16581  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":16557:16572  _tokenApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":16557:16581  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC721A.sol\":16557:16592  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC721A.sol\":16608:16636  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"contracts/ERC721A.sol\":16557:16581  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"contracts/ERC721A.sol\":16608:16636  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"contracts/ERC721A.sol\":16314:16644  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":16236:16644  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":20442:23267  function transferFrom(... */\n    tag_50:\n        /* \"contracts/ERC721A.sol\":20584:20611  uint256 prevOwnershipPacked */\n      0x00\n        /* \"contracts/ERC721A.sol\":20614:20641  _packedOwnershipOf(tokenId) */\n      tag_115\n        /* \"contracts/ERC721A.sol\":20633:20640  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":20614:20632  _packedOwnershipOf */\n      tag_116\n        /* \"contracts/ERC721A.sol\":20614:20641  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/ERC721A.sol\":20584:20641  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":20699:20703  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":20658:20703  address(uint160(prevOwnershipPacked)) != from */\n      and\n        /* \"contracts/ERC721A.sol\":20674:20693  prevOwnershipPacked */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":20658:20703  address(uint160(prevOwnershipPacked)) != from */\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":20654:20740  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_117\n      jumpi\n        /* \"contracts/ERC721A.sol\":20712:20740  TransferFromIncorrectOwner() */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":20654:20740  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_117:\n        /* \"contracts/ERC721A.sol\":20754:20781  uint256 approvedAddressSlot */\n      0x00\n        /* \"contracts/ERC721A.sol\":19550:19574  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":19550:19565  _tokenApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":19550:19574  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":19778:19804  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":40569:40579  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":19175:19205  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":18868:18896  and(owner, _BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"contracts/ERC721A.sol\":19153:19173  eq(msgSender, owner) */\n      swap1\n      swap2\n      eq\n        /* \"contracts/ERC721A.sol\":19150:19206  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"contracts/ERC721A.sol\":20940:21120  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_126\n      jumpi\n        /* \"contracts/ERC721A.sol\":21033:21076  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_124\n        /* \"contracts/ERC721A.sol\":21050:21054  from */\n      dup7\n        /* \"contracts/ERC721A.sol\":40569:40579  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17752:17916  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":21033:21076  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_124:\n        /* \"contracts/ERC721A.sol\":21028:21120  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_126\n      jumpi\n        /* \"contracts/ERC721A.sol\":21085:21120  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":21028:21120  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":21137:21153  to == address(0) */\n      dup6\n      and\n        /* \"contracts/ERC721A.sol\":21133:21185  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_127\n      jumpi\n        /* \"contracts/ERC721A.sol\":21162:21185  TransferToZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":21133:21185  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_127:\n        /* \"contracts/ERC721A.sol\":21334:21349  approvedAddress */\n      dup1\n        /* \"contracts/ERC721A.sol\":21331:21491  if approvedAddress {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"contracts/ERC721A.sol\":21474:21475  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":21453:21472  approvedAddressSlot */\n      dup3\n        /* \"contracts/ERC721A.sol\":21446:21476  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"contracts/ERC721A.sol\":21331:21491  if approvedAddress {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":21871:21895  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":21871:21889  _packedAddressData */\n      0x05\n        /* \"contracts/ERC721A.sol\":21871:21895  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC721A.sol\":21869:21895  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":21940:21962  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":21938:21962  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":15094:15105  timestamp() */\n      timestamp\n        /* \"contracts/ERC721A.sol\":15069:15092  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"contracts/ERC721A.sol\":15065:15106  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"contracts/ERC721A.sol\":15052:15115  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"contracts/ERC721A.sol\":22233:22259  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":22233:22250  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":22233:22259  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":22233:22408  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      sstore\n      shl(0xe1, 0x01)\n        /* \"contracts/ERC721A.sol\":22528:22575  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup4\n      and\n        /* \"contracts/ERC721A.sol\":22524:23151  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_135\n      jumpi\n        /* \"contracts/ERC721A.sol\":22633:22634  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":22623:22634  tokenId + 1 */\n      dup5\n      add\n        /* \"contracts/ERC721A.sol\":22601:22620  uint256 nextTokenId */\n      0x00\n        /* \"contracts/ERC721A.sol\":22756:22786  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":22756:22773  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":22756:22786  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":22752:23136  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_137\n      jumpi\n        /* \"contracts/ERC721A.sol\":22894:22907  _currentIndex */\n      sload(0x00)\n        /* \"contracts/ERC721A.sol\":22879:22890  nextTokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":22879:22907  nextTokenId != _currentIndex */\n      eq\n        /* \"contracts/ERC721A.sol\":22875:23117  if (nextTokenId != _currentIndex) {... */\n      tag_137\n      jumpi\n        /* \"contracts/ERC721A.sol\":23041:23071  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":23041:23058  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":23041:23071  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":23041:23093  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":22875:23117  if (nextTokenId != _currentIndex) {... */\n    tag_137:\n        /* \"contracts/ERC721A.sol\":22582:23151  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":22524:23151  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_135:\n        /* \"contracts/ERC721A.sol\":23198:23205  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":23194:23196  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":23179:23206  Transfer(from, to, tokenId) */\n      and\n        /* \"contracts/ERC721A.sol\":23188:23192  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":23179:23206  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC721A.sol\":20573:23267  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":20442:23267  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":23363:23556  function safeTransferFrom(... */\n    tag_53:\n        /* \"contracts/ERC721A.sol\":23509:23548  safeTransferFrom(from, to, tokenId, '') */\n      tag_141\n        /* \"contracts/ERC721A.sol\":23526:23530  from */\n      dup4\n        /* \"contracts/ERC721A.sol\":23532:23534  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":23536:23543  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":23509:23548  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721A.sol\":23509:23525  safeTransferFrom */\n      tag_77\n        /* \"contracts/ERC721A.sol\":23509:23548  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_141:\n        /* \"contracts/ERC721A.sol\":23363:23556  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":11705:11857  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"contracts/ERC721A.sol\":11777:11784  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":11820:11847  _packedOwnershipOf(tokenId) */\n      tag_91\n        /* \"contracts/ERC721A.sol\":11839:11846  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":11820:11838  _packedOwnershipOf */\n      tag_116\n        /* \"contracts/ERC721A.sol\":11820:11847  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":7247:7480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"contracts/ERC721A.sol\":7319:7326  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":7343:7362  owner == address(0) */\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":7339:7399  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_145\n      jumpi\n        /* \"contracts/ERC721A.sol\":7371:7399  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":7339:7399  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_145:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":7417:7442  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":7417:7435  _packedAddressData */\n      0x05\n        /* \"contracts/ERC721A.sol\":7417:7442  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":1406:1419  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"contracts/ERC721A.sol\":7417:7472  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":7247:7480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10488:10592  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"contracts/ERC721A.sol\":10544:10557  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10577:10584  _symbol */\n      0x03\n        /* \"contracts/ERC721A.sol\":10570:10584  return _symbol */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17361:17595  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"contracts/ERC721A.sol\":40569:40579  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17456:17495  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17456:17474  _operatorApprovals */\n      0x07\n        /* \"contracts/ERC721A.sol\":17456:17495  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":17456:17505  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":17456:17516  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC721A.sol\":17532:17587  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17456:17505  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"contracts/ERC721A.sol\":40569:40579  msg.sender */\n      swap2\n        /* \"contracts/ERC721A.sol\":17532:17587  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/ERC721A.sol\":17532:17587  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC721A.sol\":17361:17595  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":24154:24561  function safeTransferFrom(... */\n    tag_77:\n        /* \"contracts/ERC721A.sol\":24329:24360  transferFrom(from, to, tokenId) */\n      tag_157\n        /* \"contracts/ERC721A.sol\":24342:24346  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":24348:24350  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":24352:24359  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":24329:24341  transferFrom */\n      tag_50\n        /* \"contracts/ERC721A.sol\":24329:24360  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":24375:24389  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"contracts/ERC721A.sol\":24375:24394  to.code.length != 0 */\n      iszero\n        /* \"contracts/ERC721A.sol\":24371:24554  if (to.code.length != 0)... */\n      tag_161\n      jumpi\n        /* \"contracts/ERC721A.sol\":24414:24470  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_159\n        /* \"contracts/ERC721A.sol\":24445:24449  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":24451:24453  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":24455:24462  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":24464:24469  _data */\n      dup5\n        /* \"contracts/ERC721A.sol\":24414:24444  _checkContractOnERC721Received */\n      tag_160\n        /* \"contracts/ERC721A.sol\":24414:24470  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/ERC721A.sol\":24409:24554  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_161\n      jumpi\n        /* \"contracts/ERC721A.sol\":24498:24538  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":24409:24554  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_161:\n        /* \"contracts/ERC721A.sol\":24154:24561  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10698:11016  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"contracts/ERC721A.sol\":10771:10784  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10802:10818  _exists(tokenId) */\n      tag_163\n        /* \"contracts/ERC721A.sol\":10810:10817  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":10802:10809  _exists */\n      tag_101\n        /* \"contracts/ERC721A.sol\":10802:10818  _exists(tokenId) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/ERC721A.sol\":10797:10856  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_164\n      jumpi\n        /* \"contracts/ERC721A.sol\":10827:10856  URIQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe4, 0x0a14c4b5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":10797:10856  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_164:\n        /* \"contracts/ERC721A.sol\":10869:10890  string memory baseURI */\n      0x00\n        /* \"contracts/ERC721A.sol\":10893:10903  _baseURI() */\n      tag_165\n        /* \"contracts/ERC721A.sol\":11345:11354  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"contracts/ERC721A.sol\":11268:11362  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"contracts/ERC721A.sol\":10893:10903  _baseURI() */\n    tag_165:\n        /* \"contracts/ERC721A.sol\":10869:10903  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":10927:10934  baseURI */\n      dup1\n        /* \"contracts/ERC721A.sol\":10921:10942  bytes(baseURI).length */\n      mload\n        /* \"contracts/ERC721A.sol\":10946:10947  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":10921:10947  bytes(baseURI).length != 0 */\n      eq\n      iszero\n        /* \"contracts/ERC721A.sol\":10921:11008  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_167\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_168)\n    tag_167:\n        /* \"contracts/ERC721A.sol\":10974:10981  baseURI */\n      dup1\n        /* \"contracts/ERC721A.sol\":10983:11001  _toString(tokenId) */\n      tag_169\n        /* \"contracts/ERC721A.sol\":10993:11000  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":10983:10992  _toString */\n      tag_170\n        /* \"contracts/ERC721A.sol\":10983:11001  _toString(tokenId) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/ERC721A.sol\":10957:11002  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC721A.sol\":10921:11008  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_168:\n        /* \"contracts/ERC721A.sol\":10914:11008  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"contracts/ERC721A.sol\":10698:11016  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":18174:18456  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_101:\n        /* \"contracts/ERC721A.sol\":18239:18243  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":18329:18342  _currentIndex */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":18319:18326  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":18319:18342  tokenId < _currentIndex */\n      lt\n        /* \"contracts/ERC721A.sol\":18276:18429  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":18380:18406  _packedOwnerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":18380:18397  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":18380:18406  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"contracts/ERC721A.sol\":18380:18424  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"contracts/ERC721A.sol\":18380:18429  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n        /* \"contracts/ERC721A.sol\":18174:18456  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":12860:14135  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_116:\n        /* \"contracts/ERC721A.sol\":12927:12934  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":12962:12969  tokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":13064:13077  _currentIndex */\n      sload(0x00)\n        /* \"contracts/ERC721A.sol\":13057:13061  curr */\n      dup2\n        /* \"contracts/ERC721A.sol\":13057:13077  curr < _currentIndex */\n      lt\n        /* \"contracts/ERC721A.sol\":13053:14068  if (curr < _currentIndex) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"contracts/ERC721A.sol\":13102:13116  uint256 packed */\n      0x00\n        /* \"contracts/ERC721A.sol\":13119:13142  _packedOwnerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":13119:13136  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":13119:13142  _packedOwnerships[curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"contracts/ERC721A.sol\":13208:13232  packed & _BITMASK_BURNED */\n      dup2\n      and\n        /* \"contracts/ERC721A.sol\":13204:14049  if (packed & _BITMASK_BURNED == 0) {... */\n      tag_184\n      jumpi\n        /* \"contracts/ERC721A.sol\":13873:13986  while (packed == 0) {... */\n    tag_185:\n        /* \"contracts/ERC721A.sol\":13880:13891  packed == 0 */\n      dup1\n        /* \"contracts/ERC721A.sol\":13873:13986  while (packed == 0) {... */\n      tag_168\n      jumpi\n      pop\n      not(0x00)\n        /* \"contracts/ERC721A.sol\":13951:13957  --curr */\n      add\n        /* \"contracts/ERC721A.sol\":13933:13958  _packedOwnerships[--curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":13933:13950  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":13933:13958  _packedOwnerships[--curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":13873:13986  while (packed == 0) {... */\n      jump(tag_185)\n        /* \"contracts/ERC721A.sol\":13204:14049  if (packed & _BITMASK_BURNED == 0) {... */\n    tag_184:\n        /* \"contracts/ERC721A.sol\":13079:14068  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":13053:14068  if (curr < _currentIndex) {... */\n    tag_183:\n        /* \"contracts/ERC721A.sol\":14096:14127  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":26645:27361  function _checkContractOnERC721Received(... */\n    tag_160:\n        /* \"contracts/ERC721A.sol\":26829:26917  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":26808:26812  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":26829:26874  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"contracts/ERC721A.sol\":26829:26917  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_197\n      swap1\n        /* \"contracts/ERC721A.sol\":40569:40579  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ERC721A.sol\":26896:26900  from */\n      dup10\n      swap1\n        /* \"contracts/ERC721A.sol\":26902:26909  tokenId */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":26911:26916  _data */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":26829:26917  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_198\n      jump\t// in\n    tag_197:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_200\n      swap2\n      dup2\n      add\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      0x01\n    tag_199:\n        /* \"contracts/ERC721A.sol\":26825:27354  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_202\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_207\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_206)\n    tag_207:\n      0x60\n      swap2\n      pop\n    tag_206:\n      pop\n        /* \"contracts/ERC721A.sol\":27112:27125  reason.length */\n      dup1\n      mload\n        /* \"contracts/ERC721A.sol\":27108:27343  if (reason.length == 0) {... */\n      tag_208\n      jumpi\n        /* \"contracts/ERC721A.sol\":27158:27198  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":27108:27343  if (reason.length == 0) {... */\n    tag_208:\n        /* \"contracts/ERC721A.sol\":27301:27307  reason */\n      dup1\n        /* \"contracts/ERC721A.sol\":27295:27308  mload(reason) */\n      mload\n        /* \"contracts/ERC721A.sol\":27286:27292  reason */\n      dup2\n        /* \"contracts/ERC721A.sol\":27282:27284  32 */\n      0x20\n        /* \"contracts/ERC721A.sol\":27278:27293  add(32, reason) */\n      add\n        /* \"contracts/ERC721A.sol\":27271:27309  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/ERC721A.sol\":26825:27354  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_202:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":26988:27052  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":26645:27361  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":40689:42434  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_170:\n        /* \"contracts/ERC721A.sol\":40754:40771  string memory str */\n      0x60\n        /* \"contracts/ERC721A.sol\":41188:41192  0xa0 */\n      0xa0\n        /* \"contracts/ERC721A.sol\":41181:41185  0x40 */\n      0x40\n        /* \"contracts/ERC721A.sol\":41175:41186  mload(0x40) */\n      mload\n        /* \"contracts/ERC721A.sol\":41171:41193  add(mload(0x40), 0xa0) */\n      add\n        /* \"contracts/ERC721A.sol\":41280:41281  m */\n      dup1\n        /* \"contracts/ERC721A.sol\":41274:41278  0x40 */\n      0x40\n        /* \"contracts/ERC721A.sol\":41267:41282  mstore(0x40, m) */\n      mstore\n        /* \"contracts/ERC721A.sol\":41355:41359  0x20 */\n      0x20\n        /* \"contracts/ERC721A.sol\":41352:41353  m */\n      dup2\n        /* \"contracts/ERC721A.sol\":41348:41360  sub(m, 0x20) */\n      sub\n        /* \"contracts/ERC721A.sol\":41341:41360  str := sub(m, 0x20) */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":41437:41438  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":41432:41435  str */\n      dup2\n        /* \"contracts/ERC721A.sol\":41425:41439  mstore(str, 0) */\n      mstore\n        /* \"contracts/ERC721A.sol\":41541:41544  str */\n      dup1\n        /* \"contracts/ERC721A.sol\":41780:41785  value */\n      dup3\n        /* \"contracts/ERC721A.sol\":41762:42190  for { let temp := value } 1 {} {... */\n    tag_213:\n        /* \"contracts/ERC721A.sol\":41828:41829  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":41823:41826  str */\n      dup4\n        /* \"contracts/ERC721A.sol\":41819:41830  sub(str, 1) */\n      sub\n        /* \"contracts/ERC721A.sol\":41812:41830  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"contracts/ERC721A.sol\":41999:42001  10 */\n      0x0a\n        /* \"contracts/ERC721A.sol\":41993:41997  temp */\n      dup2\n        /* \"contracts/ERC721A.sol\":41989:42002  mod(temp, 10) */\n      mod\n        /* \"contracts/ERC721A.sol\":41985:41987  48 */\n      0x30\n        /* \"contracts/ERC721A.sol\":41981:42003  add(48, mod(temp, 10)) */\n      add\n        /* \"contracts/ERC721A.sol\":41976:41979  str */\n      dup4\n        /* \"contracts/ERC721A.sol\":41968:42004  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"contracts/ERC721A.sol\":42093:42095  10 */\n      0x0a\n        /* \"contracts/ERC721A.sol\":42083:42096  div(temp, 10) */\n      swap1\n      div\n      dup1\n        /* \"contracts/ERC721A.sol\":42150:42175  if iszero(temp) { break } */\n      tag_216\n      jumpi\n        /* \"contracts/ERC721A.sol\":42168:42173  break */\n      jump(tag_215)\n        /* \"contracts/ERC721A.sol\":42150:42175  if iszero(temp) { break } */\n    tag_216:\n        /* \"contracts/ERC721A.sol\":41762:42190  for { let temp := value } 1 {} {... */\n      jump(tag_213)\n    tag_215:\n      pop\n        /* \"contracts/ERC721A.sol\":42220:42233  sub(end, str) */\n      dup2\n      swap1\n      sub\n      not(0x1f)\n        /* \"contracts/ERC721A.sol\":42335:42349  sub(str, 0x20) */\n      swap1\n      swap2\n      add\n        /* \"contracts/ERC721A.sol\":42397:42416  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":42335:42349  sub(str, 0x20) */\n      swap2\n        /* \"contracts/ERC721A.sol\":40689:42434  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_218:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":68:139   */\n    tag_225:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:395   */\n    tag_22:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_227:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_168\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_218\n      jump\t// in\n        /* \"#utility.yul\":592:850   */\n    tag_219:\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":674:787   */\n    tag_231:\n        /* \"#utility.yul\":688:694   */\n      dup4\n        /* \"#utility.yul\":685:686   */\n      dup2\n        /* \"#utility.yul\":682:695   */\n      lt\n        /* \"#utility.yul\":674:787   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":764:775   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":758:776   */\n      mload\n        /* \"#utility.yul\":745:756   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":738:777   */\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x20\n        /* \"#utility.yul\":703:713   */\n      add\n        /* \"#utility.yul\":674:787   */\n      jump(tag_231)\n    tag_233:\n        /* \"#utility.yul\":805:811   */\n      dup4\n        /* \"#utility.yul\":802:803   */\n      dup2\n        /* \"#utility.yul\":799:812   */\n      gt\n        /* \"#utility.yul\":796:844   */\n      iszero\n      tag_161\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":822:838   */\n      swap2\n      add\n        /* \"#utility.yul\":815:842   */\n      mstore\n        /* \"#utility.yul\":592:850   */\n      jump\t// out\n        /* \"#utility.yul\":855:1113   */\n    tag_220:\n        /* \"#utility.yul\":897:900   */\n      0x00\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":929:941   */\n      mload\n        /* \"#utility.yul\":962:968   */\n      dup1\n        /* \"#utility.yul\":957:960   */\n      dup5\n        /* \"#utility.yul\":950:969   */\n      mstore\n        /* \"#utility.yul\":978:1041   */\n      tag_236\n        /* \"#utility.yul\":1034:1040   */\n      dup2\n        /* \"#utility.yul\":1027:1031   */\n      0x20\n        /* \"#utility.yul\":1022:1025   */\n      dup7\n        /* \"#utility.yul\":1018:1032   */\n      add\n        /* \"#utility.yul\":1011:1015   */\n      0x20\n        /* \"#utility.yul\":1004:1009   */\n      dup7\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":978:1041   */\n      tag_219\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1095:1097   */\n      0x1f\n        /* \"#utility.yul\":1074:1089   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1070:1099   */\n      and\n        /* \"#utility.yul\":1061:1100   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1102:1106   */\n      0x20\n        /* \"#utility.yul\":1057:1107   */\n      add\n      swap3\n        /* \"#utility.yul\":855:1113   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1338   */\n    tag_30:\n        /* \"#utility.yul\":1267:1269   */\n      0x20\n        /* \"#utility.yul\":1256:1265   */\n      dup2\n        /* \"#utility.yul\":1249:1270   */\n      mstore\n        /* \"#utility.yul\":1230:1234   */\n      0x00\n        /* \"#utility.yul\":1287:1332   */\n      tag_168\n        /* \"#utility.yul\":1328:1330   */\n      0x20\n        /* \"#utility.yul\":1317:1326   */\n      dup4\n        /* \"#utility.yul\":1313:1331   */\n      add\n        /* \"#utility.yul\":1305:1311   */\n      dup5\n        /* \"#utility.yul\":1287:1332   */\n      tag_220\n      jump\t// in\n        /* \"#utility.yul\":1343:1523   */\n    tag_34:\n        /* \"#utility.yul\":1402:1408   */\n      0x00\n        /* \"#utility.yul\":1455:1457   */\n      0x20\n        /* \"#utility.yul\":1443:1452   */\n      dup3\n        /* \"#utility.yul\":1434:1441   */\n      dup5\n        /* \"#utility.yul\":1430:1453   */\n      sub\n        /* \"#utility.yul\":1426:1458   */\n      slt\n        /* \"#utility.yul\":1423:1475   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1468:1469   */\n      dup1\n        /* \"#utility.yul\":1461:1473   */\n      revert\n        /* \"#utility.yul\":1423:1475   */\n    tag_240:\n      pop\n        /* \"#utility.yul\":1494:1517   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1343:1523   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:1909   */\n    tag_221:\n        /* \"#utility.yul\":1804:1824   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1853:1884   */\n      dup2\n      and\n        /* \"#utility.yul\":1843:1885   */\n      dup2\n      eq\n        /* \"#utility.yul\":1833:1903   */\n      tag_243\n      jumpi\n        /* \"#utility.yul\":1899:1900   */\n      0x00\n        /* \"#utility.yul\":1896:1897   */\n      dup1\n        /* \"#utility.yul\":1889:1901   */\n      revert\n        /* \"#utility.yul\":1833:1903   */\n    tag_243:\n        /* \"#utility.yul\":1736:1909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1914:2168   */\n    tag_40:\n        /* \"#utility.yul\":1982:1988   */\n      0x00\n        /* \"#utility.yul\":1990:1996   */\n      dup1\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2022:2029   */\n      dup6\n        /* \"#utility.yul\":2018:2041   */\n      sub\n        /* \"#utility.yul\":2014:2046   */\n      slt\n        /* \"#utility.yul\":2011:2063   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":2059:2060   */\n      0x00\n        /* \"#utility.yul\":2056:2057   */\n      dup1\n        /* \"#utility.yul\":2049:2061   */\n      revert\n        /* \"#utility.yul\":2011:2063   */\n    tag_245:\n        /* \"#utility.yul\":2082:2111   */\n      tag_246\n        /* \"#utility.yul\":2101:2110   */\n      dup4\n        /* \"#utility.yul\":2082:2111   */\n      tag_221\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2072:2111   */\n      swap5\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2143:2161   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2130:2162   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1914:2168   */\n      jump\t// out\n        /* \"#utility.yul\":2355:2683   */\n    tag_49:\n        /* \"#utility.yul\":2432:2438   */\n      0x00\n        /* \"#utility.yul\":2440:2446   */\n      dup1\n        /* \"#utility.yul\":2448:2454   */\n      0x00\n        /* \"#utility.yul\":2501:2503   */\n      0x60\n        /* \"#utility.yul\":2489:2498   */\n      dup5\n        /* \"#utility.yul\":2480:2487   */\n      dup7\n        /* \"#utility.yul\":2476:2499   */\n      sub\n        /* \"#utility.yul\":2472:2504   */\n      slt\n        /* \"#utility.yul\":2469:2521   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":2517:2518   */\n      0x00\n        /* \"#utility.yul\":2514:2515   */\n      dup1\n        /* \"#utility.yul\":2507:2519   */\n      revert\n        /* \"#utility.yul\":2469:2521   */\n    tag_249:\n        /* \"#utility.yul\":2540:2569   */\n      tag_250\n        /* \"#utility.yul\":2559:2568   */\n      dup5\n        /* \"#utility.yul\":2540:2569   */\n      tag_221\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2530:2569   */\n      swap3\n      pop\n        /* \"#utility.yul\":2588:2626   */\n      tag_251\n        /* \"#utility.yul\":2622:2624   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup6\n        /* \"#utility.yul\":2607:2625   */\n      add\n        /* \"#utility.yul\":2588:2626   */\n      tag_221\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2578:2626   */\n      swap2\n      pop\n        /* \"#utility.yul\":2673:2675   */\n      0x40\n        /* \"#utility.yul\":2662:2671   */\n      dup5\n        /* \"#utility.yul\":2658:2676   */\n      add\n        /* \"#utility.yul\":2645:2677   */\n      calldataload\n        /* \"#utility.yul\":2635:2677   */\n      swap1\n      pop\n        /* \"#utility.yul\":2355:2683   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2688:2874   */\n    tag_62:\n        /* \"#utility.yul\":2747:2753   */\n      0x00\n        /* \"#utility.yul\":2800:2802   */\n      0x20\n        /* \"#utility.yul\":2788:2797   */\n      dup3\n        /* \"#utility.yul\":2779:2786   */\n      dup5\n        /* \"#utility.yul\":2775:2798   */\n      sub\n        /* \"#utility.yul\":2771:2803   */\n      slt\n        /* \"#utility.yul\":2768:2820   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2816:2817   */\n      0x00\n        /* \"#utility.yul\":2813:2814   */\n      dup1\n        /* \"#utility.yul\":2806:2818   */\n      revert\n        /* \"#utility.yul\":2768:2820   */\n    tag_253:\n        /* \"#utility.yul\":2839:2868   */\n      tag_168\n        /* \"#utility.yul\":2858:2867   */\n      dup3\n        /* \"#utility.yul\":2839:2868   */\n      tag_221\n      jump\t// in\n        /* \"#utility.yul\":2879:3226   */\n    tag_72:\n        /* \"#utility.yul\":2944:2950   */\n      0x00\n        /* \"#utility.yul\":2952:2958   */\n      dup1\n        /* \"#utility.yul\":3005:3007   */\n      0x40\n        /* \"#utility.yul\":2993:3002   */\n      dup4\n        /* \"#utility.yul\":2984:2991   */\n      dup6\n        /* \"#utility.yul\":2980:3003   */\n      sub\n        /* \"#utility.yul\":2976:3008   */\n      slt\n        /* \"#utility.yul\":2973:3025   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":3021:3022   */\n      0x00\n        /* \"#utility.yul\":3018:3019   */\n      dup1\n        /* \"#utility.yul\":3011:3023   */\n      revert\n        /* \"#utility.yul\":2973:3025   */\n    tag_256:\n        /* \"#utility.yul\":3044:3073   */\n      tag_257\n        /* \"#utility.yul\":3063:3072   */\n      dup4\n        /* \"#utility.yul\":3044:3073   */\n      tag_221\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":3034:3073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3123:3125   */\n      0x20\n        /* \"#utility.yul\":3112:3121   */\n      dup4\n        /* \"#utility.yul\":3108:3126   */\n      add\n        /* \"#utility.yul\":3095:3127   */\n      calldataload\n        /* \"#utility.yul\":3170:3175   */\n      dup1\n        /* \"#utility.yul\":3163:3176   */\n      iszero\n        /* \"#utility.yul\":3156:3177   */\n      iszero\n        /* \"#utility.yul\":3149:3154   */\n      dup2\n        /* \"#utility.yul\":3146:3178   */\n      eq\n        /* \"#utility.yul\":3136:3196   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":3192:3193   */\n      0x00\n        /* \"#utility.yul\":3189:3190   */\n      dup1\n        /* \"#utility.yul\":3182:3194   */\n      revert\n        /* \"#utility.yul\":3136:3196   */\n    tag_258:\n        /* \"#utility.yul\":3215:3220   */\n      dup1\n        /* \"#utility.yul\":3205:3220   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2879:3226   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3231:3358   */\n    tag_222:\n        /* \"#utility.yul\":3292:3302   */\n      0x4e487b71\n        /* \"#utility.yul\":3287:3290   */\n      0xe0\n        /* \"#utility.yul\":3283:3303   */\n      shl\n        /* \"#utility.yul\":3280:3281   */\n      0x00\n        /* \"#utility.yul\":3273:3304   */\n      mstore\n        /* \"#utility.yul\":3323:3327   */\n      0x41\n        /* \"#utility.yul\":3320:3321   */\n      0x04\n        /* \"#utility.yul\":3313:3328   */\n      mstore\n        /* \"#utility.yul\":3347:3351   */\n      0x24\n        /* \"#utility.yul\":3344:3345   */\n      0x00\n        /* \"#utility.yul\":3337:3352   */\n      revert\n        /* \"#utility.yul\":3363:4501   */\n    tag_76:\n        /* \"#utility.yul\":3458:3464   */\n      0x00\n        /* \"#utility.yul\":3466:3472   */\n      dup1\n        /* \"#utility.yul\":3474:3480   */\n      0x00\n        /* \"#utility.yul\":3482:3488   */\n      dup1\n        /* \"#utility.yul\":3535:3538   */\n      0x80\n        /* \"#utility.yul\":3523:3532   */\n      dup6\n        /* \"#utility.yul\":3514:3521   */\n      dup8\n        /* \"#utility.yul\":3510:3533   */\n      sub\n        /* \"#utility.yul\":3506:3539   */\n      slt\n        /* \"#utility.yul\":3503:3556   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":3552:3553   */\n      0x00\n        /* \"#utility.yul\":3549:3550   */\n      dup1\n        /* \"#utility.yul\":3542:3554   */\n      revert\n        /* \"#utility.yul\":3503:3556   */\n    tag_261:\n        /* \"#utility.yul\":3575:3604   */\n      tag_262\n        /* \"#utility.yul\":3594:3603   */\n      dup6\n        /* \"#utility.yul\":3575:3604   */\n      tag_221\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3565:3604   */\n      swap4\n      pop\n        /* \"#utility.yul\":3623:3661   */\n      tag_263\n        /* \"#utility.yul\":3657:3659   */\n      0x20\n        /* \"#utility.yul\":3646:3655   */\n      dup7\n        /* \"#utility.yul\":3642:3660   */\n      add\n        /* \"#utility.yul\":3623:3661   */\n      tag_221\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3613:3661   */\n      swap3\n      pop\n        /* \"#utility.yul\":3708:3710   */\n      0x40\n        /* \"#utility.yul\":3697:3706   */\n      dup6\n        /* \"#utility.yul\":3693:3711   */\n      add\n        /* \"#utility.yul\":3680:3712   */\n      calldataload\n        /* \"#utility.yul\":3670:3712   */\n      swap2\n      pop\n        /* \"#utility.yul\":3763:3765   */\n      0x60\n        /* \"#utility.yul\":3752:3761   */\n      dup6\n        /* \"#utility.yul\":3748:3766   */\n      add\n        /* \"#utility.yul\":3735:3767   */\n      calldataload\n        /* \"#utility.yul\":3786:3804   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3827:3829   */\n      dup1\n        /* \"#utility.yul\":3819:3825   */\n      dup3\n        /* \"#utility.yul\":3816:3830   */\n      gt\n        /* \"#utility.yul\":3813:3847   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3843:3844   */\n      0x00\n        /* \"#utility.yul\":3840:3841   */\n      dup1\n        /* \"#utility.yul\":3833:3845   */\n      revert\n        /* \"#utility.yul\":3813:3847   */\n    tag_264:\n        /* \"#utility.yul\":3881:3887   */\n      dup2\n        /* \"#utility.yul\":3870:3879   */\n      dup8\n        /* \"#utility.yul\":3866:3888   */\n      add\n        /* \"#utility.yul\":3856:3888   */\n      swap2\n      pop\n        /* \"#utility.yul\":3926:3933   */\n      dup8\n        /* \"#utility.yul\":3919:3923   */\n      0x1f\n        /* \"#utility.yul\":3915:3917   */\n      dup4\n        /* \"#utility.yul\":3911:3924   */\n      add\n        /* \"#utility.yul\":3907:3934   */\n      slt\n        /* \"#utility.yul\":3897:3952   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3945:3946   */\n      dup1\n        /* \"#utility.yul\":3938:3950   */\n      revert\n        /* \"#utility.yul\":3897:3952   */\n    tag_265:\n        /* \"#utility.yul\":3984:3986   */\n      dup2\n        /* \"#utility.yul\":3971:3987   */\n      calldataload\n        /* \"#utility.yul\":4006:4008   */\n      dup2\n        /* \"#utility.yul\":4002:4004   */\n      dup2\n        /* \"#utility.yul\":3999:4009   */\n      gt\n        /* \"#utility.yul\":3996:4032   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":4012:4030   */\n      tag_267\n      tag_222\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":4087:4089   */\n      0x40\n        /* \"#utility.yul\":4081:4090   */\n      mload\n        /* \"#utility.yul\":4055:4057   */\n      0x1f\n        /* \"#utility.yul\":4141:4154   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4137:4159   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4161:4163   */\n      0x3f\n        /* \"#utility.yul\":4133:4164   */\n      add\n        /* \"#utility.yul\":4129:4169   */\n      and\n        /* \"#utility.yul\":4117:4170   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4185:4203   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4205:4227   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4182:4228   */\n      or\n        /* \"#utility.yul\":4179:4251   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4231:4249   */\n      tag_269\n      tag_222\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":4271:4281   */\n      dup2\n        /* \"#utility.yul\":4267:4269   */\n      0x40\n        /* \"#utility.yul\":4260:4282   */\n      mstore\n        /* \"#utility.yul\":4306:4308   */\n      dup3\n        /* \"#utility.yul\":4298:4304   */\n      dup2\n        /* \"#utility.yul\":4291:4309   */\n      mstore\n        /* \"#utility.yul\":4346:4353   */\n      dup11\n        /* \"#utility.yul\":4341:4343   */\n      0x20\n        /* \"#utility.yul\":4336:4338   */\n      dup5\n        /* \"#utility.yul\":4332:4334   */\n      dup8\n        /* \"#utility.yul\":4328:4339   */\n      add\n        /* \"#utility.yul\":4324:4344   */\n      add\n        /* \"#utility.yul\":4321:4354   */\n      gt\n        /* \"#utility.yul\":4318:4371   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":4367:4368   */\n      0x00\n        /* \"#utility.yul\":4364:4365   */\n      dup1\n        /* \"#utility.yul\":4357:4369   */\n      revert\n        /* \"#utility.yul\":4318:4371   */\n    tag_270:\n        /* \"#utility.yul\":4423:4425   */\n      dup3\n        /* \"#utility.yul\":4418:4420   */\n      0x20\n        /* \"#utility.yul\":4414:4416   */\n      dup7\n        /* \"#utility.yul\":4410:4421   */\n      add\n        /* \"#utility.yul\":4405:4407   */\n      0x20\n        /* \"#utility.yul\":4397:4403   */\n      dup4\n        /* \"#utility.yul\":4393:4408   */\n      add\n        /* \"#utility.yul\":4380:4426   */\n      calldatacopy\n        /* \"#utility.yul\":4468:4469   */\n      0x00\n        /* \"#utility.yul\":4463:4465   */\n      0x20\n        /* \"#utility.yul\":4458:4460   */\n      dup5\n        /* \"#utility.yul\":4450:4456   */\n      dup4\n        /* \"#utility.yul\":4446:4461   */\n      add\n        /* \"#utility.yul\":4442:4466   */\n      add\n        /* \"#utility.yul\":4435:4470   */\n      mstore\n        /* \"#utility.yul\":4489:4495   */\n      dup1\n        /* \"#utility.yul\":4479:4495   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3363:4501   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4506:4766   */\n    tag_86:\n        /* \"#utility.yul\":4574:4580   */\n      0x00\n        /* \"#utility.yul\":4582:4588   */\n      dup1\n        /* \"#utility.yul\":4635:4637   */\n      0x40\n        /* \"#utility.yul\":4623:4632   */\n      dup4\n        /* \"#utility.yul\":4614:4621   */\n      dup6\n        /* \"#utility.yul\":4610:4633   */\n      sub\n        /* \"#utility.yul\":4606:4638   */\n      slt\n        /* \"#utility.yul\":4603:4655   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":4651:4652   */\n      0x00\n        /* \"#utility.yul\":4648:4649   */\n      dup1\n        /* \"#utility.yul\":4641:4653   */\n      revert\n        /* \"#utility.yul\":4603:4655   */\n    tag_272:\n        /* \"#utility.yul\":4674:4703   */\n      tag_273\n        /* \"#utility.yul\":4693:4702   */\n      dup4\n        /* \"#utility.yul\":4674:4703   */\n      tag_221\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4664:4703   */\n      swap2\n      pop\n        /* \"#utility.yul\":4722:4760   */\n      tag_274\n        /* \"#utility.yul\":4756:4758   */\n      0x20\n        /* \"#utility.yul\":4745:4754   */\n      dup5\n        /* \"#utility.yul\":4741:4759   */\n      add\n        /* \"#utility.yul\":4722:4760   */\n      tag_221\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4712:4760   */\n      swap1\n      pop\n        /* \"#utility.yul\":4506:4766   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4771:5151   */\n    tag_94:\n        /* \"#utility.yul\":4850:4851   */\n      0x01\n        /* \"#utility.yul\":4846:4858   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4893:4905   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4914:4975   */\n      tag_276\n      jumpi\n        /* \"#utility.yul\":4968:4972   */\n      0x7f\n        /* \"#utility.yul\":4960:4966   */\n      dup3\n        /* \"#utility.yul\":4956:4973   */\n      and\n        /* \"#utility.yul\":4946:4973   */\n      swap2\n      pop\n        /* \"#utility.yul\":4914:4975   */\n    tag_276:\n        /* \"#utility.yul\":5021:5023   */\n      0x20\n        /* \"#utility.yul\":5013:5019   */\n      dup3\n        /* \"#utility.yul\":5010:5024   */\n      lt\n        /* \"#utility.yul\":4990:5008   */\n      dup2\n        /* \"#utility.yul\":4987:5025   */\n      eq\n        /* \"#utility.yul\":4984:5145   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":5067:5077   */\n      0x4e487b71\n        /* \"#utility.yul\":5062:5065   */\n      0xe0\n        /* \"#utility.yul\":5058:5078   */\n      shl\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5048:5079   */\n      mstore\n        /* \"#utility.yul\":5102:5106   */\n      0x22\n        /* \"#utility.yul\":5099:5100   */\n      0x04\n        /* \"#utility.yul\":5092:5107   */\n      mstore\n        /* \"#utility.yul\":5130:5134   */\n      0x24\n        /* \"#utility.yul\":5127:5128   */\n      0x00\n        /* \"#utility.yul\":5120:5135   */\n      revert\n        /* \"#utility.yul\":4984:5145   */\n    tag_277:\n      pop\n        /* \"#utility.yul\":4771:5151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5156:5626   */\n    tag_172:\n        /* \"#utility.yul\":5335:5338   */\n      0x00\n        /* \"#utility.yul\":5373:5379   */\n      dup4\n        /* \"#utility.yul\":5367:5380   */\n      mload\n        /* \"#utility.yul\":5389:5442   */\n      tag_279\n        /* \"#utility.yul\":5435:5441   */\n      dup2\n        /* \"#utility.yul\":5430:5433   */\n      dup5\n        /* \"#utility.yul\":5423:5427   */\n      0x20\n        /* \"#utility.yul\":5415:5421   */\n      dup9\n        /* \"#utility.yul\":5411:5428   */\n      add\n        /* \"#utility.yul\":5389:5442   */\n      tag_219\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5505:5518   */\n      dup4\n      mload\n        /* \"#utility.yul\":5464:5480   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":5527:5584   */\n      tag_280\n        /* \"#utility.yul\":5505:5518   */\n      dup2\n        /* \"#utility.yul\":5464:5480   */\n      dup4\n        /* \"#utility.yul\":5561:5565   */\n      0x20\n        /* \"#utility.yul\":5549:5566   */\n      dup9\n      add\n        /* \"#utility.yul\":5527:5584   */\n      tag_219\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5600:5620   */\n      add\n      swap5\n        /* \"#utility.yul\":5156:5626   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5631:6120   */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5900:5915   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":5882:5916   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5952:5967   */\n      dup5\n      and\n        /* \"#utility.yul\":5947:5949   */\n      0x20\n        /* \"#utility.yul\":5932:5950   */\n      dup3\n      add\n        /* \"#utility.yul\":5925:5968   */\n      mstore\n        /* \"#utility.yul\":5999:6001   */\n      0x40\n        /* \"#utility.yul\":5984:6002   */\n      dup2\n      add\n        /* \"#utility.yul\":5977:6011   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6047:6050   */\n      0x80\n        /* \"#utility.yul\":6042:6044   */\n      0x60\n        /* \"#utility.yul\":6027:6045   */\n      dup3\n      add\n        /* \"#utility.yul\":6020:6051   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5825:5829   */\n      0x00\n      swap1\n        /* \"#utility.yul\":6068:6114   */\n      tag_282\n      swap1\n        /* \"#utility.yul\":6094:6113   */\n      dup4\n      add\n        /* \"#utility.yul\":6086:6092   */\n      dup5\n        /* \"#utility.yul\":6068:6114   */\n      tag_220\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6060:6114   */\n      swap7\n        /* \"#utility.yul\":5631:6120   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6125:6374   */\n    tag_201:\n        /* \"#utility.yul\":6194:6200   */\n      0x00\n        /* \"#utility.yul\":6247:6249   */\n      0x20\n        /* \"#utility.yul\":6235:6244   */\n      dup3\n        /* \"#utility.yul\":6226:6233   */\n      dup5\n        /* \"#utility.yul\":6222:6245   */\n      sub\n        /* \"#utility.yul\":6218:6250   */\n      slt\n        /* \"#utility.yul\":6215:6267   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":6263:6264   */\n      0x00\n        /* \"#utility.yul\":6260:6261   */\n      dup1\n        /* \"#utility.yul\":6253:6265   */\n      revert\n        /* \"#utility.yul\":6215:6267   */\n    tag_284:\n        /* \"#utility.yul\":6295:6304   */\n      dup2\n        /* \"#utility.yul\":6289:6305   */\n      mload\n        /* \"#utility.yul\":6314:6344   */\n      tag_168\n        /* \"#utility.yul\":6338:6343   */\n      dup2\n        /* \"#utility.yul\":6314:6344   */\n      tag_218\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220a150dfb7c9c37c5de2f09784388334f01600b140a1f465fc4144055975782e1364736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1366": {
									"entryPoint": null,
									"id": 1366,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_1375": {
									"entryPoint": null,
									"id": 1375,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:8"
															},
															"nodeType": "YulIf",
															"src": "220:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:8"
															},
															"nodeType": "YulIf",
															"src": "353:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:8"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:8"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:8"
															},
															"nodeType": "YulIf",
															"src": "536:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:8"
															},
															"nodeType": "YulIf",
															"src": "698:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:8"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:8"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:8",
																"statements": []
															},
															"src": "779:133:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:8"
															},
															"nodeType": "YulIf",
															"src": "921:80:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:8",
														"type": ""
													}
												],
												"src": "146:885:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:8"
															},
															"nodeType": "YulIf",
															"src": "1164:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:8"
															},
															"nodeType": "YulIf",
															"src": "1301:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:8"
															},
															"nodeType": "YulIf",
															"src": "1474:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:8",
														"type": ""
													}
												],
												"src": "1036:562:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:8"
															},
															"nodeType": "YulIf",
															"src": "1746:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:8"
															},
															"nodeType": "YulIf",
															"src": "1816:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:8",
														"type": ""
													}
												],
												"src": "1603:380:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xFF0 CODESIZE SUB DUP1 PUSH3 0xFF0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DF JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x6C JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x6C JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SSTORE POP PUSH3 0x286 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7A SWAP1 PUSH3 0x249 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xCC JUMP JUMPDEST POP PUSH3 0xF7 SWAP3 SWAP2 POP PUSH3 0xFB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xFC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x157 PUSH3 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x182 JUMPI PUSH3 0x182 PUSH3 0x112 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1C3 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A4 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D5 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x219 DUP7 DUP4 DUP8 ADD PUSH3 0x128 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x128 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x280 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5A DUP1 PUSH3 0x296 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x139 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xA36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x184 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0xA7E JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x639 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x693 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0xAFF JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x70E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xC2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x2F1 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x30C JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0xC60 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0xC60 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x39A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x39A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF DUP3 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x3CC JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 DUP3 PUSH2 0x639 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x42C JUMPI PUSH2 0x40F DUP2 CALLER PUSH2 0x292 JUMP JUMPDEST PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x493 DUP3 PUSH2 0x811 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x513 JUMPI PUSH2 0x4F6 DUP7 CALLER PUSH2 0x292 JUMP JUMPDEST PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x545 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP4 AND PUSH2 0x5D0 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x5CE JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x5CE JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x634 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x70E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C DUP3 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x66D JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0xC60 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x719 DUP5 DUP5 DUP5 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x752 JUMPI PUSH2 0x735 DUP5 DUP5 DUP5 DUP5 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x763 DUP3 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x797 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7E3 JUMP JUMPDEST DUP1 PUSH2 0x7C2 DUP5 PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7D3 SWAP3 SWAP2 SWAP1 PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x30C JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x859 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH2 0x857 JUMPI JUMPDEST DUP1 PUSH2 0x7E3 JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x839 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x8A7 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8E2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x8DF SWAP2 DUP2 ADD SWAP1 PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x93D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x915 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x991 JUMPI PUSH2 0x996 JUMP JUMPDEST PUSH2 0x974 JUMP JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7E3 DUP2 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9F9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9E1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x752 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xA22 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA9A DUP4 PUSH2 0xA62 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xABD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC6 DUP5 PUSH2 0xA62 JUMP JUMPDEST SWAP3 POP PUSH2 0xAD4 PUSH1 0x20 DUP6 ADD PUSH2 0xA62 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E3 DUP3 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1B DUP4 PUSH2 0xA62 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB70 DUP6 PUSH2 0xA62 JUMP JUMPDEST SWAP4 POP PUSH2 0xB7E PUSH1 0x20 DUP7 ADD PUSH2 0xA62 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xBC8 JUMPI PUSH2 0xBC8 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xBF0 JUMPI PUSH2 0xBF0 PUSH2 0xB3B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xC09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC49 DUP4 PUSH2 0xA62 JUMP JUMPDEST SWAP2 POP PUSH2 0xC57 PUSH1 0x20 DUP5 ADD PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC74 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC95 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xCAD DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x9DE JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xCC1 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x9DE JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xCFD SWAP1 DUP4 ADD DUP5 PUSH2 0xA0A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7E3 DUP2 PUSH2 0x9A8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 POP 0xDF 0xB7 0xC9 0xC3 PUSH29 0x5DE2F09784388334F01600B140A1F465FC4144055975782E1364736F6C PUSH4 0x4300080C STOP CALLER ",
							"sourceMap": "930:41507:5:-:0;;;5085:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5152:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;5176:17:5;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;5635:7:5;5204:31;;-1:-1:-1;930:41507:5;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;930:41507:5;;;-1:-1:-1;930:41507:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:8;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:8;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:8:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:8;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;930:41507:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_2236": {
									"entryPoint": null,
									"id": 2236,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_1633": {
									"entryPoint": null,
									"id": 1633,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_2223": {
									"entryPoint": null,
									"id": 2223,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_2291": {
									"entryPoint": 2162,
									"id": 2291,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1975": {
									"entryPoint": 2026,
									"id": 1975,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_2797": {
									"entryPoint": null,
									"id": 2797,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_2008": {
									"entryPoint": null,
									"id": 2008,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_1989": {
									"entryPoint": null,
									"id": 1989,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_2840": {
									"entryPoint": null,
									"id": 2840,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2830": {
									"entryPoint": null,
									"id": 2830,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_1827": {
									"entryPoint": null,
									"id": 1827,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_1761": {
									"entryPoint": 2065,
									"id": 1761,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_1375": {
									"entryPoint": null,
									"id": 1375,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_2850": {
									"entryPoint": 2394,
									"id": 2850,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_1882": {
									"entryPoint": 1000,
									"id": 1882,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1448": {
									"entryPoint": 1604,
									"id": 1448,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1905": {
									"entryPoint": 932,
									"id": 1905,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1949": {
									"entryPoint": null,
									"id": 1949,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1571": {
									"entryPoint": 786,
									"id": 1571,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1653": {
									"entryPoint": 1593,
									"id": 1653,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_2172": {
									"entryPoint": 1561,
									"id": 2172,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2210": {
									"entryPoint": 1806,
									"id": 2210,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1931": {
									"entryPoint": 1698,
									"id": 1931,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1561": {
									"entryPoint": 704,
									"id": 1561,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1581": {
									"entryPoint": 1683,
									"id": 1581,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_1624": {
									"entryPoint": 1880,
									"id": 1624,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1400": {
									"entryPoint": null,
									"id": 1400,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_2153": {
									"entryPoint": 1160,
									"id": 2153,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 2897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3227,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3274,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 2526,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 2472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6376:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:8",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:8",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:8"
															},
															"nodeType": "YulIf",
															"src": "68:71:8"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:8",
														"type": ""
													}
												],
												"src": "14:131:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:8"
															},
															"nodeType": "YulIf",
															"src": "229:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:8",
														"type": ""
													}
												],
												"src": "150:245:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:8",
														"type": ""
													}
												],
												"src": "400:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "645:205:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "655:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "664:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "659:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "724:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "749:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "754:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "745:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "745:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "768:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "773:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "764:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "764:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "758:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "738:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "685:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "688:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "682:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "696:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "698:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "707:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "703:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "698:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "678:3:8",
																"statements": []
															},
															"src": "674:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:31:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "826:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "831:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "822:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "822:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "815:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "802:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "805:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "799:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:13:8"
															},
															"nodeType": "YulIf",
															"src": "796:48:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "623:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "633:6:8",
														"type": ""
													}
												],
												"src": "592:258:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "905:208:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "915:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:12:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "919:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "957:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:19:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1004:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1011:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1022:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1027:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1018:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1018:14:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1034:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "978:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:63:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "978:63:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1050:57:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1065:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1078:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1086:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1074:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1074:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1095:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1091:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1091:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:39:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:50:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1050:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "882:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "889:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "897:3:8",
														"type": ""
													}
												],
												"src": "855:258:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:99:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1256:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1279:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1305:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1317:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1328:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1287:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:45:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1279:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1208:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1219:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1230:4:8",
														"type": ""
													}
												],
												"src": "1118:220:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1413:110:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1459:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1468:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1471:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1461:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1461:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1434:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1430:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1426:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:32:8"
															},
															"nodeType": "YulIf",
															"src": "1423:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1484:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1507:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1494:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1484:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1379:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1390:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1402:6:8",
														"type": ""
													}
												],
												"src": "1343:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1629:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1639:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1651:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1639:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1681:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1696:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1712:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1708:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1708:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1721:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1704:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1674:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1598:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1609:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1620:4:8",
														"type": ""
													}
												],
												"src": "1528:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1795:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1795:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1887:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1889:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1889:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1846:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1857:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1872:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1868:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1868:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1881:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1864:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1864:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1853:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1853:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1843:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:50:8"
															},
															"nodeType": "YulIf",
															"src": "1833:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1764:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:8",
														"type": ""
													}
												],
												"src": "1736:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2047:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2056:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2049:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2049:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2022:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2014:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:32:8"
															},
															"nodeType": "YulIf",
															"src": "2011:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2072:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2082:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2120:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2147:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2158:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2130:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1959:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1970:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1982:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1990:6:8",
														"type": ""
													}
												],
												"src": "1914:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2274:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2284:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2296:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2307:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2292:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2284:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2326:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2337:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2319:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2319:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2319:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2243:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2254:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2265:4:8",
														"type": ""
													}
												],
												"src": "2173:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2459:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2505:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2514:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2507:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2507:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2507:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2480:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2489:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2501:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2472:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:32:8"
															},
															"nodeType": "YulIf",
															"src": "2469:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2530:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2559:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2540:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2540:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2530:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2578:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2622:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2607:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2588:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2635:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2662:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2673:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2645:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2645:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2635:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2409:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2420:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2432:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2440:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2448:6:8",
														"type": ""
													}
												],
												"src": "2355:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2758:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2804:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2813:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2816:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2806:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2806:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2779:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2788:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2775:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2775:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2800:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2771:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:32:8"
															},
															"nodeType": "YulIf",
															"src": "2768:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2829:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2858:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2839:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2839:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2829:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2724:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2735:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2747:6:8",
														"type": ""
													}
												],
												"src": "2688:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2963:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3009:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3018:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3021:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3011:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3011:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3011:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2984:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2993:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2980:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2980:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3005:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2976:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:32:8"
															},
															"nodeType": "YulIf",
															"src": "2973:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3034:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3063:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3044:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3034:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3082:45:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3112:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3123:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3095:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3095:32:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3086:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3180:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3189:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3192:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3182:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3182:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3182:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3149:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3170:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3163:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3163:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3156:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3156:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3146:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3146:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3139:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:40:8"
															},
															"nodeType": "YulIf",
															"src": "3136:60:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3205:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3215:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3205:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2921:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2932:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2944:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2952:6:8",
														"type": ""
													}
												],
												"src": "2879:347:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3263:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3280:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3287:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3283:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3283:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3320:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3344:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3347:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3337:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3337:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3231:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3493:1008:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3540:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3549:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3552:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3542:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3542:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3542:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3514:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3523:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3510:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3535:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3506:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:33:8"
															},
															"nodeType": "YulIf",
															"src": "3503:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3565:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3594:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3575:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3565:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3613:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3646:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3657:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3642:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3623:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3623:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3670:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3697:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3708:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3693:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3693:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3680:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3680:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3721:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3752:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3763:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3748:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3748:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3735:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:32:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3725:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3776:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3786:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3780:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3831:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3840:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3843:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3833:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3833:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3833:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3827:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3816:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3816:14:8"
															},
															"nodeType": "YulIf",
															"src": "3813:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3856:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3870:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3881:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3866:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:22:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3860:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3936:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3945:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3948:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3938:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3938:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3938:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3915:2:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3919:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3911:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3911:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3926:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3907:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3907:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3900:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:35:8"
															},
															"nodeType": "YulIf",
															"src": "3897:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3961:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3984:2:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3971:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:16:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3965:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4010:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4012:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4012:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4012:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4002:2:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4006:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3999:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:10:8"
															},
															"nodeType": "YulIf",
															"src": "3996:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4041:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4051:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4051:7:8"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4045:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4067:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4087:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4081:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4071:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4099:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4121:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4145:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4149:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4141:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4141:13:8"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4156:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4137:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4137:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4161:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4133:31:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4166:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4129:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4129:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4117:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4117:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4103:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4229:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4231:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4231:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4231:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4188:10:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4200:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4185:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4185:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4208:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4220:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4205:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4205:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4182:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:46:8"
															},
															"nodeType": "YulIf",
															"src": "4179:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4267:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4271:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4260:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4260:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4298:6:8"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4306:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4291:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4291:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4291:18:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4355:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4364:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4367:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4357:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4357:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4357:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4332:2:8"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4336:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4328:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4328:11:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4341:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4324:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4324:20:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4346:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4321:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4321:33:8"
															},
															"nodeType": "YulIf",
															"src": "4318:53:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4397:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4405:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4393:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4393:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4414:2:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4410:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4410:11:8"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4423:2:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4380:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4380:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4380:46:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4450:6:8"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4458:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4446:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4446:15:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4463:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:24:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4479:16:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4489:6:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3435:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3446:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3458:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3466:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3474:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3482:6:8",
														"type": ""
													}
												],
												"src": "3363:1138:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4593:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4639:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4648:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4651:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4641:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4641:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4641:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4614:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4623:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4610:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4635:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4606:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4606:32:8"
															},
															"nodeType": "YulIf",
															"src": "4603:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4664:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4674:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4664:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4712:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4745:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4756:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4741:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4741:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4722:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4722:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4551:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4562:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4574:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4582:6:8",
														"type": ""
													}
												],
												"src": "4506:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4826:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4836:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4850:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4853:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4846:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4836:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4867:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4897:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4903:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4893:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4893:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4871:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4944:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4946:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4960:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4968:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4956:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4956:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4946:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4924:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4917:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4917:26:8"
															},
															"nodeType": "YulIf",
															"src": "4914:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5034:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5055:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5062:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5067:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5058:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5058:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5048:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5048:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5048:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5099:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5102:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5092:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5092:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5092:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5127:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5130:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5120:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5120:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5120:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4990:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5013:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5021:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5010:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5010:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4987:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:38:8"
															},
															"nodeType": "YulIf",
															"src": "4984:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4806:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4815:6:8",
														"type": ""
													}
												],
												"src": "4771:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5343:283:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5353:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5373:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5367:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5357:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5415:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5423:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5411:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5411:17:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5430:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5435:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5389:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5389:53:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5389:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5451:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5468:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5473:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5464:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5464:16:8"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "5455:5:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5489:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5511:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5505:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5505:13:8"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "5493:8:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5553:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5561:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5549:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5549:17:8"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5568:5:8"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5575:8:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5527:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5527:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5527:57:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5593:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5604:5:8"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5611:8:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:20:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5593:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5311:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5316:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5324:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5335:3:8",
														"type": ""
													}
												],
												"src": "5156:470:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5834:286:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5844:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5862:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5867:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5858:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5858:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5871:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5854:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5854:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5848:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5889:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5904:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5912:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5900:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5900:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5882:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5882:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5882:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5936:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5947:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5932:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5932:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5956:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5964:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5952:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5952:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5999:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5984:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5984:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6004:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5977:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5977:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5977:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6031:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6042:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6027:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6027:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6047:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6020:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6020:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6020:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6060:54:8",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6086:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6098:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6109:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6094:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6094:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "6068:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6068:46:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6060:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5779:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5790:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5798:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5806:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5814:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5825:4:8",
														"type": ""
													}
												],
												"src": "5631:489:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6205:169:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6251:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6260:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6263:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6253:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6253:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6253:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6226:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6235:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6222:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6222:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6247:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6218:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:32:8"
															},
															"nodeType": "YulIf",
															"src": "6215:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6276:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6295:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6289:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6289:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6280:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6338:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "6314:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6314:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6314:30:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6353:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6363:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6353:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6171:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6182:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6194:6:8",
														"type": ""
													}
												],
												"src": "6125:249:8"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb46514610224578063b88d4fde14610244578063c87b56dd14610257578063e985e9c51461027757600080fd5b80636352211e146101cf57806370a08231146101ef57806395d89b411461020f57600080fd5b8063095ea7b3116100bb578063095ea7b31461017157806318160ddd1461018657806323b872dd146101a957806342842e0e146101bc57600080fd5b806301ffc9a7146100e257806306fdde0314610117578063081812fc14610139575b600080fd5b3480156100ee57600080fd5b506101026100fd3660046109c1565b6102c0565b60405190151581526020015b60405180910390f35b34801561012357600080fd5b5061012c610312565b60405161010e9190610a36565b34801561014557600080fd5b50610159610154366004610a49565b6103a4565b6040516001600160a01b03909116815260200161010e565b61018461017f366004610a7e565b6103e8565b005b34801561019257600080fd5b50600154600054035b60405190815260200161010e565b6101846101b7366004610aa8565b610488565b6101846101ca366004610aa8565b610619565b3480156101db57600080fd5b506101596101ea366004610a49565b610639565b3480156101fb57600080fd5b5061019b61020a366004610ae4565b610644565b34801561021b57600080fd5b5061012c610693565b34801561023057600080fd5b5061018461023f366004610aff565b6106a2565b610184610252366004610b51565b61070e565b34801561026357600080fd5b5061012c610272366004610a49565b610758565b34801561028357600080fd5b50610102610292366004610c2d565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b0319831614806102f157506380ac58cd60e01b6001600160e01b03198316145b8061030c5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461032190610c60565b80601f016020809104026020016040519081016040528092919081815260200182805461034d90610c60565b801561039a5780601f1061036f5761010080835404028352916020019161039a565b820191906000526020600020905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b60006103af826107ea565b6103cc576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006103f382610639565b9050336001600160a01b0382161461042c5761040f8133610292565b61042c576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061049382610811565b9050836001600160a01b0316816001600160a01b0316146104c65760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b03881690911417610513576104f68633610292565b61051357604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661053a57604051633a954ecd60e21b815260040160405180910390fd5b801561054557600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040902055600160e11b83166105d057600184016000818152600460205260409020546105ce5760005481146105ce5760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6106348383836040518060200160405280600081525061070e565b505050565b600061030c82610811565b60006001600160a01b03821661066d576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b60606003805461032190610c60565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610719848484610488565b6001600160a01b0383163b156107525761073584848484610872565b610752576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6060610763826107ea565b61078057604051630a14c4b560e41b815260040160405180910390fd5b600061079760408051602081019091526000815290565b90508051600014156107b857604051806020016040528060008152506107e3565b806107c28461095a565b6040516020016107d3929190610c9b565b6040516020818303038152906040525b9392505050565b600080548210801561030c575050600090815260046020526040902054600160e01b161590565b60008160005481101561085957600081815260046020526040902054600160e01b8116610857575b806107e3575060001901600081815260046020526040902054610839565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906108a7903390899088908890600401610cca565b6020604051808303816000875af19250505080156108e2575060408051601f3d908101601f191682019092526108df91810190610d07565b60015b61093d573d808015610910576040519150601f19603f3d011682016040523d82523d6000602084013e610915565b606091505b508051610935576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a90048061099157610996565b610974565b50819003601f19909101908152919050565b6001600160e01b0319811681146109be57600080fd5b50565b6000602082840312156109d357600080fd5b81356107e3816109a8565b60005b838110156109f95781810151838201526020016109e1565b838111156107525750506000910152565b60008151808452610a228160208601602086016109de565b601f01601f19169290920160200192915050565b6020815260006107e36020830184610a0a565b600060208284031215610a5b57600080fd5b5035919050565b80356001600160a01b0381168114610a7957600080fd5b919050565b60008060408385031215610a9157600080fd5b610a9a83610a62565b946020939093013593505050565b600080600060608486031215610abd57600080fd5b610ac684610a62565b9250610ad460208501610a62565b9150604084013590509250925092565b600060208284031215610af657600080fd5b6107e382610a62565b60008060408385031215610b1257600080fd5b610b1b83610a62565b915060208301358015158114610b3057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610b6757600080fd5b610b7085610a62565b9350610b7e60208601610a62565b925060408501359150606085013567ffffffffffffffff80821115610ba257600080fd5b818701915087601f830112610bb657600080fd5b813581811115610bc857610bc8610b3b565b604051601f8201601f19908116603f01168101908382118183101715610bf057610bf0610b3b565b816040528281528a6020848701011115610c0957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610c4057600080fd5b610c4983610a62565b9150610c5760208401610a62565b90509250929050565b600181811c90821680610c7457607f821691505b60208210811415610c9557634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610cad8184602088016109de565b835190830190610cc18183602088016109de565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610cfd90830184610a0a565b9695505050505050565b600060208284031215610d1957600080fd5b81516107e3816109a856fea2646970667358221220a150dfb7c9c37c5de2f09784388334f01600b140a1f465fc4144055975782e1364736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x139 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xA36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x184 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0xA7E JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x639 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x693 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0xAFF JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x70E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xC2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x2F1 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x30C JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0xC60 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0xC60 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x39A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x39A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF DUP3 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x3CC JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 DUP3 PUSH2 0x639 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x42C JUMPI PUSH2 0x40F DUP2 CALLER PUSH2 0x292 JUMP JUMPDEST PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x493 DUP3 PUSH2 0x811 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x513 JUMPI PUSH2 0x4F6 DUP7 CALLER PUSH2 0x292 JUMP JUMPDEST PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x545 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP4 AND PUSH2 0x5D0 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x5CE JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x5CE JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x634 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x70E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C DUP3 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x66D JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0xC60 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x719 DUP5 DUP5 DUP5 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x752 JUMPI PUSH2 0x735 DUP5 DUP5 DUP5 DUP5 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x763 DUP3 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x797 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7E3 JUMP JUMPDEST DUP1 PUSH2 0x7C2 DUP5 PUSH2 0x95A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7D3 SWAP3 SWAP2 SWAP1 PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x30C JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x859 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH2 0x857 JUMPI JUMPDEST DUP1 PUSH2 0x7E3 JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x839 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x8A7 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8E2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x8DF SWAP2 DUP2 ADD SWAP1 PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x93D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x915 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x991 JUMPI PUSH2 0x996 JUMP JUMPDEST PUSH2 0x974 JUMP JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7E3 DUP2 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9F9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9E1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x752 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xA22 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA9A DUP4 PUSH2 0xA62 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xABD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC6 DUP5 PUSH2 0xA62 JUMP JUMPDEST SWAP3 POP PUSH2 0xAD4 PUSH1 0x20 DUP6 ADD PUSH2 0xA62 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E3 DUP3 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1B DUP4 PUSH2 0xA62 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB70 DUP6 PUSH2 0xA62 JUMP JUMPDEST SWAP4 POP PUSH2 0xB7E PUSH1 0x20 DUP7 ADD PUSH2 0xA62 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xBC8 JUMPI PUSH2 0xBC8 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xBF0 JUMPI PUSH2 0xBF0 PUSH2 0xB3B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xC09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC49 DUP4 PUSH2 0xA62 JUMP JUMPDEST SWAP2 POP PUSH2 0xC57 PUSH1 0x20 DUP5 ADD PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC74 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC95 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xCAD DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x9DE JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xCC1 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x9DE JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xCFD SWAP1 DUP4 ADD DUP5 PUSH2 0xA0A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7E3 DUP2 PUSH2 0x9A8 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 POP 0xDF 0xB7 0xC9 0xC3 PUSH29 0x5DE2F09784388334F01600B140A1F465FC4144055975782E1364736F6C PUSH4 0x4300080C STOP CALLER ",
							"sourceMap": "930:41507:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9410:639;;;;;;;;;;-1:-1:-1;9410:639:5;;;;;:::i;:::-;;:::i;:::-;;;565:14:8;;558:22;540:41;;528:2;513:18;9410:639:5;;;;;;;;10312:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16803:218::-;;;;;;;;;;-1:-1:-1;16803:218:5;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:8;;;1674:51;;1662:2;1647:18;16803:218:5;1528:203:8;16236:408:5;;;;;;:::i;:::-;;:::i;:::-;;6063:323;;;;;;;;;;-1:-1:-1;6337:12:5;;6124:7;6321:13;:28;6063:323;;;2319:25:8;;;2307:2;2292:18;6063:323:5;2173:177:8;20442:2825:5;;;;;;:::i;:::-;;:::i;23363:193::-;;;;;;:::i;:::-;;:::i;11705:152::-;;;;;;;;;;-1:-1:-1;11705:152:5;;;;;:::i;:::-;;:::i;7247:233::-;;;;;;;;;;-1:-1:-1;7247:233:5;;;;;:::i;:::-;;:::i;10488:104::-;;;;;;;;;;;;;:::i;17361:234::-;;;;;;;;;;-1:-1:-1;17361:234:5;;;;;:::i;:::-;;:::i;24154:407::-;;;;;;:::i;:::-;;:::i;10698:318::-;;;;;;;;;;-1:-1:-1;10698:318:5;;;;;:::i;:::-;;:::i;17752:164::-;;;;;;;;;;-1:-1:-1;17752:164:5;;;;;:::i;:::-;-1:-1:-1;;;;;17873:25:5;;;17849:4;17873:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17752:164;9410:639;9495:4;-1:-1:-1;;;;;;;;;9819:25:5;;;;:102;;-1:-1:-1;;;;;;;;;;9896:25:5;;;9819:102;:179;;;-1:-1:-1;;;;;;;;;;9973:25:5;;;9819:179;9799:199;9410:639;-1:-1:-1;;9410:639:5:o;10312:100::-;10366:13;10399:5;10392:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10312:100;:::o;16803:218::-;16879:7;16904:16;16912:7;16904;:16::i;:::-;16899:64;;16929:34;;-1:-1:-1;;;16929:34:5;;;;;;;;;;;16899:64;-1:-1:-1;16983:24:5;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;16983:30:5;;16803:218::o;16236:408::-;16325:13;16341:16;16349:7;16341;:16::i;:::-;16325:32;-1:-1:-1;40569:10:5;-1:-1:-1;;;;;16374:28:5;;;16370:175;;16422:44;16439:5;40569:10;17752:164;:::i;16422:44::-;16417:128;;16494:35;;-1:-1:-1;;;16494:35:5;;;;;;;;;;;16417:128;16557:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;16557:35:5;-1:-1:-1;;;;;16557:35:5;;;;;;;;;16608:28;;16557:24;;16608:28;;;;;;;16314:330;16236:408;;:::o;20442:2825::-;20584:27;20614;20633:7;20614:18;:27::i;:::-;20584:57;;20699:4;-1:-1:-1;;;;;20658:45:5;20674:19;-1:-1:-1;;;;;20658:45:5;;20654:86;;20712:28;;-1:-1:-1;;;20712:28:5;;;;;;;;;;;20654:86;20754:27;19550:24;;;:15;:24;;;;;19778:26;;40569:10;19175:30;;;-1:-1:-1;;;;;18868:28:5;;19153:20;;;19150:56;20940:180;;21033:43;21050:4;40569:10;17752:164;:::i;21033:43::-;21028:92;;21085:35;;-1:-1:-1;;;21085:35:5;;;;;;;;;;;21028:92;-1:-1:-1;;;;;21137:16:5;;21133:52;;21162:23;;-1:-1:-1;;;21162:23:5;;;;;;;;;;;21133:52;21334:15;21331:160;;;21474:1;21453:19;21446:30;21331:160;-1:-1:-1;;;;;21871:24:5;;;;;;;:18;:24;;;;;;21869:26;;-1:-1:-1;;21869:26:5;;;21940:22;;;;;;;;;21938:24;;-1:-1:-1;21938:24:5;;;15094:11;15069:23;15065:41;15052:63;-1:-1:-1;;;15052:63:5;22233:26;;;;:17;:26;;;;;:175;-1:-1:-1;;;22528:47:5;;22524:627;;22633:1;22623:11;;22601:19;22756:30;;;:17;:30;;;;;;22752:384;;22894:13;;22879:11;:28;22875:242;;23041:30;;;;:17;:30;;;;;:52;;;22875:242;22582:569;22524:627;23198:7;23194:2;-1:-1:-1;;;;;23179:27:5;23188:4;-1:-1:-1;;;;;23179:27:5;;;;;;;;;;;20573:2694;;;20442:2825;;;:::o;23363:193::-;23509:39;23526:4;23532:2;23536:7;23509:39;;;;;;;;;;;;:16;:39::i;:::-;23363:193;;;:::o;11705:152::-;11777:7;11820:27;11839:7;11820:18;:27::i;7247:233::-;7319:7;-1:-1:-1;;;;;7343:19:5;;7339:60;;7371:28;;-1:-1:-1;;;7371:28:5;;;;;;;;;;;7339:60;-1:-1:-1;;;;;;7417:25:5;;;;;:18;:25;;;;;;1406:13;7417:55;;7247:233::o;10488:104::-;10544:13;10577:7;10570:14;;;;;:::i;17361:234::-;40569:10;17456:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;17456:49:5;;;;;;;;;;;;:60;;-1:-1:-1;;17456:60:5;;;;;;;;;;17532:55;;540:41:8;;;17456:49:5;;40569:10;17532:55;;513:18:8;17532:55:5;;;;;;;17361:234;;:::o;24154:407::-;24329:31;24342:4;24348:2;24352:7;24329:12;:31::i;:::-;-1:-1:-1;;;;;24375:14:5;;;:19;24371:183;;24414:56;24445:4;24451:2;24455:7;24464:5;24414:30;:56::i;:::-;24409:145;;24498:40;;-1:-1:-1;;;24498:40:5;;;;;;;;;;;24409:145;24154:407;;;;:::o;10698:318::-;10771:13;10802:16;10810:7;10802;:16::i;:::-;10797:59;;10827:29;;-1:-1:-1;;;10827:29:5;;;;;;;;;;;10797:59;10869:21;10893:10;11345:9;;;;;;;;;-1:-1:-1;11345:9:5;;;11268:94;10893:10;10869:34;;10927:7;10921:21;10946:1;10921:26;;:87;;;;;;;;;;;;;;;;;10974:7;10983:18;10993:7;10983:9;:18::i;:::-;10957:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10921:87;10914:94;10698:318;-1:-1:-1;;;10698:318:5:o;18174:282::-;18239:4;18329:13;;18319:7;:23;18276:153;;;;-1:-1:-1;;18380:26:5;;;;:17;:26;;;;;;-1:-1:-1;;;18380:44:5;:49;;18174:282::o;12860:1275::-;12927:7;12962;13064:13;;13057:4;:20;13053:1015;;;13102:14;13119:23;;;:17;:23;;;;;;-1:-1:-1;;;13208:24:5;;13204:845;;13873:113;13880:11;13873:113;;-1:-1:-1;;;13951:6:5;13933:25;;;;:17;:25;;;;;;13873:113;;13204:845;13079:989;13053:1015;14096:31;;-1:-1:-1;;;14096:31:5;;;;;;;;;;;26645:716;26829:88;;-1:-1:-1;;;26829:88:5;;26808:4;;-1:-1:-1;;;;;26829:45:5;;;;;:88;;40569:10;;26896:4;;26902:7;;26911:5;;26829:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26829:88:5;;;;;;;;-1:-1:-1;;26829:88:5;;;;;;;;;;;;:::i;:::-;;;26825:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27112:13:5;;27108:235;;27158:40;;-1:-1:-1;;;27158:40:5;;;;;;;;;;;27108:235;27301:6;27295:13;27286:6;27282:2;27278:15;27271:38;26825:529;-1:-1:-1;;;;;;26988:64:5;-1:-1:-1;;;26988:64:5;;-1:-1:-1;26645:716:5;;;;;;:::o;40689:1745::-;40754:17;41188:4;41181;41175:11;41171:22;41280:1;41274:4;41267:15;41355:4;41352:1;41348:12;41341:19;;;41437:1;41432:3;41425:14;41541:3;41780:5;41762:428;41828:1;41823:3;41819:11;41812:18;;41999:2;41993:4;41989:13;41985:2;41981:22;41976:3;41968:36;42093:2;42083:13;;;42150:25;;42168:5;;42150:25;41762:428;;;-1:-1:-1;42220:13:5;;;-1:-1:-1;;42335:14:5;;;42397:19;;;42335:14;40689:1745;-1:-1:-1;40689:1745:5:o;14:131:8:-;-1:-1:-1;;;;;;88:32:8;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:8;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:8;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:8:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:8;;1343:180;-1:-1:-1;1343:180:8:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:8;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:8:o;2355:328::-;2432:6;2440;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2540:29;2559:9;2540:29;:::i;:::-;2530:39;;2588:38;2622:2;2611:9;2607:18;2588:38;:::i;:::-;2578:48;;2673:2;2662:9;2658:18;2645:32;2635:42;;2355:328;;;;;:::o;2688:186::-;2747:6;2800:2;2788:9;2779:7;2775:23;2771:32;2768:52;;;2816:1;2813;2806:12;2768:52;2839:29;2858:9;2839:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:8;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;5156:470::-;5335:3;5373:6;5367:13;5389:53;5435:6;5430:3;5423:4;5415:6;5411:17;5389:53;:::i;:::-;5505:13;;5464:16;;;;5527:57;5505:13;5464:16;5561:4;5549:17;;5527:57;:::i;:::-;5600:20;;5156:470;-1:-1:-1;;;;5156:470:8:o;5631:489::-;-1:-1:-1;;;;;5900:15:8;;;5882:34;;5952:15;;5947:2;5932:18;;5925:43;5999:2;5984:18;;5977:34;;;6047:3;6042:2;6027:18;;6020:31;;;5825:4;;6068:46;;6094:19;;6086:6;6068:46;:::i;:::-;6060:54;5631:489;-1:-1:-1;;;;;;5631:489:8:o;6125:249::-;6194:6;6247:2;6235:9;6226:7;6222:23;6218:32;6215:52;;;6263:1;6260;6253:12;6215:52;6295:9;6289:16;6314:30;6338:5;6314:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "683600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2640",
								"getApproved(uint256)": "6925",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26607",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4432",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4337",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedSlotAndAddress(uint256)": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5152,
									"end": 5157,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 5152,
									"end": 5157,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5183,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 5176,
									"end": 5183,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5635,
									"end": 5642,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5204,
									"end": 5235,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5204,
									"end": 5235,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 42437,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a150dfb7c9c37c5de2f09784388334f01600b140a1f465fc4144055975782e1364736f6c634300080c0033",
									".code": [
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "6352211E"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "A22CB465"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "A22CB465"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "B88D4FDE"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "C87B56DD"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "E985E9C5"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "6352211E"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "42842E0E"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A7"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "81812FC"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 42437,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1528,
											"end": 1731,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6337,
											"end": 6349,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6337,
											"end": 6349,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6124,
											"end": 6131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6321,
											"end": 6334,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6321,
											"end": 6349,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2309,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2310,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2173,
											"end": 2350,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17849,
											"end": 17853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17891,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9495,
											"end": 9499,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9819,
											"end": 9844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9844,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9844,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9844,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 9819,
											"end": 9921,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9896,
											"end": 9921,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9896,
											"end": 9921,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9896,
											"end": 9921,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9921,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 9819,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9973,
											"end": 9998,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9973,
											"end": 9998,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9973,
											"end": 9998,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9799,
											"end": 9998,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10366,
											"end": 10379,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10399,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16879,
											"end": 16886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16904,
											"end": 16920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 16912,
											"end": 16919,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16904,
											"end": 16911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 16904,
											"end": 16920,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16904,
											"end": 16920,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 16904,
											"end": 16920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16899,
											"end": 16963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 16899,
											"end": 16963,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16899,
											"end": 16963,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 16899,
											"end": 16963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16983,
											"end": 16998,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16325,
											"end": 16338,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16341,
											"end": 16357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 16349,
											"end": 16356,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16341,
											"end": 16348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 16341,
											"end": 16357,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16341,
											"end": 16357,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 16341,
											"end": 16357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16325,
											"end": 16357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16374,
											"end": 16402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16374,
											"end": 16402,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16374,
											"end": 16402,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 16370,
											"end": 16545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 16370,
											"end": 16545,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16422,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 16439,
											"end": 16444,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16422,
											"end": 16466,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 16422,
											"end": 16466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16417,
											"end": 16545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 16417,
											"end": 16545,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16417,
											"end": 16545,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 16417,
											"end": 16545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16572,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 16314,
											"end": 16644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20584,
											"end": 20611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 20614,
											"end": 20641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 20633,
											"end": 20640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 20614,
											"end": 20632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 20614,
											"end": 20641,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 20614,
											"end": 20641,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 20614,
											"end": 20641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20584,
											"end": 20641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20584,
											"end": 20641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20699,
											"end": 20703,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20658,
											"end": 20703,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 20674,
											"end": 20693,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20658,
											"end": 20703,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 20658,
											"end": 20703,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 20654,
											"end": 20740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 20654,
											"end": 20740,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 20654,
											"end": 20740,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 20654,
											"end": 20740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20754,
											"end": 20781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19550,
											"end": 19565,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 19778,
											"end": 19804,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 19778,
											"end": 19804,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 19175,
											"end": 19205,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 19175,
											"end": 19205,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19175,
											"end": 19205,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18868,
											"end": 18896,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 18868,
											"end": 18896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 19153,
											"end": 19173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19153,
											"end": 19173,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 19153,
											"end": 19173,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 19150,
											"end": 19206,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 20940,
											"end": 21120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 20940,
											"end": 21120,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21033,
											"end": 21076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 21050,
											"end": 21054,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 21033,
											"end": 21076,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 21033,
											"end": 21076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21028,
											"end": 21120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 21028,
											"end": 21120,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 21028,
											"end": 21120,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 21028,
											"end": 21120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21137,
											"end": 21153,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 21137,
											"end": 21153,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21133,
											"end": 21185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 21133,
											"end": 21185,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 21133,
											"end": 21185,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 21133,
											"end": 21185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21334,
											"end": 21349,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21331,
											"end": 21491,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 21331,
											"end": 21491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 21331,
											"end": 21491,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21474,
											"end": 21475,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 21453,
											"end": 21472,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 21446,
											"end": 21476,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 21331,
											"end": 21491,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 21331,
											"end": 21491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21889,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15094,
											"end": 15105,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 15069,
											"end": 15092,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 15065,
											"end": 15106,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 15052,
											"end": 15115,
											"name": "OR",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15052,
											"end": 15115,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22233,
											"end": 22250,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 22233,
											"end": 22408,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22528,
											"end": 22575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 22528,
											"end": 22575,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 22524,
											"end": 23151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 22524,
											"end": 23151,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 22633,
											"end": 22634,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 22623,
											"end": 22634,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 22623,
											"end": 22634,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 22601,
											"end": 22620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22756,
											"end": 22773,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22752,
											"end": 23136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 22752,
											"end": 23136,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 22894,
											"end": 22907,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22894,
											"end": 22907,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22879,
											"end": 22890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22879,
											"end": 22907,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 22875,
											"end": 23117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 22875,
											"end": 23117,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23058,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23093,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23093,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23093,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 22875,
											"end": 23117,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 22875,
											"end": 23117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22582,
											"end": 23151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 22524,
											"end": 23151,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 22524,
											"end": 23151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23198,
											"end": 23205,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23194,
											"end": 23196,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 23188,
											"end": 23192,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 20573,
											"end": 23267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20573,
											"end": 23267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20573,
											"end": 23267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 23526,
											"end": 23530,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23532,
											"end": 23534,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23536,
											"end": 23543,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11777,
											"end": 11784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11820,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 11839,
											"end": 11846,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11820,
											"end": 11838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 11820,
											"end": 11847,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7319,
											"end": 7326,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7343,
											"end": 7362,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7343,
											"end": 7362,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7339,
											"end": 7399,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7399,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7339,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7435,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1419,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7417,
											"end": 7472,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10544,
											"end": 10557,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10577,
											"end": 10584,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17474,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24329,
											"end": 24360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 24342,
											"end": 24346,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24348,
											"end": 24350,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24352,
											"end": 24359,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24329,
											"end": 24341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 24329,
											"end": 24360,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 24329,
											"end": 24360,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 24329,
											"end": 24360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24375,
											"end": 24389,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 24375,
											"end": 24389,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 24375,
											"end": 24389,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 24375,
											"end": 24394,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 24371,
											"end": 24554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 24371,
											"end": 24554,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 24414,
											"end": 24470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 24445,
											"end": 24449,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24451,
											"end": 24453,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24455,
											"end": 24462,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24464,
											"end": 24469,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24414,
											"end": 24444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 24414,
											"end": 24470,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 24414,
											"end": 24470,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 24414,
											"end": 24470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24409,
											"end": 24554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 24409,
											"end": 24554,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 24409,
											"end": 24554,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 24409,
											"end": 24554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10771,
											"end": 10784,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10802,
											"end": 10818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 10810,
											"end": 10817,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10802,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 10802,
											"end": 10818,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10802,
											"end": 10818,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 10802,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10797,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 10797,
											"end": 10856,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A14C4B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10827,
											"end": 10856,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10797,
											"end": 10856,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 10797,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10869,
											"end": 10890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10893,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11345,
											"end": 11354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11268,
											"end": 11362,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10893,
											"end": 10903,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 10893,
											"end": 10903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10869,
											"end": 10903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10869,
											"end": 10903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10927,
											"end": 10934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 10942,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10946,
											"end": 10947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10921,
											"end": 10947,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 10947,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10974,
											"end": 10981,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10983,
											"end": 11001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 10993,
											"end": 11000,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10983,
											"end": 10992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 10983,
											"end": 11001,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10983,
											"end": 11001,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 10983,
											"end": 11001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10957,
											"end": 11002,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 10921,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10914,
											"end": 11008,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10698,
											"end": 11016,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18174,
											"end": 18456,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 18174,
											"end": 18456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18239,
											"end": 18243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18329,
											"end": 18342,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18329,
											"end": 18342,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 18319,
											"end": 18326,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18319,
											"end": 18342,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 18276,
											"end": 18429,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18276,
											"end": 18429,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 18276,
											"end": 18429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 18276,
											"end": 18429,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18397,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18380,
											"end": 18424,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18429,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18174,
											"end": 18456,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12860,
											"end": 14135,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 12860,
											"end": 14135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12927,
											"end": 12934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12962,
											"end": 12969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13064,
											"end": 13077,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13064,
											"end": 13077,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13057,
											"end": 13061,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13057,
											"end": 13077,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 13053,
											"end": 14068,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13053,
											"end": 14068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 13053,
											"end": 14068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13102,
											"end": 13116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13119,
											"end": 13136,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13208,
											"end": 13232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13208,
											"end": 13232,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13204,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 13204,
											"end": 14049,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13880,
											"end": 13891,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13951,
											"end": 13957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13933,
											"end": 13950,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13204,
											"end": 14049,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 13204,
											"end": 14049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13079,
											"end": 14068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13053,
											"end": 14068,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 13053,
											"end": 14068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26808,
											"end": 26812,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26808,
											"end": 26812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26829,
											"end": 26874,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26874,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26874,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 26829,
											"end": 26874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26896,
											"end": 26900,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 26896,
											"end": 26900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26902,
											"end": 26909,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 26902,
											"end": 26909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26911,
											"end": 26916,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 26911,
											"end": 26916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27112,
											"end": 27125,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27112,
											"end": 27125,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 27108,
											"end": 27343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 27108,
											"end": 27343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 27108,
											"end": 27343,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 27108,
											"end": 27343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 27301,
											"end": 27307,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27295,
											"end": 27308,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 27286,
											"end": 27292,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 27282,
											"end": 27284,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 27278,
											"end": 27293,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 27271,
											"end": 27309,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26988,
											"end": 27052,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26988,
											"end": 27052,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 26988,
											"end": 27052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 40689,
											"end": 42434,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 40689,
											"end": 42434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 40754,
											"end": 40771,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 41188,
											"end": 41192,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 41181,
											"end": 41185,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 41175,
											"end": 41186,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 41171,
											"end": 41193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 41280,
											"end": 41281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 41274,
											"end": 41278,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 41267,
											"end": 41282,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 41355,
											"end": 41359,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 41352,
											"end": 41353,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 41348,
											"end": 41360,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 41341,
											"end": 41360,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 41341,
											"end": 41360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 41341,
											"end": 41360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 41437,
											"end": 41438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 41432,
											"end": 41435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 41425,
											"end": 41439,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 41541,
											"end": 41544,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 41780,
											"end": 41785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 41762,
											"end": 42190,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 41762,
											"end": 42190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 41828,
											"end": 41829,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 41823,
											"end": 41826,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 41819,
											"end": 41830,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 41812,
											"end": 41830,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 41812,
											"end": 41830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 41999,
											"end": 42001,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 41993,
											"end": 41997,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 41989,
											"end": 42002,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 41985,
											"end": 41987,
											"name": "PUSH",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 41981,
											"end": 42003,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 41976,
											"end": 41979,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 41968,
											"end": 42004,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 42093,
											"end": 42095,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 42083,
											"end": 42096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 42083,
											"end": 42096,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 42083,
											"end": 42096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 42168,
											"end": 42173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 42168,
											"end": 42173,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 42150,
											"end": 42175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 41762,
											"end": 42190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 41762,
											"end": 42190,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 41762,
											"end": 42190,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 41762,
											"end": 42190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42220,
											"end": 42233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 42220,
											"end": 42233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 42220,
											"end": 42233,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 42335,
											"end": 42349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 42335,
											"end": 42349,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 42335,
											"end": 42349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 42397,
											"end": 42416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 42397,
											"end": 42416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 42397,
											"end": 42416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 42335,
											"end": 42349,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 40689,
											"end": 42434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40689,
											"end": 42434,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 68,
											"end": 139,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 335,
											"end": 365,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 688,
											"end": 694,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 682,
											"end": 695,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 674,
											"end": 787,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 764,
											"end": 775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 758,
											"end": 776,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 745,
											"end": 756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 738,
											"end": 777,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 713,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 805,
											"end": 811,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 799,
											"end": 812,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 796,
											"end": 844,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 796,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 796,
											"end": 844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 838,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 822,
											"end": 838,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 815,
											"end": 842,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 897,
											"end": 900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 929,
											"end": 941,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 950,
											"end": 969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1025,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1032,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1011,
											"end": 1015,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1074,
											"end": 1089,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1099,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1102,
											"end": 1106,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1326,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1311,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1430,
											"end": 1453,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1458,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1461,
											"end": 1473,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2018,
											"end": 2041,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2014,
											"end": 2046,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2072,
											"end": 2111,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2454,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2503,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2472,
											"end": 2504,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2626,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2626,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2671,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2645,
											"end": 2677,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2635,
											"end": 2677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2635,
											"end": 2677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2688,
											"end": 2874,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2688,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2747,
											"end": 2753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2802,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2788,
											"end": 2797,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2786,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2775,
											"end": 2798,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2771,
											"end": 2803,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2817,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2813,
											"end": 2814,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2768,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2858,
											"end": 2867,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2839,
											"end": 2868,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2958,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3005,
											"end": 3007,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3002,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2984,
											"end": 2991,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2980,
											"end": 3003,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3008,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3022,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3023,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3125,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3121,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3127,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3176,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3146,
											"end": 3178,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3215,
											"end": 3220,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3231,
											"end": 3358,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3231,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3292,
											"end": 3302,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3283,
											"end": 3303,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3304,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3323,
											"end": 3327,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3320,
											"end": 3321,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3313,
											"end": 3328,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3344,
											"end": 3345,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3458,
											"end": 3464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3474,
											"end": 3480,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3535,
											"end": 3538,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3523,
											"end": 3532,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 3657,
											"end": 3659,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3646,
											"end": 3655,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3613,
											"end": 3661,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3613,
											"end": 3661,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3710,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3712,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3752,
											"end": 3761,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3748,
											"end": 3766,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3735,
											"end": 3767,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3825,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3816,
											"end": 3830,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3856,
											"end": 3888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3856,
											"end": 3888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3923,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3924,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3907,
											"end": 3934,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3946,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 3986,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 3987,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4006,
											"end": 4008,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4004,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4009,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4087,
											"end": 4089,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4081,
											"end": 4090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4141,
											"end": 4154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4154,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4161,
											"end": 4163,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 4133,
											"end": 4164,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4129,
											"end": 4169,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4182,
											"end": 4228,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4271,
											"end": 4281,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4269,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4260,
											"end": 4282,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4306,
											"end": 4308,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4304,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4291,
											"end": 4309,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4346,
											"end": 4353,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4338,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4332,
											"end": 4334,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4324,
											"end": 4344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4321,
											"end": 4354,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4367,
											"end": 4368,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4365,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4357,
											"end": 4369,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 4421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4405,
											"end": 4407,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4426,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4461,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4442,
											"end": 4466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4495,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4588,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4637,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4632,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4614,
											"end": 4621,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4633,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4606,
											"end": 4638,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4649,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 4693,
											"end": 4702,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 4756,
											"end": 4758,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4972,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4956,
											"end": 4973,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5021,
											"end": 5023,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5013,
											"end": 5019,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5024,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5025,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5077,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 5062,
											"end": 5065,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5058,
											"end": 5078,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5079,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5092,
											"end": 5107,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5130,
											"end": 5134,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5127,
											"end": 5128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5135,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5156,
											"end": 5626,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 5156,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5380,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 5435,
											"end": 5441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5430,
											"end": 5433,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5423,
											"end": 5427,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5415,
											"end": 5421,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5411,
											"end": 5428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 5389,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5505,
											"end": 5518,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5505,
											"end": 5518,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5505,
											"end": 5518,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5480,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5561,
											"end": 5565,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5549,
											"end": 5566,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5549,
											"end": 5566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5527,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5620,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5626,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5156,
											"end": 5626,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5631,
											"end": 6120,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 5631,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5900,
											"end": 5915,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5882,
											"end": 5916,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5882,
											"end": 5916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5952,
											"end": 5967,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5952,
											"end": 5967,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5947,
											"end": 5949,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5925,
											"end": 5968,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6001,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5984,
											"end": 6002,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6042,
											"end": 6044,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6027,
											"end": 6045,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6051,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6051,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5825,
											"end": 5829,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5825,
											"end": 5829,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6086,
											"end": 6092,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6068,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6060,
											"end": 6114,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 5631,
											"end": 6120,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5631,
											"end": 6120,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6125,
											"end": 6374,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 6125,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6194,
											"end": 6200,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6249,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6244,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6233,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6222,
											"end": 6245,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6218,
											"end": 6250,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6263,
											"end": 6264,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6253,
											"end": 6265,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6215,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6295,
											"end": 6304,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6289,
											"end": 6305,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC721A.sol\":{\"keccak256\":\"0x9f5a967104a5603a1094fdb66aa218d1e2e2bfee8c8f534081c5dc75a1f248be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59cba8070007e8ac094138dc5edd5582f0198ef045d15cc66f61ae7630ef194d\",\"dweb:/ipfs/QmU3rwvKBbpz7sXwZ7aYCuacWkhNYJKcrMe9yQgrRQvZjh\"]},\"contracts/IERC721A.sol\":{\"keccak256\":\"0x8bb4a4d0e8649b403839485b5afd8d3a0a99917c868096566ef4787ab90e9a3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://569ca4f6327aad3dcee9b8c531b581ed626969d957cc23a2ad7f68c6eedeff52\",\"dweb:/ipfs/QmS2GDmqStyYVZmBTELaNK4kKjAdphM8gRtBycZjGitX6Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1320,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1322,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1324,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1326,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1330,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1334,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1339,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)1252_storage)"
							},
							{
								"astId": 1345,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)1252_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)1252_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)1252_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 1251,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC721A.sol\":{\"keccak256\":\"0x9f5a967104a5603a1094fdb66aa218d1e2e2bfee8c8f534081c5dc75a1f248be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59cba8070007e8ac094138dc5edd5582f0198ef045d15cc66f61ae7630ef194d\",\"dweb:/ipfs/QmU3rwvKBbpz7sXwZ7aYCuacWkhNYJKcrMe9yQgrRQvZjh\"]},\"contracts/IERC721A.sol\":{\"keccak256\":\"0x8bb4a4d0e8649b403839485b5afd8d3a0a99917c868096566ef4787ab90e9a3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://569ca4f6327aad3dcee9b8c531b581ed626969d957cc23a2ad7f68c6eedeff52\",\"dweb:/ipfs/QmS2GDmqStyYVZmBTELaNK4kKjAdphM8gRtBycZjGitX6Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC721A.sol\":{\"keccak256\":\"0x8bb4a4d0e8649b403839485b5afd8d3a0a99917c868096566ef4787ab90e9a3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://569ca4f6327aad3dcee9b8c531b581ed626969d957cc23a2ad7f68c6eedeff52\",\"dweb:/ipfs/QmS2GDmqStyYVZmBTELaNK4kKjAdphM8gRtBycZjGitX6Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/fourtwo.sol": {
				"fourtwo": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_initBaseURI",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "AllowlistLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "addressMintedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowlist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"name": "allowlistUsers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseExtension",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cost",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "isAllowlisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_mintAmount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onlyAllowlisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								}
							],
							"name": "ownerOfTokenIds",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_state",
									"type": "bool"
								}
							],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"name": "removeUsersFromAllowlist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_newBaseExtension",
									"type": "string"
								}
							],
							"name": "setBaseExtension",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_newBaseURI",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_state",
									"type": "bool"
								}
							],
							"name": "setOnlyAllowlisted",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/fourtwo.sol\":418:455  string public baseExtension = \".json\" */\n  0xc0\n    /* \"contracts/fourtwo.sol\":290:3974  contract fourtwo is Ownable, ERC721A, ReentrancyGuard {... */\n  0x40\n    /* \"contracts/fourtwo.sol\":418:455  string public baseExtension = \".json\" */\n  mstore\n  0x05\n    /* \"contracts/fourtwo.sol\":290:3974  contract fourtwo is Ownable, ERC721A, ReentrancyGuard {... */\n  0x80\n    /* \"contracts/fourtwo.sol\":418:455  string public baseExtension = \".json\" */\n  dup2\n  swap1\n  mstore\n  shl(0xd9, 0x173539b7b7)\n  0xa0\n  swap1\n  dup2\n  mstore\n  tag_1\n  swap2\n  0x0b\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/fourtwo.sol\":484:494  0.00 ether */\n  0x00\n    /* \"contracts/fourtwo.sol\":462:494  uint256 public cost = 0.00 ether */\n  0x0c\n  sstore\n    /* \"contracts/fourtwo.sol\":526:529  420 */\n  0x01a4\n    /* \"contracts/fourtwo.sol\":499:529  uint256 public maxSupply = 420 */\n  0x0d\n  sstore\n    /* \"contracts/fourtwo.sol\":566:567  5 */\n  0x05\n    /* \"contracts/fourtwo.sol\":534:567  uint256 public AllowlistLimit = 5 */\n  0x0e\n  sstore\n    /* \"contracts/fourtwo.sol\":574:600  bool public paused = false */\n  0x0f\n  dup1\n  sload\n  not(0xffff)\n    /* \"contracts/fourtwo.sol\":605:640  bool public onlyAllowlisted = false */\n  and\n  swap1\n  sstore\n    /* \"contracts/fourtwo.sol\":753:865  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_4\n  swap2\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/ERC721A.sol\":5085:5243  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd4, 0x034343232303)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x494d49)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_11:\n    /* \"contracts/ERC721A.sol\":5152:5165  _name = name_ */\n  dup2\n  mload\n  tag_16\n  swap1\n    /* \"contracts/ERC721A.sol\":5152:5157  _name */\n  0x03\n  swap1\n    /* \"contracts/ERC721A.sol\":5152:5165  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_16:\n  pop\n    /* \"contracts/ERC721A.sol\":5176:5193  _symbol = symbol_ */\n  dup1\n  mload\n  tag_17\n  swap1\n    /* \"contracts/ERC721A.sol\":5176:5183  _symbol */\n  0x04\n  swap1\n    /* \"contracts/ERC721A.sol\":5176:5193  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_17:\n  pop\n  pop\n    /* \"contracts/ERC721A.sol\":5635:5642  uint256 */\n  0x00\n    /* \"contracts/ERC721A.sol\":5204:5217  _currentIndex */\n  0x01\n    /* \"contracts/ERC721A.sol\":5204:5235  _currentIndex = _startTokenId() */\n  swap1\n  dup2\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x09\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n  pop\n    /* \"contracts/fourtwo.sol\":835:859  setBaseURI(_initBaseURI) */\n  tag_22\n    /* \"contracts/fourtwo.sol\":846:858  _initBaseURI */\n  dup2\n    /* \"contracts/fourtwo.sol\":835:845  setBaseURI */\n  tag_23\n    /* \"contracts/fourtwo.sol\":835:859  setBaseURI(_initBaseURI) */\n  jump\t// in\ntag_22:\n    /* \"contracts/fourtwo.sol\":753:865  constructor(... */\n  pop\n    /* \"contracts/fourtwo.sol\":290:3974  contract fourtwo is Ownable, ERC721A, ReentrancyGuard {... */\n  jump(tag_53)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/fourtwo.sol\":2596:2694  function setBaseURI(string memory _newBaseURI) public onlyOwner {... */\ntag_23:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n  tag_29\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n  tag_30\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n  jump\t// in\ntag_29:\n    /* \"contracts/fourtwo.sol\":2667:2688  baseURI = _newBaseURI */\n  dup1\n  mload\n  tag_32\n  swap1\n    /* \"contracts/fourtwo.sol\":2667:2674  baseURI */\n  0x0a\n  swap1\n    /* \"contracts/fourtwo.sol\":2667:2688  baseURI = _newBaseURI */\n  0x20\n  dup5\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_32:\n  pop\n    /* \"contracts/fourtwo.sol\":2596:2694  function setBaseURI(string memory _newBaseURI) public onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\ntag_30:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_37\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1440:1442   */\n  0x20\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1422:1443   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":1459:1477   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1452:1482   */\n  mstore\n    /* \"#utility.yul\":1518:1552   */\n  0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n    /* \"#utility.yul\":1498:1516   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1491:1553   */\n  mstore\n    /* \"#utility.yul\":1570:1588   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_37:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n  jump\t// out\n    /* \"contracts/fourtwo.sol\":290:3974  contract fourtwo is Ownable, ERC721A, ReentrancyGuard {... */\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_41\n  swap1\n  tag_42\n  jump\t// in\ntag_41:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_44\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_47)\ntag_44:\n  dup3\n  0x1f\n  lt\n  tag_45\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_47)\ntag_45:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_47\n  jumpi\n  swap2\n  dup3\n  add\ntag_46:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_47\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_46)\ntag_47:\n  pop\n  tag_48\n  swap3\n  swap2\n  pop\n  tag_49\n  jump\t// in\ntag_48:\n  pop\n  swap1\n  jump\t// out\ntag_49:\ntag_50:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_48\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_50)\n    /* \"#utility.yul\":14:141   */\ntag_52:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1233   */\ntag_5:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":257:259   */\n  0x20\n    /* \"#utility.yul\":300:302   */\n  dup1\n    /* \"#utility.yul\":288:297   */\n  dup4\n    /* \"#utility.yul\":279:286   */\n  dup6\n    /* \"#utility.yul\":275:298   */\n  sub\n    /* \"#utility.yul\":271:303   */\n  slt\n    /* \"#utility.yul\":268:320   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":313:314   */\n  dup1\n    /* \"#utility.yul\":306:318   */\n  revert\n    /* \"#utility.yul\":268:320   */\ntag_56:\n    /* \"#utility.yul\":343:359   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":408:422   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":405:439   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":432:433   */\n  dup1\n    /* \"#utility.yul\":425:437   */\n  revert\n    /* \"#utility.yul\":405:439   */\ntag_57:\n    /* \"#utility.yul\":473:479   */\n  dup2\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":448:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":518:525   */\n  dup6\n    /* \"#utility.yul\":511:515   */\n  0x1f\n    /* \"#utility.yul\":507:509   */\n  dup4\n    /* \"#utility.yul\":503:516   */\n  add\n    /* \"#utility.yul\":499:526   */\n  slt\n    /* \"#utility.yul\":489:544   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":540:541   */\n  0x00\n    /* \"#utility.yul\":537:538   */\n  dup1\n    /* \"#utility.yul\":530:542   */\n  revert\n    /* \"#utility.yul\":489:544   */\ntag_58:\n    /* \"#utility.yul\":569:571   */\n  dup2\n    /* \"#utility.yul\":563:572   */\n  mload\n    /* \"#utility.yul\":591:593   */\n  dup2\n    /* \"#utility.yul\":587:589   */\n  dup2\n    /* \"#utility.yul\":584:594   */\n  gt\n    /* \"#utility.yul\":581:617   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":597:615   */\n  tag_60\n  tag_52\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":672:674   */\n  0x40\n    /* \"#utility.yul\":666:675   */\n  mload\n    /* \"#utility.yul\":640:642   */\n  0x1f\n    /* \"#utility.yul\":726:739   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":722:744   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":746:748   */\n  0x3f\n    /* \"#utility.yul\":718:749   */\n  add\n    /* \"#utility.yul\":714:754   */\n  and\n    /* \"#utility.yul\":702:755   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":770:788   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":790:812   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":767:813   */\n  or\n    /* \"#utility.yul\":764:836   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":816:834   */\n  tag_62\n  tag_52\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":856:866   */\n  dup2\n    /* \"#utility.yul\":852:854   */\n  0x40\n    /* \"#utility.yul\":845:867   */\n  mstore\n    /* \"#utility.yul\":891:893   */\n  dup3\n    /* \"#utility.yul\":883:889   */\n  dup2\n    /* \"#utility.yul\":876:894   */\n  mstore\n    /* \"#utility.yul\":931:938   */\n  dup9\n    /* \"#utility.yul\":926:928   */\n  dup7\n    /* \"#utility.yul\":921:923   */\n  dup5\n    /* \"#utility.yul\":917:919   */\n  dup8\n    /* \"#utility.yul\":913:924   */\n  add\n    /* \"#utility.yul\":909:929   */\n  add\n    /* \"#utility.yul\":906:939   */\n  gt\n    /* \"#utility.yul\":903:956   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":952:953   */\n  0x00\n    /* \"#utility.yul\":949:950   */\n  dup1\n    /* \"#utility.yul\":942:954   */\n  revert\n    /* \"#utility.yul\":903:956   */\ntag_63:\n    /* \"#utility.yul\":974:975   */\n  0x00\n    /* \"#utility.yul\":965:975   */\n  swap4\n  pop\n    /* \"#utility.yul\":984:1113   */\ntag_64:\n    /* \"#utility.yul\":998:1000   */\n  dup3\n    /* \"#utility.yul\":995:996   */\n  dup5\n    /* \"#utility.yul\":992:1001   */\n  lt\n    /* \"#utility.yul\":984:1113   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1082:1101   */\n  dup7\n  add\n    /* \"#utility.yul\":1076:1102   */\n  mload\n    /* \"#utility.yul\":1055:1069   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1051:1074   */\n  dup8\n  add\n    /* \"#utility.yul\":1044:1103   */\n  mstore\n    /* \"#utility.yul\":1009:1019   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":984:1113   */\n  jump(tag_64)\ntag_66:\n    /* \"#utility.yul\":1131:1133   */\n  dup3\n    /* \"#utility.yul\":1128:1129   */\n  dup5\n    /* \"#utility.yul\":1125:1134   */\n  gt\n    /* \"#utility.yul\":1122:1202   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1190:1191   */\n  0x00\n    /* \"#utility.yul\":1185:1187   */\n  dup7\n    /* \"#utility.yul\":1180:1182   */\n  dup5\n    /* \"#utility.yul\":1172:1178   */\n  dup4\n    /* \"#utility.yul\":1168:1183   */\n  add\n    /* \"#utility.yul\":1164:1188   */\n  add\n    /* \"#utility.yul\":1157:1192   */\n  mstore\n    /* \"#utility.yul\":1122:1202   */\ntag_67:\n    /* \"#utility.yul\":1221:1227   */\n  swap9\n    /* \"#utility.yul\":146:1233   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1599:1979   */\ntag_42:\n    /* \"#utility.yul\":1678:1679   */\n  0x01\n    /* \"#utility.yul\":1674:1686   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1721:1733   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1742:1803   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1796:1800   */\n  0x7f\n    /* \"#utility.yul\":1788:1794   */\n  dup3\n    /* \"#utility.yul\":1784:1801   */\n  and\n    /* \"#utility.yul\":1774:1801   */\n  swap2\n  pop\n    /* \"#utility.yul\":1742:1803   */\ntag_70:\n    /* \"#utility.yul\":1849:1851   */\n  0x20\n    /* \"#utility.yul\":1841:1847   */\n  dup3\n    /* \"#utility.yul\":1838:1852   */\n  lt\n    /* \"#utility.yul\":1818:1836   */\n  dup2\n    /* \"#utility.yul\":1815:1853   */\n  eq\n    /* \"#utility.yul\":1812:1973   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1895:1905   */\n  0x4e487b71\n    /* \"#utility.yul\":1890:1893   */\n  0xe0\n    /* \"#utility.yul\":1886:1906   */\n  shl\n    /* \"#utility.yul\":1883:1884   */\n  0x00\n    /* \"#utility.yul\":1876:1907   */\n  mstore\n    /* \"#utility.yul\":1930:1934   */\n  0x22\n    /* \"#utility.yul\":1927:1928   */\n  0x04\n    /* \"#utility.yul\":1920:1935   */\n  mstore\n    /* \"#utility.yul\":1958:1962   */\n  0x24\n    /* \"#utility.yul\":1955:1956   */\n  0x00\n    /* \"#utility.yul\":1948:1963   */\n  revert\n    /* \"#utility.yul\":1812:1973   */\ntag_71:\n  pop\n    /* \"#utility.yul\":1599:1979   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_53:\n    /* \"contracts/fourtwo.sol\":290:3974  contract fourtwo is Ownable, ERC721A, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/fourtwo.sol\":290:3974  contract fourtwo is Ownable, ERC721A, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xb3807b1d\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xca8a7d5e\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xca8a7d5e\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xda3ef23f\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0xb3807b1d\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xc6682862\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa7cd52cb\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x6352211e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x674c02aa\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x17dc10c4\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x3ccfd60b\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x55f804b3\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5b9e3ccf\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x17dc10c4\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x18cae269\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x081812fc\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x13faede6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x142b0fbe\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x02329a29\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x05a3b809\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC721A.sol\":9410:10049  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/ERC721A.sol\":9410:10049  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fourtwo.sol\":2828:2903  function pause(bool _state) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/fourtwo.sol\":2054:2155  function isAllowlisted(address _user) public view returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_45\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fourtwo.sol\":2133:2149  allowlist[_user] */\n      and\n        /* \"contracts/fourtwo.sol\":2113:2117  bool */\n      0x00\n        /* \"contracts/fourtwo.sol\":2133:2149  allowlist[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fourtwo.sol\":2133:2142  allowlist */\n      0x10\n        /* \"contracts/fourtwo.sol\":2133:2149  allowlist[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/fourtwo.sol\":2054:2155  function isAllowlisted(address _user) public view returns (bool) {... */\n      jump\n        /* \"contracts/ERC721A.sol\":10312:10412  function name() public view virtual override returns (string memory) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":16803:17021  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2411:2443   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2393:2444   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2381:2383   */\n      0x20\n        /* \"#utility.yul\":2366:2384   */\n      add\n        /* \"contracts/ERC721A.sol\":16803:17021  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_49\n        /* \"#utility.yul\":2247:2450   */\n      jump\n        /* \"contracts/ERC721A.sol\":16236:16644  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_7:\n      tag_52\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"contracts/fourtwo.sol\":462:494  uint256 public cost = 0.00 ether */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      sload(0x0c)\n      dup2\n      jump\n    tag_79:\n      mload(0x40)\n        /* \"#utility.yul\":2860:2885   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2848:2850   */\n      0x20\n        /* \"#utility.yul\":2833:2851   */\n      add\n        /* \"contracts/fourtwo.sol\":462:494  uint256 public cost = 0.00 ether */\n      tag_49\n        /* \"#utility.yul\":2714:2891   */\n      jump\n        /* \"contracts/fourtwo.sol\":3197:3387  function removeUsersFromAllowlist(address[] calldata addresses) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_52\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"contracts/fourtwo.sol\":2911:3006  function setOnlyAllowlisted(bool _state) public onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_52\n      tag_90\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":6063:6386  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n        /* \"contracts/ERC721A.sol\":6337:6349  _burnCounter */\n      sload(0x02)\n        /* \"contracts/ERC721A.sol\":6321:6334  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":6321:6349  _currentIndex - _burnCounter */\n      sub\n        /* \"contracts/ERC721A.sol\":6063:6386  function totalSupply() public view virtual override returns (uint256) {... */\n      jump(tag_79)\n        /* \"contracts/fourtwo.sol\":691:746  mapping(address => uint256) public addressMintedBalance */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_79\n      tag_98\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_98:\n      mstore(0x20, 0x11)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/ERC721A.sol\":20442:23267  function transferFrom(... */\n    tag_13:\n      tag_52\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"contracts/fourtwo.sol\":3861:3967  function withdraw() public payable onlyOwner {... */\n    tag_14:\n      tag_52\n      tag_106\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":23363:23556  function safeTransferFrom(... */\n    tag_15:\n      tag_52\n      tag_108\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"contracts/fourtwo.sol\":2596:2694  function setBaseURI(string memory _newBaseURI) public onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_52\n      tag_112\n      calldatasize\n      0x04\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n        /* \"contracts/fourtwo.sol\":3012:3191  function allowlistUsers(address[] calldata addresses) external onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_52\n      tag_117\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n        /* \"contracts/fourtwo.sol\":574:600  bool public paused = false */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      sload(0x0f)\n      tag_45\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/ERC721A.sol\":11705:11857  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_68\n      tag_125\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n        /* \"contracts/fourtwo.sol\":605:640  bool public onlyAllowlisted = false */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      sload(0x0f)\n      tag_45\n      swap1\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/ERC721A.sol\":7247:7480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_79\n      tag_134\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_52\n      tag_139\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_68)\n        /* \"contracts/ERC721A.sol\":10488:10592  function symbol() public view virtual override returns (string memory) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_63\n      tag_146\n      jump\t// in\n        /* \"contracts/fourtwo.sol\":1009:2044  function mint(uint256 _mintAmount) public payable {... */\n    tag_25:\n      tag_52\n      tag_149\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_149:\n      tag_150\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17361:17595  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_52\n      tag_153\n      calldatasize\n      0x04\n      tag_154\n      jump\t// in\n    tag_153:\n      tag_155\n      jump\t// in\n        /* \"contracts/fourtwo.sol\":645:686  mapping(address => bool) public allowlist */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_45\n      tag_158\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_158:\n      mstore(0x20, 0x10)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/fourtwo.sol\":534:567  uint256 public AllowlistLimit = 5 */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      tag_79\n      sload(0x0e)\n      dup2\n      jump\n        /* \"contracts/ERC721A.sol\":24154:24561  function safeTransferFrom(... */\n    tag_29:\n      tag_52\n      tag_166\n      calldatasize\n      0x04\n      tag_167\n      jump\t// in\n    tag_166:\n      tag_168\n      jump\t// in\n        /* \"contracts/fourtwo.sol\":418:455  string public baseExtension = \".json\" */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_63\n      tag_171\n      jump\t// in\n        /* \"contracts/fourtwo.sol\":2161:2586  function tokenURI(uint256 tokenId)... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n      tag_63\n      tag_175\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_175:\n      tag_176\n      jump\t// in\n        /* \"contracts/fourtwo.sol\":3393:3854  function ownerOfTokenIds(address tokenOwner) external view returns (uint256[] memory) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      tag_179\n      tag_180\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_180:\n      tag_181\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n        /* \"contracts/fourtwo.sol\":499:529  uint256 public maxSupply = 420 */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      tag_79\n      sload(0x0d)\n      dup2\n      jump\n        /* \"contracts/fourtwo.sol\":2700:2822  function setBaseExtension(string memory _newBaseExtension) public onlyOwner {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_188:\n      pop\n      tag_52\n      tag_190\n      calldatasize\n      0x04\n      tag_113\n      jump\t// in\n    tag_190:\n      tag_191\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17752:17916  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      tag_45\n      tag_194\n      calldatasize\n      0x04\n      tag_195\n      jump\t// in\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":17873:17898  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":17849:17853  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":17873:17898  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17873:17891  _operatorApprovals */\n      0x08\n        /* \"contracts/ERC721A.sol\":17873:17898  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC721A.sol\":17873:17908  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":17752:17916  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_198\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_198:\n      pop\n      tag_52\n      tag_200\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_200:\n      tag_201\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":9410:10049  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_48:\n        /* \"contracts/ERC721A.sol\":9495:9499  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":9819:9844  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"contracts/ERC721A.sol\":9819:9921  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_203\n      jumpi\n      pop\n      shl(0xe0, 0x80ac58cd)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":9896:9921  interfaceId == 0x80ac58cd */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":9819:9921  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_203:\n        /* \"contracts/ERC721A.sol\":9819:9998  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_204\n      jumpi\n      pop\n      shl(0xe0, 0x5b5e139f)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":9973:9998  interfaceId == 0x5b5e139f */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":9819:9998  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_204:\n        /* \"contracts/ERC721A.sol\":9799:9998  return... */\n      swap3\n        /* \"contracts/ERC721A.sol\":9410:10049  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fourtwo.sol\":2828:2903  function pause(bool _state) external onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_206:\n        /* \"contracts/fourtwo.sol\":2882:2888  paused */\n      0x0f\n        /* \"contracts/fourtwo.sol\":2882:2897  paused = _state */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/fourtwo.sol\":2828:2903  function pause(bool _state) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10312:10412  function name() public view virtual override returns (string memory) {... */\n    tag_64:\n        /* \"contracts/ERC721A.sol\":10366:10379  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10399:10404  _name */\n      0x03\n        /* \"contracts/ERC721A.sol\":10392:10404  return _name */\n      dup1\n      sload\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_213\n      swap1\n      tag_212\n      jump\t// in\n    tag_213:\n      dup1\n      iszero\n      tag_214\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_215\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_214)\n    tag_215:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_216:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_216\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_214:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":10312:10412  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":16803:17021  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_71:\n        /* \"contracts/ERC721A.sol\":16879:16886  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":16904:16920  _exists(tokenId) */\n      tag_218\n        /* \"contracts/ERC721A.sol\":16912:16919  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":16904:16911  _exists */\n      tag_219\n        /* \"contracts/ERC721A.sol\":16904:16920  _exists(tokenId) */\n      jump\t// in\n    tag_218:\n        /* \"contracts/ERC721A.sol\":16899:16963  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_220\n      jumpi\n        /* \"contracts/ERC721A.sol\":16929:16963  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":16899:16963  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_220:\n      pop\n        /* \"contracts/ERC721A.sol\":16983:17007  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":16983:16998  _tokenApprovals */\n      0x07\n        /* \"contracts/ERC721A.sol\":16983:17007  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":16983:17013  _tokenApprovals[tokenId].value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":16803:17021  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":16236:16644  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_77:\n        /* \"contracts/ERC721A.sol\":16325:16338  address owner */\n      0x00\n        /* \"contracts/ERC721A.sol\":16341:16357  ownerOf(tokenId) */\n      tag_222\n        /* \"contracts/ERC721A.sol\":16349:16356  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":16341:16348  ownerOf */\n      tag_126\n        /* \"contracts/ERC721A.sol\":16341:16357  ownerOf(tokenId) */\n      jump\t// in\n    tag_222:\n        /* \"contracts/ERC721A.sol\":16325:16357  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":40569:40579  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":16374:16402  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":16370:16545  if (_msgSenderERC721A() != owner)... */\n      tag_228\n      jumpi\n        /* \"contracts/ERC721A.sol\":16422:16466  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_226\n        /* \"contracts/ERC721A.sol\":16439:16444  owner */\n      dup2\n        /* \"contracts/ERC721A.sol\":40569:40579  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17752:17916  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_194\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":16422:16466  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_226:\n        /* \"contracts/ERC721A.sol\":16417:16545  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_228\n      jumpi\n        /* \"contracts/ERC721A.sol\":16494:16529  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":16417:16545  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_228:\n        /* \"contracts/ERC721A.sol\":16557:16581  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":16557:16572  _tokenApprovals */\n      0x07\n        /* \"contracts/ERC721A.sol\":16557:16581  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC721A.sol\":16557:16592  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC721A.sol\":16608:16636  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"contracts/ERC721A.sol\":16557:16581  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"contracts/ERC721A.sol\":16608:16636  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"contracts/ERC721A.sol\":16314:16644  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":16236:16644  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fourtwo.sol\":3197:3387  function removeUsersFromAllowlist(address[] calldata addresses) external onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_230:\n        /* \"contracts/fourtwo.sol\":3292:3301  uint256 i */\n      0x00\n        /* \"contracts/fourtwo.sol\":3287:3382  for (uint256 i = 0; i < addresses.length; i++) {... */\n    tag_232:\n        /* \"contracts/fourtwo.sol\":3307:3327  i < addresses.length */\n      dup2\n      dup2\n      lt\n        /* \"contracts/fourtwo.sol\":3287:3382  for (uint256 i = 0; i < addresses.length; i++) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"contracts/fourtwo.sol\":3369:3374  false */\n      0x00\n        /* \"contracts/fourtwo.sol\":3343:3352  allowlist */\n      0x10\n        /* \"contracts/fourtwo.sol\":3343:3366  allowlist[addresses[i]] */\n      0x00\n        /* \"contracts/fourtwo.sol\":3353:3362  addresses */\n      dup6\n      dup6\n        /* \"contracts/fourtwo.sol\":3363:3364  i */\n      dup6\n        /* \"contracts/fourtwo.sol\":3353:3365  addresses[i] */\n      dup2\n      dup2\n      lt\n      tag_236\n      jumpi\n      tag_236\n      tag_237\n      jump\t// in\n    tag_236:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_238\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fourtwo.sol\":3343:3366  allowlist[addresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/fourtwo.sol\":3343:3374  allowlist[addresses[i]] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/fourtwo.sol\":3329:3332  i++ */\n      dup1\n      tag_239\n      dup2\n      tag_240\n      jump\t// in\n    tag_239:\n      swap2\n      pop\n      pop\n        /* \"contracts/fourtwo.sol\":3287:3382  for (uint256 i = 0; i < addresses.length; i++) {... */\n      jump(tag_232)\n    tag_233:\n      pop\n        /* \"contracts/fourtwo.sol\":3197:3387  function removeUsersFromAllowlist(address[] calldata addresses) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fourtwo.sol\":2911:3006  function setOnlyAllowlisted(bool _state) public onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_242:\n        /* \"contracts/fourtwo.sol\":2976:2991  onlyAllowlisted */\n      0x0f\n        /* \"contracts/fourtwo.sol\":2976:3000  onlyAllowlisted = _state */\n      dup1\n      sload\n      swap2\n      iszero\n      iszero\n      0x0100\n      mul\n      not(0xff00)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/fourtwo.sol\":2911:3006  function setOnlyAllowlisted(bool _state) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":20442:23267  function transferFrom(... */\n    tag_104:\n        /* \"contracts/ERC721A.sol\":20584:20611  uint256 prevOwnershipPacked */\n      0x00\n        /* \"contracts/ERC721A.sol\":20614:20641  _packedOwnershipOf(tokenId) */\n      tag_248\n        /* \"contracts/ERC721A.sol\":20633:20640  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":20614:20632  _packedOwnershipOf */\n      tag_249\n        /* \"contracts/ERC721A.sol\":20614:20641  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/ERC721A.sol\":20584:20641  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":20699:20703  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":20658:20703  address(uint160(prevOwnershipPacked)) != from */\n      and\n        /* \"contracts/ERC721A.sol\":20674:20693  prevOwnershipPacked */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":20658:20703  address(uint160(prevOwnershipPacked)) != from */\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":20654:20740  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_250\n      jumpi\n        /* \"contracts/ERC721A.sol\":20712:20740  TransferFromIncorrectOwner() */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":20654:20740  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_250:\n        /* \"contracts/ERC721A.sol\":20754:20781  uint256 approvedAddressSlot */\n      0x00\n        /* \"contracts/ERC721A.sol\":19550:19574  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":19550:19565  _tokenApprovals */\n      0x07\n        /* \"contracts/ERC721A.sol\":19550:19574  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":19778:19804  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":40569:40579  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":19175:19205  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":18868:18896  and(owner, _BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"contracts/ERC721A.sol\":19153:19173  eq(msgSender, owner) */\n      swap1\n      swap2\n      eq\n        /* \"contracts/ERC721A.sol\":19150:19206  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"contracts/ERC721A.sol\":20940:21120  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_259\n      jumpi\n        /* \"contracts/ERC721A.sol\":21033:21076  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_257\n        /* \"contracts/ERC721A.sol\":21050:21054  from */\n      dup7\n        /* \"contracts/ERC721A.sol\":40569:40579  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17752:17916  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_194\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":21033:21076  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_257:\n        /* \"contracts/ERC721A.sol\":21028:21120  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_259\n      jumpi\n        /* \"contracts/ERC721A.sol\":21085:21120  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":21028:21120  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":21137:21153  to == address(0) */\n      dup6\n      and\n        /* \"contracts/ERC721A.sol\":21133:21185  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_260\n      jumpi\n        /* \"contracts/ERC721A.sol\":21162:21185  TransferToZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":21133:21185  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_260:\n        /* \"contracts/ERC721A.sol\":21334:21349  approvedAddress */\n      dup1\n        /* \"contracts/ERC721A.sol\":21331:21491  if approvedAddress {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"contracts/ERC721A.sol\":21474:21475  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":21453:21472  approvedAddressSlot */\n      dup3\n        /* \"contracts/ERC721A.sol\":21446:21476  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"contracts/ERC721A.sol\":21331:21491  if approvedAddress {... */\n    tag_263:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":21871:21895  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":21871:21889  _packedAddressData */\n      0x06\n        /* \"contracts/ERC721A.sol\":21871:21895  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC721A.sol\":21869:21895  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":21940:21962  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":21938:21962  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":15094:15105  timestamp() */\n      timestamp\n        /* \"contracts/ERC721A.sol\":15069:15092  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"contracts/ERC721A.sol\":15065:15106  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"contracts/ERC721A.sol\":15052:15115  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"contracts/ERC721A.sol\":22233:22259  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":22233:22250  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":22233:22259  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":22233:22408  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      sstore\n      shl(0xe1, 0x01)\n        /* \"contracts/ERC721A.sol\":22528:22575  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup4\n      and\n        /* \"contracts/ERC721A.sol\":22524:23151  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_268\n      jumpi\n        /* \"contracts/ERC721A.sol\":22633:22634  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":22623:22634  tokenId + 1 */\n      dup5\n      add\n        /* \"contracts/ERC721A.sol\":22601:22620  uint256 nextTokenId */\n      0x00\n        /* \"contracts/ERC721A.sol\":22756:22786  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":22756:22773  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":22756:22786  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":22752:23136  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_270\n      jumpi\n        /* \"contracts/ERC721A.sol\":22894:22907  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":22879:22890  nextTokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":22879:22907  nextTokenId != _currentIndex */\n      eq\n        /* \"contracts/ERC721A.sol\":22875:23117  if (nextTokenId != _currentIndex) {... */\n      tag_270\n      jumpi\n        /* \"contracts/ERC721A.sol\":23041:23071  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":23041:23058  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":23041:23071  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":23041:23093  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":22875:23117  if (nextTokenId != _currentIndex) {... */\n    tag_270:\n        /* \"contracts/ERC721A.sol\":22582:23151  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":22524:23151  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_268:\n        /* \"contracts/ERC721A.sol\":23198:23205  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":23194:23196  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":23179:23206  Transfer(from, to, tokenId) */\n      and\n        /* \"contracts/ERC721A.sol\":23188:23192  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":23179:23206  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC721A.sol\":20573:23267  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":20442:23267  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fourtwo.sol\":3861:3967  function withdraw() public payable onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      sload\n        /* \"contracts/fourtwo.sol\":3913:3961  payable(owner()).transfer(address(this).balance) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/fourtwo.sol\":3939:3960  address(this).balance */\n      selfbalance\n        /* \"contracts/fourtwo.sol\":3913:3961  payable(owner()).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap3\n        /* \"contracts/fourtwo.sol\":3939:3960  address(this).balance */\n      swap1\n      swap2\n        /* \"contracts/fourtwo.sol\":3913:3961  payable(owner()).transfer(address(this).balance) */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      dup2\n        /* \"contracts/fourtwo.sol\":3913:3961  payable(owner()).transfer(address(this).balance) */\n      dup2\n        /* \"contracts/fourtwo.sol\":3939:3960  address(this).balance */\n      dup6\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup9\n        /* \"contracts/fourtwo.sol\":3913:3961  payable(owner()).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_278\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_278:\n      pop\n        /* \"contracts/fourtwo.sol\":3861:3967  function withdraw() public payable onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":23363:23556  function safeTransferFrom(... */\n    tag_109:\n        /* \"contracts/ERC721A.sol\":23509:23548  safeTransferFrom(from, to, tokenId, '') */\n      tag_233\n        /* \"contracts/ERC721A.sol\":23526:23530  from */\n      dup4\n        /* \"contracts/ERC721A.sol\":23532:23534  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":23536:23543  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":23509:23548  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721A.sol\":23509:23525  safeTransferFrom */\n      tag_168\n        /* \"contracts/ERC721A.sol\":23509:23548  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n        /* \"contracts/fourtwo.sol\":2596:2694  function setBaseURI(string memory _newBaseURI) public onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_282\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_282:\n        /* \"contracts/fourtwo.sol\":2667:2688  baseURI = _newBaseURI */\n      dup1\n      mload\n      tag_284\n      swap1\n        /* \"contracts/fourtwo.sol\":2667:2674  baseURI */\n      0x0a\n      swap1\n        /* \"contracts/fourtwo.sol\":2667:2688  baseURI = _newBaseURI */\n      0x20\n      dup5\n      add\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      pop\n        /* \"contracts/fourtwo.sol\":2596:2694  function setBaseURI(string memory _newBaseURI) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/fourtwo.sol\":3012:3191  function allowlistUsers(address[] calldata addresses) external onlyOwner {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_287\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_287:\n        /* \"contracts/fourtwo.sol\":3097:3106  uint256 i */\n      0x00\n        /* \"contracts/fourtwo.sol\":3092:3186  for (uint256 i = 0; i < addresses.length; i++) {... */\n    tag_289:\n        /* \"contracts/fourtwo.sol\":3112:3132  i < addresses.length */\n      dup2\n      dup2\n      lt\n        /* \"contracts/fourtwo.sol\":3092:3186  for (uint256 i = 0; i < addresses.length; i++) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"contracts/fourtwo.sol\":3174:3178  true */\n      0x01\n        /* \"contracts/fourtwo.sol\":3148:3157  allowlist */\n      0x10\n        /* \"contracts/fourtwo.sol\":3148:3171  allowlist[addresses[i]] */\n      0x00\n        /* \"contracts/fourtwo.sol\":3158:3167  addresses */\n      dup6\n      dup6\n        /* \"contracts/fourtwo.sol\":3168:3169  i */\n      dup6\n        /* \"contracts/fourtwo.sol\":3158:3170  addresses[i] */\n      dup2\n      dup2\n      lt\n      tag_293\n      jumpi\n      tag_293\n      tag_237\n      jump\t// in\n    tag_293:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_294\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fourtwo.sol\":3148:3171  allowlist[addresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/fourtwo.sol\":3148:3178  allowlist[addresses[i]] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/fourtwo.sol\":3134:3137  i++ */\n      dup1\n      tag_295\n      dup2\n      tag_240\n      jump\t// in\n    tag_295:\n      swap2\n      pop\n      pop\n        /* \"contracts/fourtwo.sol\":3092:3186  for (uint256 i = 0; i < addresses.length; i++) {... */\n      jump(tag_289)\n        /* \"contracts/ERC721A.sol\":11705:11857  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_126:\n        /* \"contracts/ERC721A.sol\":11777:11784  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":11820:11847  _packedOwnershipOf(tokenId) */\n      tag_204\n        /* \"contracts/ERC721A.sol\":11839:11846  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":11820:11838  _packedOwnershipOf */\n      tag_249\n        /* \"contracts/ERC721A.sol\":11820:11847  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":7247:7480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_135:\n        /* \"contracts/ERC721A.sol\":7319:7326  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":7343:7362  owner == address(0) */\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":7339:7399  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_299\n      jumpi\n        /* \"contracts/ERC721A.sol\":7371:7399  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":7339:7399  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_299:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":7417:7442  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":7417:7435  _packedAddressData */\n      0x06\n        /* \"contracts/ERC721A.sol\":7417:7442  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":1406:1419  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"contracts/ERC721A.sol\":7417:7472  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":7247:7480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_301\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_303\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_304\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10488:10592  function symbol() public view virtual override returns (string memory) {... */\n    tag_146:\n        /* \"contracts/ERC721A.sol\":10544:10557  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10577:10584  _symbol */\n      0x04\n        /* \"contracts/ERC721A.sol\":10570:10584  return _symbol */\n      dup1\n      sload\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n        /* \"contracts/fourtwo.sol\":1009:2044  function mint(uint256 _mintAmount) public payable {... */\n    tag_150:\n        /* \"contracts/fourtwo.sol\":1066:1080  uint256 supply */\n      0x00\n        /* \"contracts/fourtwo.sol\":1083:1096  totalSupply() */\n      tag_313\n        /* \"contracts/ERC721A.sol\":6337:6349  _burnCounter */\n      sload(0x02)\n        /* \"contracts/ERC721A.sol\":6321:6334  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":6321:6349  _currentIndex - _burnCounter */\n      sub\n      swap1\n        /* \"contracts/ERC721A.sol\":6063:6386  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/fourtwo.sol\":1083:1096  totalSupply() */\n    tag_313:\n        /* \"contracts/fourtwo.sol\":1135:1141  paused */\n      sload(0x0f)\n        /* \"contracts/fourtwo.sol\":1066:1096  uint256 supply = totalSupply() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/fourtwo.sol\":1135:1141  paused */\n      0xff\n      and\n        /* \"contracts/fourtwo.sol\":1134:1141  !paused */\n      iszero\n        /* \"contracts/fourtwo.sol\":1126:1241  require(!paused, \"WOAH hold up the mint is not yet live, a little too early there... or late? Transmission Ending\") */\n      tag_314\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7898:7900   */\n      0x20\n        /* \"contracts/fourtwo.sol\":1126:1241  require(!paused, \"WOAH hold up the mint is not yet live, a little too early there... or late? Transmission Ending\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7880:7901   */\n      mstore\n        /* \"#utility.yul\":7937:7939   */\n      0x5f\n        /* \"#utility.yul\":7917:7935   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7910:7940   */\n      mstore\n        /* \"#utility.yul\":7976:8010   */\n      0x574f414820686f6c6420757020746865206d696e74206973206e6f7420796574\n        /* \"#utility.yul\":7956:7974   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7949:8011   */\n      mstore\n        /* \"#utility.yul\":8047:8081   */\n      0x206c6976652c2061206c6974746c6520746f6f206561726c792074686572652e\n        /* \"#utility.yul\":8027:8045   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8020:8082   */\n      mstore\n        /* \"#utility.yul\":8119:8152   */\n      0x2e2e206f72206c6174653f205472616e736d697373696f6e20456e64696e6700\n        /* \"#utility.yul\":8098:8117   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":8091:8153   */\n      mstore\n        /* \"#utility.yul\":8170:8189   */\n      0xa4\n      add\n        /* \"contracts/fourtwo.sol\":1126:1241  require(!paused, \"WOAH hold up the mint is not yet live, a little too early there... or late? Transmission Ending\") */\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_314:\n        /* \"contracts/fourtwo.sol\":1270:1271  0 */\n      0x00\n        /* \"contracts/fourtwo.sol\":1256:1267  _mintAmount */\n      dup3\n        /* \"contracts/fourtwo.sol\":1256:1271  _mintAmount > 0 */\n      gt\n        /* \"contracts/fourtwo.sol\":1248:1339  require(_mintAmount > 0, \"must mint at least 1 nft, 0 is not allowed. Transmission Ending\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8402:8404   */\n      0x20\n        /* \"contracts/fourtwo.sol\":1248:1339  require(_mintAmount > 0, \"must mint at least 1 nft, 0 is not allowed. Transmission Ending\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8384:8405   */\n      mstore\n        /* \"#utility.yul\":8441:8443   */\n      0x3f\n        /* \"#utility.yul\":8421:8439   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8414:8444   */\n      mstore\n        /* \"#utility.yul\":8480:8514   */\n      0x6d757374206d696e74206174206c656173742031206e66742c2030206973206e\n        /* \"#utility.yul\":8460:8478   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8453:8515   */\n      mstore\n        /* \"#utility.yul\":8551:8584   */\n      0x6f7420616c6c6f7765642e205472616e736d697373696f6e20456e64696e6700\n        /* \"#utility.yul\":8531:8549   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8524:8585   */\n      mstore\n        /* \"#utility.yul\":8602:8621   */\n      0x84\n      add\n        /* \"contracts/fourtwo.sol\":1248:1339  require(_mintAmount > 0, \"must mint at least 1 nft, 0 is not allowed. Transmission Ending\") */\n      tag_315\n        /* \"#utility.yul\":8200:8627   */\n      jump\n        /* \"contracts/fourtwo.sol\":1248:1339  require(_mintAmount > 0, \"must mint at least 1 nft, 0 is not allowed. Transmission Ending\") */\n    tag_317:\n        /* \"contracts/fourtwo.sol\":1378:1387  maxSupply */\n      sload(0x0d)\n        /* \"contracts/fourtwo.sol\":1354:1374  supply + _mintAmount */\n      tag_320\n        /* \"contracts/fourtwo.sol\":1363:1374  _mintAmount */\n      dup4\n        /* \"contracts/fourtwo.sol\":1354:1360  supply */\n      dup4\n        /* \"contracts/fourtwo.sol\":1354:1374  supply + _mintAmount */\n      tag_321\n      jump\t// in\n    tag_320:\n        /* \"contracts/fourtwo.sol\":1354:1387  supply + _mintAmount <= maxSupply */\n      gt\n      iszero\n        /* \"contracts/fourtwo.sol\":1346:1445  require(supply + _mintAmount <= maxSupply, \"looks like we are popular max supply has been reached\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8967:8969   */\n      0x20\n        /* \"contracts/fourtwo.sol\":1346:1445  require(supply + _mintAmount <= maxSupply, \"looks like we are popular max supply has been reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8949:8970   */\n      mstore\n        /* \"#utility.yul\":9006:9008   */\n      0x35\n        /* \"#utility.yul\":8986:9004   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8979:9009   */\n      mstore\n        /* \"#utility.yul\":9045:9079   */\n      0x6c6f6f6b73206c696b652077652061726520706f70756c6172206d6178207375\n        /* \"#utility.yul\":9025:9043   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9018:9080   */\n      mstore\n      shl(0x5a, 0x1c1c1b1e481a185cc81899595b881c995858da1959)\n        /* \"#utility.yul\":9096:9114   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9089:9140   */\n      mstore\n        /* \"#utility.yul\":9157:9176   */\n      0x84\n      add\n        /* \"contracts/fourtwo.sol\":1346:1445  require(supply + _mintAmount <= maxSupply, \"looks like we are popular max supply has been reached\") */\n      tag_315\n        /* \"#utility.yul\":8765:9182   */\n      jump\n        /* \"contracts/fourtwo.sol\":1346:1445  require(supply + _mintAmount <= maxSupply, \"looks like we are popular max supply has been reached\") */\n    tag_322:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/fourtwo.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/fourtwo.sol\":1464:1485  msg.sender != owner() */\n      eq\n        /* \"contracts/fourtwo.sol\":1460:1942  if (msg.sender != owner()) {... */\n      tag_341\n      jumpi\n        /* \"contracts/fourtwo.sol\":1553:1554  1 */\n      0x01\n        /* \"contracts/fourtwo.sol\":1538:1549  _mintAmount */\n      dup3\n        /* \"contracts/fourtwo.sol\":1538:1554  _mintAmount <= 1 */\n      gt\n      iszero\n        /* \"contracts/fourtwo.sol\":1530:1579  require(_mintAmount <= 1, \"only 1 at a time :) \") */\n      tag_327\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9389:9391   */\n      0x20\n        /* \"contracts/fourtwo.sol\":1530:1579  require(_mintAmount <= 1, \"only 1 at a time :) \") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9371:9392   */\n      mstore\n        /* \"#utility.yul\":9428:9430   */\n      0x14\n        /* \"#utility.yul\":9408:9426   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9401:9431   */\n      mstore\n      shl(0x65, 0x037b7363c90189030ba1030903a34b6b2901d149)\n        /* \"#utility.yul\":9447:9465   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9440:9490   */\n      mstore\n        /* \"#utility.yul\":9507:9525   */\n      0x64\n      add\n        /* \"contracts/fourtwo.sol\":1530:1579  require(_mintAmount <= 1, \"only 1 at a time :) \") */\n      tag_315\n        /* \"#utility.yul\":9187:9531   */\n      jump\n        /* \"contracts/fourtwo.sol\":1530:1579  require(_mintAmount <= 1, \"only 1 at a time :) \") */\n    tag_327:\n        /* \"contracts/fourtwo.sol\":1593:1608  onlyAllowlisted */\n      sload(0x0f)\n      0xff\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"contracts/fourtwo.sol\":1593:1616  onlyAllowlisted == true */\n      iszero\n      iszero\n        /* \"contracts/fourtwo.sol\":1593:1608  onlyAllowlisted */\n      0x01\n        /* \"contracts/fourtwo.sol\":1593:1616  onlyAllowlisted == true */\n      eq\n        /* \"contracts/fourtwo.sol\":1590:1862  if(onlyAllowlisted == true) {... */\n      iszero\n      tag_330\n      jumpi\n        /* \"contracts/fourtwo.sol\":1655:1665  msg.sender */\n      caller\n        /* \"contracts/fourtwo.sol\":2113:2117  bool */\n      0x00\n        /* \"contracts/fourtwo.sol\":2133:2149  allowlist[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fourtwo.sol\":2133:2142  allowlist */\n      0x10\n        /* \"contracts/fourtwo.sol\":2133:2149  allowlist[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/fourtwo.sol\":1633:1686  require(isAllowlisted(msg.sender), \"Not Allowlisted\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9738:9740   */\n      0x20\n        /* \"contracts/fourtwo.sol\":1633:1686  require(isAllowlisted(msg.sender), \"Not Allowlisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9720:9741   */\n      mstore\n        /* \"#utility.yul\":9777:9779   */\n      0x0f\n        /* \"#utility.yul\":9757:9775   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9750:9780   */\n      mstore\n      shl(0x8a, 0x139bdd08105b1b1bdddb1a5cdd1959)\n        /* \"#utility.yul\":9796:9814   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9789:9834   */\n      mstore\n        /* \"#utility.yul\":9851:9869   */\n      0x64\n      add\n        /* \"contracts/fourtwo.sol\":1633:1686  require(isAllowlisted(msg.sender), \"Not Allowlisted\") */\n      tag_315\n        /* \"#utility.yul\":9536:9875   */\n      jump\n        /* \"contracts/fourtwo.sol\":1633:1686  require(isAllowlisted(msg.sender), \"Not Allowlisted\") */\n    tag_332:\n        /* \"contracts/fourtwo.sol\":1749:1759  msg.sender */\n      caller\n        /* \"contracts/fourtwo.sol\":1701:1725  uint256 ownerMintedCount */\n      0x00\n        /* \"contracts/fourtwo.sol\":1728:1760  addressMintedBalance[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fourtwo.sol\":1728:1748  addressMintedBalance */\n      0x11\n        /* \"contracts/fourtwo.sol\":1728:1760  addressMintedBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/fourtwo.sol\":1817:1831  AllowlistLimit */\n      sload(0x0e)\n        /* \"contracts/fourtwo.sol\":1783:1813  ownerMintedCount + _mintAmount */\n      tag_335\n        /* \"contracts/fourtwo.sol\":1802:1813  _mintAmount */\n      dup5\n        /* \"contracts/fourtwo.sol\":1728:1760  addressMintedBalance[msg.sender] */\n      dup4\n        /* \"contracts/fourtwo.sol\":1783:1813  ownerMintedCount + _mintAmount */\n      tag_321\n      jump\t// in\n    tag_335:\n        /* \"contracts/fourtwo.sol\":1783:1831  ownerMintedCount + _mintAmount <= AllowlistLimit */\n      gt\n      iszero\n        /* \"contracts/fourtwo.sol\":1775:1850  require(ownerMintedCount + _mintAmount <= AllowlistLimit, \"Already minted\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10082:10084   */\n      0x20\n        /* \"contracts/fourtwo.sol\":1775:1850  require(ownerMintedCount + _mintAmount <= AllowlistLimit, \"Already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10064:10085   */\n      mstore\n        /* \"#utility.yul\":10121:10123   */\n      0x0e\n        /* \"#utility.yul\":10101:10119   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10094:10124   */\n      mstore\n      shl(0x92, 0x105b1c9958591e481b5a5b9d1959)\n        /* \"#utility.yul\":10140:10158   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10133:10177   */\n      mstore\n        /* \"#utility.yul\":10194:10212   */\n      0x64\n      add\n        /* \"contracts/fourtwo.sol\":1775:1850  require(ownerMintedCount + _mintAmount <= AllowlistLimit, \"Already minted\") */\n      tag_315\n        /* \"#utility.yul\":9880:10218   */\n      jump\n        /* \"contracts/fourtwo.sol\":1775:1850  require(ownerMintedCount + _mintAmount <= AllowlistLimit, \"Already minted\") */\n    tag_336:\n        /* \"contracts/fourtwo.sol\":1618:1862  {... */\n      pop\n        /* \"contracts/fourtwo.sol\":1590:1862  if(onlyAllowlisted == true) {... */\n    tag_330:\n        /* \"contracts/fourtwo.sol\":1900:1911  _mintAmount */\n      dup2\n        /* \"contracts/fourtwo.sol\":1893:1897  cost */\n      sload(0x0c)\n        /* \"contracts/fourtwo.sol\":1893:1911  cost * _mintAmount */\n      tag_339\n      swap2\n      swap1\n      tag_340\n      jump\t// in\n    tag_339:\n        /* \"contracts/fourtwo.sol\":1880:1889  msg.value */\n      callvalue\n        /* \"contracts/fourtwo.sol\":1880:1911  msg.value >= cost * _mintAmount */\n      lt\n      iszero\n        /* \"contracts/fourtwo.sol\":1872:1934  require(msg.value >= cost * _mintAmount, \"Cost doesn't match\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10598:10600   */\n      0x20\n        /* \"contracts/fourtwo.sol\":1872:1934  require(msg.value >= cost * _mintAmount, \"Cost doesn't match\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10580:10601   */\n      mstore\n        /* \"#utility.yul\":10637:10639   */\n      0x12\n        /* \"#utility.yul\":10617:10635   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10610:10640   */\n      mstore\n      shl(0x73, 0x086dee6e840c8decae6dc4ee840dac2e8c6d)\n        /* \"#utility.yul\":10656:10674   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10649:10697   */\n      mstore\n        /* \"#utility.yul\":10714:10732   */\n      0x64\n      add\n        /* \"contracts/fourtwo.sol\":1872:1934  require(msg.value >= cost * _mintAmount, \"Cost doesn't match\") */\n      tag_315\n        /* \"#utility.yul\":10396:10738   */\n      jump\n        /* \"contracts/fourtwo.sol\":1872:1934  require(msg.value >= cost * _mintAmount, \"Cost doesn't match\") */\n    tag_341:\n        /* \"contracts/fourtwo.sol\":1950:1984  _safeMint(msg.sender, _mintAmount) */\n      tag_344\n        /* \"contracts/fourtwo.sol\":1960:1970  msg.sender */\n      caller\n        /* \"contracts/fourtwo.sol\":1972:1983  _mintAmount */\n      dup4\n        /* \"contracts/fourtwo.sol\":1950:1959  _safeMint */\n      tag_345\n        /* \"contracts/fourtwo.sol\":1950:1984  _safeMint(msg.sender, _mintAmount) */\n      jump\t// in\n    tag_344:\n        /* \"contracts/fourtwo.sol\":2012:2022  msg.sender */\n      caller\n        /* \"contracts/fourtwo.sol\":1991:2023  addressMintedBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/fourtwo.sol\":1991:2011  addressMintedBalance */\n      0x11\n        /* \"contracts/fourtwo.sol\":1991:2023  addressMintedBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/fourtwo.sol\":1991:2038  addressMintedBalance[msg.sender] += _mintAmount */\n      dup1\n      sload\n        /* \"contracts/fourtwo.sol\":2027:2038  _mintAmount */\n      dup5\n      swap3\n        /* \"contracts/fourtwo.sol\":1991:2023  addressMintedBalance[msg.sender] */\n      swap1\n        /* \"contracts/fourtwo.sol\":1991:2038  addressMintedBalance[msg.sender] += _mintAmount */\n      tag_346\n      swap1\n        /* \"contracts/fourtwo.sol\":2027:2038  _mintAmount */\n      dup5\n      swap1\n        /* \"contracts/fourtwo.sol\":1991:2038  addressMintedBalance[msg.sender] += _mintAmount */\n      tag_321\n      jump\t// in\n    tag_346:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/fourtwo.sol\":1009:2044  function mint(uint256 _mintAmount) public payable {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":17361:17595  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_155:\n        /* \"contracts/ERC721A.sol\":40569:40579  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17456:17495  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17456:17474  _operatorApprovals */\n      0x08\n        /* \"contracts/ERC721A.sol\":17456:17495  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":17456:17505  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":17456:17516  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC721A.sol\":17532:17587  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17456:17505  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"contracts/ERC721A.sol\":40569:40579  msg.sender */\n      swap2\n        /* \"contracts/ERC721A.sol\":17532:17587  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/ERC721A.sol\":17532:17587  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC721A.sol\":17361:17595  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":24154:24561  function safeTransferFrom(... */\n    tag_168:\n        /* \"contracts/ERC721A.sol\":24329:24360  transferFrom(from, to, tokenId) */\n      tag_352\n        /* \"contracts/ERC721A.sol\":24342:24346  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":24348:24350  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":24352:24359  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":24329:24341  transferFrom */\n      tag_104\n        /* \"contracts/ERC721A.sol\":24329:24360  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_352:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":24375:24389  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"contracts/ERC721A.sol\":24375:24394  to.code.length != 0 */\n      iszero\n        /* \"contracts/ERC721A.sol\":24371:24554  if (to.code.length != 0)... */\n      tag_356\n      jumpi\n        /* \"contracts/ERC721A.sol\":24414:24470  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_354\n        /* \"contracts/ERC721A.sol\":24445:24449  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":24451:24453  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":24455:24462  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":24464:24469  _data */\n      dup5\n        /* \"contracts/ERC721A.sol\":24414:24444  _checkContractOnERC721Received */\n      tag_355\n        /* \"contracts/ERC721A.sol\":24414:24470  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_354:\n        /* \"contracts/ERC721A.sol\":24409:24554  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_356\n      jumpi\n        /* \"contracts/ERC721A.sol\":24498:24538  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":24409:24554  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_356:\n        /* \"contracts/ERC721A.sol\":24154:24561  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fourtwo.sol\":418:455  string public baseExtension = \".json\" */\n    tag_171:\n      0x0b\n      dup1\n      sload\n      tag_357\n      swap1\n      tag_212\n      jump\t// in\n    tag_357:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_358\n      swap1\n      tag_212\n      jump\t// in\n    tag_358:\n      dup1\n      iszero\n      tag_359\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_360\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_359)\n    tag_360:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_361:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_361\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_359:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/fourtwo.sol\":2161:2586  function tokenURI(uint256 tokenId)... */\n    tag_176:\n        /* \"contracts/fourtwo.sol\":2259:2272  string memory */\n      0x60\n        /* \"contracts/fourtwo.sol\":2300:2316  _exists(tokenId) */\n      tag_363\n        /* \"contracts/fourtwo.sol\":2308:2315  tokenId */\n      dup3\n        /* \"contracts/fourtwo.sol\":2300:2307  _exists */\n      tag_219\n        /* \"contracts/fourtwo.sol\":2300:2316  _exists(tokenId) */\n      jump\t// in\n    tag_363:\n        /* \"contracts/fourtwo.sol\":2284:2381  require(... */\n      tag_364\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10945:10947   */\n      0x20\n        /* \"contracts/fourtwo.sol\":2284:2381  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10927:10948   */\n      mstore\n        /* \"#utility.yul\":10984:10986   */\n      0x2f\n        /* \"#utility.yul\":10964:10982   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10957:10987   */\n      mstore\n        /* \"#utility.yul\":11023:11057   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":11003:11021   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10996:11058   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":11074:11092   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11067:11112   */\n      mstore\n        /* \"#utility.yul\":11129:11148   */\n      0x84\n      add\n        /* \"contracts/fourtwo.sol\":2284:2381  require(... */\n      tag_315\n        /* \"#utility.yul\":10743:11154   */\n      jump\n        /* \"contracts/fourtwo.sol\":2284:2381  require(... */\n    tag_364:\n        /* \"contracts/fourtwo.sol\":2392:2420  string memory currentBaseURI */\n      0x00\n        /* \"contracts/fourtwo.sol\":2423:2433  _baseURI() */\n      tag_367\n        /* \"contracts/fourtwo.sol\":2423:2431  _baseURI */\n      tag_368\n        /* \"contracts/fourtwo.sol\":2423:2433  _baseURI() */\n      jump\t// in\n    tag_367:\n        /* \"contracts/fourtwo.sol\":2392:2433  string memory currentBaseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/fourtwo.sol\":2478:2479  0 */\n      0x00\n        /* \"contracts/fourtwo.sol\":2453:2467  currentBaseURI */\n      dup2\n        /* \"contracts/fourtwo.sol\":2447:2475  bytes(currentBaseURI).length */\n      mload\n        /* \"contracts/fourtwo.sol\":2447:2479  bytes(currentBaseURI).length > 0 */\n      gt\n        /* \"contracts/fourtwo.sol\":2447:2580  bytes(currentBaseURI).length > 0... */\n      tag_369\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_370)\n    tag_369:\n        /* \"contracts/fourtwo.sol\":2515:2529  currentBaseURI */\n      dup1\n        /* \"contracts/fourtwo.sol\":2531:2549  tokenId.toString() */\n      tag_371\n        /* \"contracts/fourtwo.sol\":2531:2538  tokenId */\n      dup5\n        /* \"contracts/fourtwo.sol\":2531:2547  tokenId.toString */\n      tag_372\n        /* \"contracts/fourtwo.sol\":2531:2549  tokenId.toString() */\n      jump\t// in\n    tag_371:\n        /* \"contracts/fourtwo.sol\":2551:2564  baseExtension */\n      0x0b\n        /* \"contracts/fourtwo.sol\":2498:2565  abi.encodePacked(currentBaseURI, tokenId.toString(), baseExtension) */\n      add(0x20, mload(0x40))\n      tag_373\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_374\n      jump\t// in\n    tag_373:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/fourtwo.sol\":2447:2580  bytes(currentBaseURI).length > 0... */\n    tag_370:\n        /* \"contracts/fourtwo.sol\":2440:2580  return bytes(currentBaseURI).length > 0... */\n      swap4\n        /* \"contracts/fourtwo.sol\":2161:2586  function tokenURI(uint256 tokenId)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fourtwo.sol\":3393:3854  function ownerOfTokenIds(address tokenOwner) external view returns (uint256[] memory) {... */\n    tag_181:\n        /* \"contracts/fourtwo.sol\":3461:3477  uint256[] memory */\n      0x60\n        /* \"contracts/fourtwo.sol\":3490:3511  uint256 supplyCurrent */\n      0x00\n        /* \"contracts/fourtwo.sol\":3514:3527  totalSupply() */\n      tag_376\n        /* \"contracts/ERC721A.sol\":6337:6349  _burnCounter */\n      sload(0x02)\n        /* \"contracts/ERC721A.sol\":6321:6334  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":6321:6349  _currentIndex - _burnCounter */\n      sub\n      swap1\n        /* \"contracts/ERC721A.sol\":6063:6386  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/fourtwo.sol\":3514:3527  totalSupply() */\n    tag_376:\n        /* \"contracts/fourtwo.sol\":3490:3527  uint256 supplyCurrent = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/fourtwo.sol\":3538:3561  uint256[] memory result */\n      0x00\n        /* \"contracts/fourtwo.sol\":3578:3599  balanceOf(tokenOwner) */\n      tag_377\n        /* \"contracts/fourtwo.sol\":3588:3598  tokenOwner */\n      dup5\n        /* \"contracts/fourtwo.sol\":3578:3587  balanceOf */\n      tag_135\n        /* \"contracts/fourtwo.sol\":3578:3599  balanceOf(tokenOwner) */\n      jump\t// in\n    tag_377:\n        /* \"contracts/fourtwo.sol\":3564:3600  new uint256[](balanceOf(tokenOwner)) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_379\n      jumpi\n      tag_379\n      tag_380\n      jump\t// in\n    tag_379:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_381\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_381:\n      pop\n        /* \"contracts/fourtwo.sol\":3538:3600  uint256[] memory result = new uint256[](balanceOf(tokenOwner)) */\n      swap1\n      pop\n        /* \"contracts/fourtwo.sol\":3611:3626  uint256 counter */\n      0x00\n        /* \"contracts/fourtwo.sol\":3646:3655  uint256 i */\n      dup1\n        /* \"contracts/fourtwo.sol\":3641:3823  for (uint256 i = 0; i < supplyCurrent; i++) {... */\n    tag_382:\n        /* \"contracts/fourtwo.sol\":3665:3678  supplyCurrent */\n      dup4\n        /* \"contracts/fourtwo.sol\":3661:3662  i */\n      dup2\n        /* \"contracts/fourtwo.sol\":3661:3678  i < supplyCurrent */\n      lt\n        /* \"contracts/fourtwo.sol\":3641:3823  for (uint256 i = 0; i < supplyCurrent; i++) {... */\n      iszero\n      tag_383\n      jumpi\n        /* \"contracts/fourtwo.sol\":3718:3728  tokenOwner */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fourtwo.sol\":3704:3728  ownerOf(i) == tokenOwner */\n      and\n        /* \"contracts/fourtwo.sol\":3704:3714  ownerOf(i) */\n      tag_385\n        /* \"contracts/fourtwo.sol\":3712:3713  i */\n      dup3\n        /* \"contracts/fourtwo.sol\":3704:3711  ownerOf */\n      tag_126\n        /* \"contracts/fourtwo.sol\":3704:3714  ownerOf(i) */\n      jump\t// in\n    tag_385:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/fourtwo.sol\":3704:3728  ownerOf(i) == tokenOwner */\n      and\n      eq\n        /* \"contracts/fourtwo.sol\":3700:3812  if (ownerOf(i) == tokenOwner) {... */\n      iszero\n      tag_386\n      jumpi\n        /* \"contracts/fourtwo.sol\":3767:3768  i */\n      dup1\n        /* \"contracts/fourtwo.sol\":3749:3755  result */\n      dup4\n        /* \"contracts/fourtwo.sol\":3756:3763  counter */\n      dup4\n        /* \"contracts/fourtwo.sol\":3749:3764  result[counter] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_388\n      jumpi\n      tag_388\n      tag_237\n      jump\t// in\n    tag_388:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/fourtwo.sol\":3749:3768  result[counter] = i */\n      mstore\n        /* \"contracts/fourtwo.sol\":3787:3796  counter++ */\n      dup2\n      tag_389\n      dup2\n      tag_240\n      jump\t// in\n    tag_389:\n      swap3\n      pop\n      pop\n        /* \"contracts/fourtwo.sol\":3700:3812  if (ownerOf(i) == tokenOwner) {... */\n    tag_386:\n        /* \"contracts/fourtwo.sol\":3680:3683  i++ */\n      dup1\n      tag_390\n      dup2\n      tag_240\n      jump\t// in\n    tag_390:\n      swap2\n      pop\n      pop\n        /* \"contracts/fourtwo.sol\":3641:3823  for (uint256 i = 0; i < supplyCurrent; i++) {... */\n      jump(tag_382)\n    tag_383:\n      pop\n        /* \"contracts/fourtwo.sol\":3840:3846  result */\n      swap1\n      swap5\n        /* \"contracts/fourtwo.sol\":3393:3854  function ownerOfTokenIds(address tokenOwner) external view returns (uint256[] memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fourtwo.sol\":2700:2822  function setBaseExtension(string memory _newBaseExtension) public onlyOwner {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_392\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_392:\n        /* \"contracts/fourtwo.sol\":2783:2816  baseExtension = _newBaseExtension */\n      dup1\n      mload\n      tag_284\n      swap1\n        /* \"contracts/fourtwo.sol\":2783:2796  baseExtension */\n      0x0b\n      swap1\n        /* \"contracts/fourtwo.sol\":2783:2816  baseExtension = _newBaseExtension */\n      0x20\n      dup5\n      add\n      swap1\n      tag_285\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_397\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_397:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_399\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13019:13021   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13001:13022   */\n      mstore\n        /* \"#utility.yul\":13058:13060   */\n      0x26\n        /* \"#utility.yul\":13038:13056   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13031:13061   */\n      mstore\n        /* \"#utility.yul\":13097:13131   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13077:13095   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13070:13132   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":13148:13166   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13141:13177   */\n      mstore\n        /* \"#utility.yul\":13194:13213   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_315\n        /* \"#utility.yul\":12817:13219   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_399:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_304\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/ERC721A.sol\":40569:40579  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13426:13428   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13408:13429   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13445:13463   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13438:13468   */\n      mstore\n        /* \"#utility.yul\":13504:13538   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13484:13502   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13477:13539   */\n      mstore\n        /* \"#utility.yul\":13556:13574   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_315\n        /* \"#utility.yul\":13224:13580   */\n      jump\n        /* \"contracts/ERC721A.sol\":18174:18456  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_219:\n        /* \"contracts/ERC721A.sol\":18239:18243  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":18329:18342  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":18319:18326  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":18319:18342  tokenId < _currentIndex */\n      lt\n        /* \"contracts/ERC721A.sol\":18276:18429  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":18380:18406  _packedOwnerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":18380:18397  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":18380:18406  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"contracts/ERC721A.sol\":18380:18424  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"contracts/ERC721A.sol\":18380:18429  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n        /* \"contracts/ERC721A.sol\":18174:18456  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":12860:14135  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_249:\n        /* \"contracts/ERC721A.sol\":12927:12934  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":12962:12969  tokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":13064:13077  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":13057:13061  curr */\n      dup2\n        /* \"contracts/ERC721A.sol\":13057:13077  curr < _currentIndex */\n      lt\n        /* \"contracts/ERC721A.sol\":13053:14068  if (curr < _currentIndex) {... */\n      iszero\n      tag_419\n      jumpi\n        /* \"contracts/ERC721A.sol\":13102:13116  uint256 packed */\n      0x00\n        /* \"contracts/ERC721A.sol\":13119:13142  _packedOwnerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":13119:13136  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":13119:13142  _packedOwnerships[curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"contracts/ERC721A.sol\":13208:13232  packed & _BITMASK_BURNED */\n      dup2\n      and\n        /* \"contracts/ERC721A.sol\":13204:14049  if (packed & _BITMASK_BURNED == 0) {... */\n      tag_420\n      jumpi\n        /* \"contracts/ERC721A.sol\":13873:13986  while (packed == 0) {... */\n    tag_421:\n        /* \"contracts/ERC721A.sol\":13880:13891  packed == 0 */\n      dup1\n        /* \"contracts/ERC721A.sol\":13873:13986  while (packed == 0) {... */\n      tag_370\n      jumpi\n      pop\n      not(0x00)\n        /* \"contracts/ERC721A.sol\":13951:13957  --curr */\n      add\n        /* \"contracts/ERC721A.sol\":13933:13958  _packedOwnerships[--curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":13933:13950  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":13933:13958  _packedOwnerships[--curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":13873:13986  while (packed == 0) {... */\n      jump(tag_421)\n        /* \"contracts/ERC721A.sol\":13204:14049  if (packed & _BITMASK_BURNED == 0) {... */\n    tag_420:\n        /* \"contracts/ERC721A.sol\":13079:14068  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":13053:14068  if (curr < _currentIndex) {... */\n    tag_419:\n        /* \"contracts/ERC721A.sol\":14096:14127  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":34314:34426  function _safeMint(address to, uint256 quantity) internal virtual {... */\n    tag_345:\n        /* \"contracts/ERC721A.sol\":34391:34418  _safeMint(to, quantity, '') */\n      tag_284\n        /* \"contracts/ERC721A.sol\":34401:34403  to */\n      dup3\n        /* \"contracts/ERC721A.sol\":34405:34413  quantity */\n      dup3\n        /* \"contracts/ERC721A.sol\":34391:34418  _safeMint(to, quantity, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721A.sol\":34391:34400  _safeMint */\n      tag_434\n        /* \"contracts/ERC721A.sol\":34391:34418  _safeMint(to, quantity, '') */\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":26645:27361  function _checkContractOnERC721Received(... */\n    tag_355:\n        /* \"contracts/ERC721A.sol\":26829:26917  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":26808:26812  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":26829:26874  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"contracts/ERC721A.sol\":26829:26917  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_437\n      swap1\n        /* \"contracts/ERC721A.sol\":40569:40579  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ERC721A.sol\":26896:26900  from */\n      dup10\n      swap1\n        /* \"contracts/ERC721A.sol\":26902:26909  tokenId */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":26911:26916  _data */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":26829:26917  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_438\n      jump\t// in\n    tag_437:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_439\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_440\n      swap2\n      dup2\n      add\n      swap1\n      tag_441\n      jump\t// in\n    tag_440:\n      0x01\n    tag_439:\n        /* \"contracts/ERC721A.sol\":26825:27354  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_442\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_447\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_446)\n    tag_447:\n      0x60\n      swap2\n      pop\n    tag_446:\n      pop\n        /* \"contracts/ERC721A.sol\":27112:27125  reason.length */\n      dup1\n      mload\n        /* \"contracts/ERC721A.sol\":27108:27343  if (reason.length == 0) {... */\n      tag_448\n      jumpi\n        /* \"contracts/ERC721A.sol\":27158:27198  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":27108:27343  if (reason.length == 0) {... */\n    tag_448:\n        /* \"contracts/ERC721A.sol\":27301:27307  reason */\n      dup1\n        /* \"contracts/ERC721A.sol\":27295:27308  mload(reason) */\n      mload\n        /* \"contracts/ERC721A.sol\":27286:27292  reason */\n      dup2\n        /* \"contracts/ERC721A.sol\":27282:27284  32 */\n      0x20\n        /* \"contracts/ERC721A.sol\":27278:27293  add(32, reason) */\n      add\n        /* \"contracts/ERC721A.sol\":27271:27309  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/ERC721A.sol\":26825:27354  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_442:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":26988:27052  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":26825:27354  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_450:\n        /* \"contracts/ERC721A.sol\":26645:27361  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fourtwo.sol\":886:988  function _baseURI() internal view virtual override returns (string memory) {... */\n    tag_368:\n        /* \"contracts/fourtwo.sol\":946:959  string memory */\n      0x60\n        /* \"contracts/fourtwo.sol\":975:982  baseURI */\n      0x0a\n        /* \"contracts/fourtwo.sol\":968:982  return baseURI */\n      dup1\n      sload\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":437:1144  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_372:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":493:506  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":542:556  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":559:587  MathUpgradeable.log10(value) */\n      tag_458\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":581:586  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":559:580  MathUpgradeable.log10 */\n      tag_459\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":559:587  MathUpgradeable.log10(value) */\n      jump\t// in\n    tag_458:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":590:591  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":559:591  MathUpgradeable.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":542:591  uint256 length = MathUpgradeable.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":605:625  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":639:645  length */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":628:646  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_461\n      jumpi\n      tag_461\n      tag_380\n      jump\t// in\n    tag_461:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_462\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_462:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":605:646  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":766:794  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":782:784  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":766:794  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":821:1101  while (true) {... */\n    tag_463:\n      not(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":852:857  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":986:988  10 */\n      0x0a\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":975:989  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":970:1000  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":852:857  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":957:1001  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1045:1047  10 */\n      0x0a\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1036:1047  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1069:1079  value == 0 */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1065:1086  if (value == 0) break */\n      tag_468\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1081:1086  break */\n      jump(tag_464)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1065:1086  if (value == 0) break */\n    tag_468:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":821:1101  while (true) {... */\n      jump(tag_463)\n    tag_464:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1121:1127  buffer */\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":437:1144  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":33541:34230  function _safeMint(... */\n    tag_434:\n        /* \"contracts/ERC721A.sol\":33672:33691  _mint(to, quantity) */\n      tag_472\n        /* \"contracts/ERC721A.sol\":33678:33680  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":33682:33690  quantity */\n      dup4\n        /* \"contracts/ERC721A.sol\":33672:33677  _mint */\n      tag_473\n        /* \"contracts/ERC721A.sol\":33672:33691  _mint(to, quantity) */\n      jump\t// in\n    tag_472:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":33733:33747  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"contracts/ERC721A.sol\":33733:33752  to.code.length != 0 */\n      iszero\n        /* \"contracts/ERC721A.sol\":33729:34212  if (to.code.length != 0) {... */\n      tag_233\n      jumpi\n        /* \"contracts/ERC721A.sol\":33787:33800  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":33835:33849  end - quantity */\n      dup3\n      dup2\n      sub\n        /* \"contracts/ERC721A.sol\":33868:34101  do {... */\n    tag_475:\n        /* \"contracts/ERC721A.sol\":33899:33961  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      tag_478\n        /* \"contracts/ERC721A.sol\":33938:33939  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":33942:33944  to */\n      dup7\n        /* \"contracts/ERC721A.sol\":33946:33953  index++ */\n      dup4\n      dup1\n      0x01\n      add\n      swap5\n      pop\n        /* \"contracts/ERC721A.sol\":33955:33960  _data */\n      dup7\n        /* \"contracts/ERC721A.sol\":33899:33929  _checkContractOnERC721Received */\n      tag_355\n        /* \"contracts/ERC721A.sol\":33899:33961  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      jump\t// in\n    tag_478:\n        /* \"contracts/ERC721A.sol\":33894:34061  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n      tag_479\n      jumpi\n        /* \"contracts/ERC721A.sol\":33997:34037  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":33894:34061  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n    tag_479:\n        /* \"contracts/ERC721A.sol\":34096:34099  end */\n      dup2\n        /* \"contracts/ERC721A.sol\":34088:34093  index */\n      dup2\n        /* \"contracts/ERC721A.sol\":34088:34099  index < end */\n      lt\n        /* \"contracts/ERC721A.sol\":33868:34101  do {... */\n      tag_475\n      jumpi\n        /* \"contracts/ERC721A.sol\":34183:34186  end */\n      dup2\n        /* \"contracts/ERC721A.sol\":34166:34179  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":34166:34186  _currentIndex != end */\n      eq\n        /* \"contracts/ERC721A.sol\":34162:34196  if (_currentIndex != end) revert() */\n      tag_480\n      jumpi\n        /* \"contracts/ERC721A.sol\":34188:34196  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC721A.sol\":34162:34196  if (_currentIndex != end) revert() */\n    tag_480:\n        /* \"contracts/ERC721A.sol\":33754:34212  {... */\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":33541:34230  function _safeMint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":9900:10790  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_459:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":9953:9960  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10028:10043  value >= 10**64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10024:10123  if (value >= 10**64) {... */\n      tag_482\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10063:10078  value /= 10**64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10106:10108  64 */\n      0x40\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10096:10108  result += 64 */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10024:10123  if (value >= 10**64) {... */\n    tag_482:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10149:10155  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10140:10145  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10140:10155  value >= 10**32 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10136:10235  if (value >= 10**32) {... */\n      tag_485\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10184:10190  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10175:10190  value /= 10**32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10218:10220  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10208:10220  result += 32 */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10136:10235  if (value >= 10**32) {... */\n    tag_485:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10261:10267  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10252:10257  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10252:10267  value >= 10**16 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10248:10347  if (value >= 10**16) {... */\n      tag_488\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10296:10302  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10287:10302  value /= 10**16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10330:10332  16 */\n      0x10\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10320:10332  result += 16 */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10248:10347  if (value >= 10**16) {... */\n    tag_488:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10373:10378  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10364:10369  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10364:10378  value >= 10**8 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10360:10456  if (value >= 10**8) {... */\n      tag_491\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10407:10412  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10398:10412  value /= 10**8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10440:10441  8 */\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10430:10441  result += 8 */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10360:10456  if (value >= 10**8) {... */\n    tag_491:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10482:10487  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10473:10478  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10473:10487  value >= 10**4 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10469:10565  if (value >= 10**4) {... */\n      tag_494\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10516:10521  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10507:10521  value /= 10**4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10549:10550  4 */\n      0x04\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10539:10550  result += 4 */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10469:10565  if (value >= 10**4) {... */\n    tag_494:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10591:10596  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10582:10587  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10582:10596  value >= 10**2 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10578:10674  if (value >= 10**2) {... */\n      tag_497\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10625:10630  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10616:10630  value /= 10**2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10658:10659  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10648:10659  result += 2 */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10578:10674  if (value >= 10**2) {... */\n    tag_497:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10700:10705  10**1 */\n      0x0a\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10691:10696  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10691:10705  value >= 10**1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10687:10751  if (value >= 10**1) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10735:10736  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10725:10736  result += 1 */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":10777:10783  result */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":9900:10790  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":27823:30789  function _mint(address to, uint256 quantity) internal virtual {... */\n    tag_473:\n        /* \"contracts/ERC721A.sol\":27919:27932  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":27947:27960  quantity == 0 */\n      dup2\n        /* \"contracts/ERC721A.sol\":27943:27987  if (quantity == 0) revert MintZeroQuantity() */\n      tag_502\n      jumpi\n        /* \"contracts/ERC721A.sol\":27969:27987  MintZeroQuantity() */\n      mload(0x40)\n      shl(0xe0, 0xb562e8dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":27943:27987  if (quantity == 0) revert MintZeroQuantity() */\n    tag_502:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":28475:28497  _packedAddressData[to] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":28475:28493  _packedAddressData */\n      0x06\n        /* \"contracts/ERC721A.sol\":28475:28497  _packedAddressData[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":1544:1546  64 */\n      0x40\n        /* \"contracts/ERC721A.sol\":28475:28497  _packedAddressData[to] */\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC721A.sol\":28475:28546  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":28513:28545  (1 << _BITPOS_NUMBER_MINTED) | 1 */\n      0x010000000000000001\n        /* \"contracts/ERC721A.sol\":28501:28546  quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup9\n      mul\n        /* \"contracts/ERC721A.sol\":28475:28546  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":28789:28820  _packedOwnerships[startTokenId] */\n      dup5\n      dup4\n      mstore\n        /* \"contracts/ERC721A.sol\":28789:28806  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":28789:28820  _packedOwnerships[startTokenId] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      0x01\n        /* \"contracts/ERC721A.sol\":15525:15540  eq(quantity, 1) */\n      dup6\n      eq\n        /* \"contracts/ERC721A.sol\":15499:15523  _BITPOS_NEXT_INITIALIZED */\n      0xe1\n        /* \"contracts/ERC721A.sol\":15495:15541  shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      shl\n        /* \"contracts/ERC721A.sol\":15094:15105  timestamp() */\n      timestamp\n        /* \"contracts/ERC721A.sol\":15069:15092  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"contracts/ERC721A.sol\":15065:15106  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"contracts/ERC721A.sol\":15062:15114  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"contracts/ERC721A.sol\":15052:15115  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      dup4\n      or\n        /* \"contracts/ERC721A.sol\":28789:28962  _packedOwnerships[startTokenId] = _packOwnershipData(... */\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":29024:29047  startTokenId + quantity */\n      dup3\n      dup5\n      add\n      swap1\n        /* \"contracts/ERC721A.sol\":28789:28820  _packedOwnerships[startTokenId] */\n      dup4\n      swap1\n        /* \"contracts/ERC721A.sol\":28475:28497  _packedAddressData[to] */\n      dup4\n      swap1\n        /* \"contracts/ERC721A.sol\":29789:29814  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC721A.sol\":28475:28497  _packedAddressData[to] */\n      dup2\n      dup1\n        /* \"contracts/ERC721A.sol\":29642:29977  log4(... */\n      log4\n        /* \"contracts/ERC721A.sol\":30303:30304  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":30289:30301  startTokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":30285:30305  add(startTokenId, 1) */\n      add\n        /* \"contracts/ERC721A.sol\":30243:30589  for {... */\n    tag_508:\n        /* \"contracts/ERC721A.sol\":30344:30347  end */\n      dup2\n        /* \"contracts/ERC721A.sol\":30335:30342  tokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":30332:30348  eq(tokenId, end) */\n      eq\n        /* \"contracts/ERC721A.sol\":30243:30589  for {... */\n      tag_510\n      jumpi\n        /* \"contracts/ERC721A.sol\":30562:30569  tokenId */\n      dup1\n        /* \"contracts/ERC721A.sol\":30552:30560  toMasked */\n      dup4\n        /* \"contracts/ERC721A.sol\":30549:30550  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":30522:30547  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC721A.sol\":30519:30520  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":30516:30517  0 */\n      dup1\n        /* \"contracts/ERC721A.sol\":30511:30570  log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId) */\n      log4\n        /* \"contracts/ERC721A.sol\":30397:30398  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":30384:30399  add(tokenId, 1) */\n      add\n        /* \"contracts/ERC721A.sol\":30243:30589  for {... */\n      jump(tag_508)\n    tag_510:\n      pop\n        /* \"contracts/ERC721A.sol\":30622:30635  toMasked == 0 */\n      dup2\n        /* \"contracts/ERC721A.sol\":30618:30663  if (toMasked == 0) revert MintToZeroAddress() */\n      tag_511\n      jumpi\n        /* \"contracts/ERC721A.sol\":30644:30663  MintToZeroAddress() */\n      mload(0x40)\n      shl(0xe8, 0x2e0763)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":30618:30663  if (toMasked == 0) revert MintToZeroAddress() */\n    tag_511:\n        /* \"contracts/ERC721A.sol\":30680:30693  _currentIndex */\n      0x01\n        /* \"contracts/ERC721A.sol\":30680:30699  _currentIndex = end */\n      sstore\n      pop\n        /* \"contracts/fourtwo.sol\":3287:3382  for (uint256 i = 0; i < addresses.length; i++) {... */\n      pop\n        /* \"contracts/fourtwo.sol\":3197:3387  function removeUsersFromAllowlist(address[] calldata addresses) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n    tag_285:\n      dup3\n      dup1\n      sload\n      tag_514\n      swap1\n      tag_212\n      jump\t// in\n    tag_514:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_516\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_519)\n    tag_516:\n      dup3\n      0x1f\n      lt\n      tag_517\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_519)\n    tag_517:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_519\n      jumpi\n      swap2\n      dup3\n      add\n    tag_518:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_519\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_518)\n    tag_519:\n      pop\n      tag_520\n      swap3\n      swap2\n      pop\n      tag_521\n      jump\t// in\n    tag_520:\n      pop\n      swap1\n      jump\t// out\n    tag_521:\n    tag_522:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_520\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_522)\n        /* \"#utility.yul\":14:145   */\n    tag_524:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_47:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_536:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_370\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_524\n      jump\t// in\n        /* \"#utility.yul\":592:752   */\n    tag_525:\n        /* \"#utility.yul\":657:677   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":713:726   */\n      dup1\n      iszero\n        /* \"#utility.yul\":706:727   */\n      iszero\n        /* \"#utility.yul\":696:728   */\n      dup2\n      eq\n        /* \"#utility.yul\":686:746   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":742:743   */\n      0x00\n        /* \"#utility.yul\":739:740   */\n      dup1\n        /* \"#utility.yul\":732:744   */\n      revert\n        /* \"#utility.yul\":686:746   */\n    tag_540:\n        /* \"#utility.yul\":592:752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":757:937   */\n    tag_54:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":866:868   */\n      0x20\n        /* \"#utility.yul\":854:863   */\n      dup3\n        /* \"#utility.yul\":845:852   */\n      dup5\n        /* \"#utility.yul\":841:864   */\n      sub\n        /* \"#utility.yul\":837:869   */\n      slt\n        /* \"#utility.yul\":834:886   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":882:883   */\n      0x00\n        /* \"#utility.yul\":879:880   */\n      dup1\n        /* \"#utility.yul\":872:884   */\n      revert\n        /* \"#utility.yul\":834:886   */\n    tag_542:\n        /* \"#utility.yul\":905:931   */\n      tag_370\n        /* \"#utility.yul\":921:930   */\n      dup3\n        /* \"#utility.yul\":905:931   */\n      tag_525\n      jump\t// in\n        /* \"#utility.yul\":942:1115   */\n    tag_526:\n        /* \"#utility.yul\":1010:1030   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1059:1090   */\n      dup2\n      and\n        /* \"#utility.yul\":1049:1091   */\n      dup2\n      eq\n        /* \"#utility.yul\":1039:1109   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":1105:1106   */\n      0x00\n        /* \"#utility.yul\":1102:1103   */\n      dup1\n        /* \"#utility.yul\":1095:1107   */\n      revert\n        /* \"#utility.yul\":1120:1306   */\n    tag_59:\n        /* \"#utility.yul\":1179:1185   */\n      0x00\n        /* \"#utility.yul\":1232:1234   */\n      0x20\n        /* \"#utility.yul\":1220:1229   */\n      dup3\n        /* \"#utility.yul\":1211:1218   */\n      dup5\n        /* \"#utility.yul\":1207:1230   */\n      sub\n        /* \"#utility.yul\":1203:1235   */\n      slt\n        /* \"#utility.yul\":1200:1252   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":1248:1249   */\n      0x00\n        /* \"#utility.yul\":1245:1246   */\n      dup1\n        /* \"#utility.yul\":1238:1250   */\n      revert\n        /* \"#utility.yul\":1200:1252   */\n    tag_547:\n        /* \"#utility.yul\":1271:1300   */\n      tag_370\n        /* \"#utility.yul\":1290:1299   */\n      dup3\n        /* \"#utility.yul\":1271:1300   */\n      tag_526\n      jump\t// in\n        /* \"#utility.yul\":1311:1569   */\n    tag_527:\n        /* \"#utility.yul\":1383:1384   */\n      0x00\n        /* \"#utility.yul\":1393:1506   */\n    tag_550:\n        /* \"#utility.yul\":1407:1413   */\n      dup4\n        /* \"#utility.yul\":1404:1405   */\n      dup2\n        /* \"#utility.yul\":1401:1414   */\n      lt\n        /* \"#utility.yul\":1393:1506   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":1483:1494   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1477:1495   */\n      mload\n        /* \"#utility.yul\":1464:1475   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":1457:1496   */\n      mstore\n        /* \"#utility.yul\":1429:1431   */\n      0x20\n        /* \"#utility.yul\":1422:1432   */\n      add\n        /* \"#utility.yul\":1393:1506   */\n      jump(tag_550)\n    tag_552:\n        /* \"#utility.yul\":1524:1530   */\n      dup4\n        /* \"#utility.yul\":1521:1522   */\n      dup2\n        /* \"#utility.yul\":1518:1531   */\n      gt\n        /* \"#utility.yul\":1515:1563   */\n      iszero\n      tag_356\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":1559:1560   */\n      0x00\n        /* \"#utility.yul\":1541:1557   */\n      swap2\n      add\n        /* \"#utility.yul\":1534:1561   */\n      mstore\n        /* \"#utility.yul\":1311:1569   */\n      jump\t// out\n        /* \"#utility.yul\":1574:1832   */\n    tag_528:\n        /* \"#utility.yul\":1616:1619   */\n      0x00\n        /* \"#utility.yul\":1654:1659   */\n      dup2\n        /* \"#utility.yul\":1648:1660   */\n      mload\n        /* \"#utility.yul\":1681:1687   */\n      dup1\n        /* \"#utility.yul\":1676:1679   */\n      dup5\n        /* \"#utility.yul\":1669:1688   */\n      mstore\n        /* \"#utility.yul\":1697:1760   */\n      tag_555\n        /* \"#utility.yul\":1753:1759   */\n      dup2\n        /* \"#utility.yul\":1746:1750   */\n      0x20\n        /* \"#utility.yul\":1741:1744   */\n      dup7\n        /* \"#utility.yul\":1737:1751   */\n      add\n        /* \"#utility.yul\":1730:1734   */\n      0x20\n        /* \"#utility.yul\":1723:1728   */\n      dup7\n        /* \"#utility.yul\":1719:1735   */\n      add\n        /* \"#utility.yul\":1697:1760   */\n      tag_527\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":1814:1816   */\n      0x1f\n        /* \"#utility.yul\":1793:1808   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1789:1818   */\n      and\n        /* \"#utility.yul\":1780:1819   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1821:1825   */\n      0x20\n        /* \"#utility.yul\":1776:1826   */\n      add\n      swap3\n        /* \"#utility.yul\":1574:1832   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1837:2057   */\n    tag_66:\n        /* \"#utility.yul\":1986:1988   */\n      0x20\n        /* \"#utility.yul\":1975:1984   */\n      dup2\n        /* \"#utility.yul\":1968:1989   */\n      mstore\n        /* \"#utility.yul\":1949:1953   */\n      0x00\n        /* \"#utility.yul\":2006:2051   */\n      tag_370\n        /* \"#utility.yul\":2047:2049   */\n      0x20\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2032:2050   */\n      add\n        /* \"#utility.yul\":2024:2030   */\n      dup5\n        /* \"#utility.yul\":2006:2051   */\n      tag_528\n      jump\t// in\n        /* \"#utility.yul\":2062:2242   */\n    tag_70:\n        /* \"#utility.yul\":2121:2127   */\n      0x00\n        /* \"#utility.yul\":2174:2176   */\n      0x20\n        /* \"#utility.yul\":2162:2171   */\n      dup3\n        /* \"#utility.yul\":2153:2160   */\n      dup5\n        /* \"#utility.yul\":2149:2172   */\n      sub\n        /* \"#utility.yul\":2145:2177   */\n      slt\n        /* \"#utility.yul\":2142:2194   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":2190:2191   */\n      0x00\n        /* \"#utility.yul\":2187:2188   */\n      dup1\n        /* \"#utility.yul\":2180:2192   */\n      revert\n        /* \"#utility.yul\":2142:2194   */\n    tag_559:\n      pop\n        /* \"#utility.yul\":2213:2236   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2062:2242   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2455:2709   */\n    tag_76:\n        /* \"#utility.yul\":2523:2529   */\n      0x00\n        /* \"#utility.yul\":2531:2537   */\n      dup1\n        /* \"#utility.yul\":2584:2586   */\n      0x40\n        /* \"#utility.yul\":2572:2581   */\n      dup4\n        /* \"#utility.yul\":2563:2570   */\n      dup6\n        /* \"#utility.yul\":2559:2582   */\n      sub\n        /* \"#utility.yul\":2555:2587   */\n      slt\n        /* \"#utility.yul\":2552:2604   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":2600:2601   */\n      0x00\n        /* \"#utility.yul\":2597:2598   */\n      dup1\n        /* \"#utility.yul\":2590:2602   */\n      revert\n        /* \"#utility.yul\":2552:2604   */\n    tag_562:\n        /* \"#utility.yul\":2623:2652   */\n      tag_563\n        /* \"#utility.yul\":2642:2651   */\n      dup4\n        /* \"#utility.yul\":2623:2652   */\n      tag_526\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":2613:2652   */\n      swap5\n        /* \"#utility.yul\":2699:2701   */\n      0x20\n        /* \"#utility.yul\":2684:2702   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2671:2703   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2455:2709   */\n      jump\t// out\n        /* \"#utility.yul\":2896:3511   */\n    tag_86:\n        /* \"#utility.yul\":2982:2988   */\n      0x00\n        /* \"#utility.yul\":2990:2996   */\n      dup1\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"#utility.yul\":3031:3040   */\n      dup4\n        /* \"#utility.yul\":3022:3029   */\n      dup6\n        /* \"#utility.yul\":3018:3041   */\n      sub\n        /* \"#utility.yul\":3014:3046   */\n      slt\n        /* \"#utility.yul\":3011:3063   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":3059:3060   */\n      0x00\n        /* \"#utility.yul\":3056:3057   */\n      dup1\n        /* \"#utility.yul\":3049:3061   */\n      revert\n        /* \"#utility.yul\":3011:3063   */\n    tag_566:\n        /* \"#utility.yul\":3099:3108   */\n      dup3\n        /* \"#utility.yul\":3086:3109   */\n      calldataload\n        /* \"#utility.yul\":3128:3146   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3169:3171   */\n      dup1\n        /* \"#utility.yul\":3161:3167   */\n      dup3\n        /* \"#utility.yul\":3158:3172   */\n      gt\n        /* \"#utility.yul\":3155:3189   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":3185:3186   */\n      0x00\n        /* \"#utility.yul\":3182:3183   */\n      dup1\n        /* \"#utility.yul\":3175:3187   */\n      revert\n        /* \"#utility.yul\":3155:3189   */\n    tag_567:\n        /* \"#utility.yul\":3223:3229   */\n      dup2\n        /* \"#utility.yul\":3212:3221   */\n      dup6\n        /* \"#utility.yul\":3208:3230   */\n      add\n        /* \"#utility.yul\":3198:3230   */\n      swap2\n      pop\n        /* \"#utility.yul\":3268:3275   */\n      dup6\n        /* \"#utility.yul\":3261:3265   */\n      0x1f\n        /* \"#utility.yul\":3257:3259   */\n      dup4\n        /* \"#utility.yul\":3253:3266   */\n      add\n        /* \"#utility.yul\":3249:3276   */\n      slt\n        /* \"#utility.yul\":3239:3294   */\n      tag_568\n      jumpi\n        /* \"#utility.yul\":3290:3291   */\n      0x00\n        /* \"#utility.yul\":3287:3288   */\n      dup1\n        /* \"#utility.yul\":3280:3292   */\n      revert\n        /* \"#utility.yul\":3239:3294   */\n    tag_568:\n        /* \"#utility.yul\":3330:3332   */\n      dup2\n        /* \"#utility.yul\":3317:3333   */\n      calldataload\n        /* \"#utility.yul\":3356:3358   */\n      dup2\n        /* \"#utility.yul\":3348:3354   */\n      dup2\n        /* \"#utility.yul\":3345:3359   */\n      gt\n        /* \"#utility.yul\":3342:3376   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":3372:3373   */\n      0x00\n        /* \"#utility.yul\":3369:3370   */\n      dup1\n        /* \"#utility.yul\":3362:3374   */\n      revert\n        /* \"#utility.yul\":3342:3376   */\n    tag_569:\n        /* \"#utility.yul\":3425:3432   */\n      dup7\n        /* \"#utility.yul\":3420:3422   */\n      0x20\n        /* \"#utility.yul\":3410:3416   */\n      dup3\n        /* \"#utility.yul\":3407:3408   */\n      0x05\n        /* \"#utility.yul\":3403:3417   */\n      shl\n        /* \"#utility.yul\":3399:3401   */\n      dup6\n        /* \"#utility.yul\":3395:3418   */\n      add\n        /* \"#utility.yul\":3391:3423   */\n      add\n        /* \"#utility.yul\":3388:3433   */\n      gt\n        /* \"#utility.yul\":3385:3450   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":3446:3447   */\n      0x00\n        /* \"#utility.yul\":3443:3444   */\n      dup1\n        /* \"#utility.yul\":3436:3448   */\n      revert\n        /* \"#utility.yul\":3385:3450   */\n    tag_570:\n        /* \"#utility.yul\":3477:3479   */\n      0x20\n        /* \"#utility.yul\":3469:3480   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":3499:3505   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":2896:3511   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3516:3844   */\n    tag_103:\n        /* \"#utility.yul\":3593:3599   */\n      0x00\n        /* \"#utility.yul\":3601:3607   */\n      dup1\n        /* \"#utility.yul\":3609:3615   */\n      0x00\n        /* \"#utility.yul\":3662:3664   */\n      0x60\n        /* \"#utility.yul\":3650:3659   */\n      dup5\n        /* \"#utility.yul\":3641:3648   */\n      dup7\n        /* \"#utility.yul\":3637:3660   */\n      sub\n        /* \"#utility.yul\":3633:3665   */\n      slt\n        /* \"#utility.yul\":3630:3682   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":3678:3679   */\n      0x00\n        /* \"#utility.yul\":3675:3676   */\n      dup1\n        /* \"#utility.yul\":3668:3680   */\n      revert\n        /* \"#utility.yul\":3630:3682   */\n    tag_572:\n        /* \"#utility.yul\":3701:3730   */\n      tag_573\n        /* \"#utility.yul\":3720:3729   */\n      dup5\n        /* \"#utility.yul\":3701:3730   */\n      tag_526\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":3691:3730   */\n      swap3\n      pop\n        /* \"#utility.yul\":3749:3787   */\n      tag_574\n        /* \"#utility.yul\":3783:3785   */\n      0x20\n        /* \"#utility.yul\":3772:3781   */\n      dup6\n        /* \"#utility.yul\":3768:3786   */\n      add\n        /* \"#utility.yul\":3749:3787   */\n      tag_526\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":3739:3787   */\n      swap2\n      pop\n        /* \"#utility.yul\":3834:3836   */\n      0x40\n        /* \"#utility.yul\":3823:3832   */\n      dup5\n        /* \"#utility.yul\":3819:3837   */\n      add\n        /* \"#utility.yul\":3806:3838   */\n      calldataload\n        /* \"#utility.yul\":3796:3838   */\n      swap1\n      pop\n        /* \"#utility.yul\":3516:3844   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3849:3976   */\n    tag_380:\n        /* \"#utility.yul\":3910:3920   */\n      0x4e487b71\n        /* \"#utility.yul\":3905:3908   */\n      0xe0\n        /* \"#utility.yul\":3901:3921   */\n      shl\n        /* \"#utility.yul\":3898:3899   */\n      0x00\n        /* \"#utility.yul\":3891:3922   */\n      mstore\n        /* \"#utility.yul\":3941:3945   */\n      0x41\n        /* \"#utility.yul\":3938:3939   */\n      0x04\n        /* \"#utility.yul\":3931:3946   */\n      mstore\n        /* \"#utility.yul\":3965:3969   */\n      0x24\n        /* \"#utility.yul\":3962:3963   */\n      0x00\n        /* \"#utility.yul\":3955:3970   */\n      revert\n        /* \"#utility.yul\":3981:4613   */\n    tag_529:\n        /* \"#utility.yul\":4046:4051   */\n      0x00\n        /* \"#utility.yul\":4076:4094   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4117:4119   */\n      dup1\n        /* \"#utility.yul\":4109:4115   */\n      dup5\n        /* \"#utility.yul\":4106:4120   */\n      gt\n        /* \"#utility.yul\":4103:4143   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":4123:4141   */\n      tag_578\n      tag_380\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":4198:4200   */\n      0x40\n        /* \"#utility.yul\":4192:4201   */\n      mload\n        /* \"#utility.yul\":4166:4168   */\n      0x1f\n        /* \"#utility.yul\":4252:4267   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4248:4272   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4274:4276   */\n      0x3f\n        /* \"#utility.yul\":4244:4277   */\n      add\n        /* \"#utility.yul\":4240:4282   */\n      and\n        /* \"#utility.yul\":4228:4283   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4298:4316   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":4318:4340   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4295:4341   */\n      or\n        /* \"#utility.yul\":4292:4364   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":4344:4362   */\n      tag_580\n      tag_380\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":4384:4394   */\n      dup2\n        /* \"#utility.yul\":4380:4382   */\n      0x40\n        /* \"#utility.yul\":4373:4395   */\n      mstore\n        /* \"#utility.yul\":4413:4419   */\n      dup1\n        /* \"#utility.yul\":4404:4419   */\n      swap4\n      pop\n        /* \"#utility.yul\":4443:4449   */\n      dup6\n        /* \"#utility.yul\":4435:4441   */\n      dup2\n        /* \"#utility.yul\":4428:4450   */\n      mstore\n        /* \"#utility.yul\":4483:4486   */\n      dup7\n        /* \"#utility.yul\":4474:4480   */\n      dup7\n        /* \"#utility.yul\":4469:4472   */\n      dup7\n        /* \"#utility.yul\":4465:4481   */\n      add\n        /* \"#utility.yul\":4462:4487   */\n      gt\n        /* \"#utility.yul\":4459:4504   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":4500:4501   */\n      0x00\n        /* \"#utility.yul\":4497:4498   */\n      dup1\n        /* \"#utility.yul\":4490:4502   */\n      revert\n        /* \"#utility.yul\":4459:4504   */\n    tag_581:\n        /* \"#utility.yul\":4550:4556   */\n      dup6\n        /* \"#utility.yul\":4545:4548   */\n      dup6\n        /* \"#utility.yul\":4538:4542   */\n      0x20\n        /* \"#utility.yul\":4530:4536   */\n      dup4\n        /* \"#utility.yul\":4526:4543   */\n      add\n        /* \"#utility.yul\":4513:4557   */\n      calldatacopy\n        /* \"#utility.yul\":4605:4606   */\n      0x00\n        /* \"#utility.yul\":4598:4602   */\n      0x20\n        /* \"#utility.yul\":4589:4595   */\n      dup8\n        /* \"#utility.yul\":4581:4587   */\n      dup4\n        /* \"#utility.yul\":4577:4596   */\n      add\n        /* \"#utility.yul\":4573:4603   */\n      add\n        /* \"#utility.yul\":4566:4607   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3981:4613   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4618:5069   */\n    tag_113:\n        /* \"#utility.yul\":4687:4693   */\n      0x00\n        /* \"#utility.yul\":4740:4742   */\n      0x20\n        /* \"#utility.yul\":4728:4737   */\n      dup3\n        /* \"#utility.yul\":4719:4726   */\n      dup5\n        /* \"#utility.yul\":4715:4738   */\n      sub\n        /* \"#utility.yul\":4711:4743   */\n      slt\n        /* \"#utility.yul\":4708:4760   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":4756:4757   */\n      0x00\n        /* \"#utility.yul\":4753:4754   */\n      dup1\n        /* \"#utility.yul\":4746:4758   */\n      revert\n        /* \"#utility.yul\":4708:4760   */\n    tag_583:\n        /* \"#utility.yul\":4796:4805   */\n      dup2\n        /* \"#utility.yul\":4783:4806   */\n      calldataload\n        /* \"#utility.yul\":4829:4847   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4821:4827   */\n      dup2\n        /* \"#utility.yul\":4818:4848   */\n      gt\n        /* \"#utility.yul\":4815:4865   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":4861:4862   */\n      0x00\n        /* \"#utility.yul\":4858:4859   */\n      dup1\n        /* \"#utility.yul\":4851:4863   */\n      revert\n        /* \"#utility.yul\":4815:4865   */\n    tag_584:\n        /* \"#utility.yul\":4884:4906   */\n      dup3\n      add\n        /* \"#utility.yul\":4937:4941   */\n      0x1f\n        /* \"#utility.yul\":4929:4942   */\n      dup2\n      add\n        /* \"#utility.yul\":4925:4952   */\n      dup5\n      sgt\n        /* \"#utility.yul\":4915:4970   */\n      tag_585\n      jumpi\n        /* \"#utility.yul\":4966:4967   */\n      0x00\n        /* \"#utility.yul\":4963:4964   */\n      dup1\n        /* \"#utility.yul\":4956:4968   */\n      revert\n        /* \"#utility.yul\":4915:4970   */\n    tag_585:\n        /* \"#utility.yul\":4989:5063   */\n      tag_450\n        /* \"#utility.yul\":5055:5062   */\n      dup5\n        /* \"#utility.yul\":5050:5052   */\n      dup3\n        /* \"#utility.yul\":5037:5053   */\n      calldataload\n        /* \"#utility.yul\":5032:5034   */\n      0x20\n        /* \"#utility.yul\":5028:5030   */\n      dup5\n        /* \"#utility.yul\":5024:5035   */\n      add\n        /* \"#utility.yul\":4989:5063   */\n      tag_529\n      jump\t// in\n        /* \"#utility.yul\":5074:5328   */\n    tag_154:\n        /* \"#utility.yul\":5139:5145   */\n      0x00\n        /* \"#utility.yul\":5147:5153   */\n      dup1\n        /* \"#utility.yul\":5200:5202   */\n      0x40\n        /* \"#utility.yul\":5188:5197   */\n      dup4\n        /* \"#utility.yul\":5179:5186   */\n      dup6\n        /* \"#utility.yul\":5175:5198   */\n      sub\n        /* \"#utility.yul\":5171:5203   */\n      slt\n        /* \"#utility.yul\":5168:5220   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":5216:5217   */\n      0x00\n        /* \"#utility.yul\":5213:5214   */\n      dup1\n        /* \"#utility.yul\":5206:5218   */\n      revert\n        /* \"#utility.yul\":5168:5220   */\n    tag_588:\n        /* \"#utility.yul\":5239:5268   */\n      tag_589\n        /* \"#utility.yul\":5258:5267   */\n      dup4\n        /* \"#utility.yul\":5239:5268   */\n      tag_526\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":5229:5268   */\n      swap2\n      pop\n        /* \"#utility.yul\":5287:5322   */\n      tag_590\n        /* \"#utility.yul\":5318:5320   */\n      0x20\n        /* \"#utility.yul\":5307:5316   */\n      dup5\n        /* \"#utility.yul\":5303:5321   */\n      add\n        /* \"#utility.yul\":5287:5322   */\n      tag_525\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":5277:5322   */\n      swap1\n      pop\n        /* \"#utility.yul\":5074:5328   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5333:6000   */\n    tag_167:\n        /* \"#utility.yul\":5428:5434   */\n      0x00\n        /* \"#utility.yul\":5436:5442   */\n      dup1\n        /* \"#utility.yul\":5444:5450   */\n      0x00\n        /* \"#utility.yul\":5452:5458   */\n      dup1\n        /* \"#utility.yul\":5505:5508   */\n      0x80\n        /* \"#utility.yul\":5493:5502   */\n      dup6\n        /* \"#utility.yul\":5484:5491   */\n      dup8\n        /* \"#utility.yul\":5480:5503   */\n      sub\n        /* \"#utility.yul\":5476:5509   */\n      slt\n        /* \"#utility.yul\":5473:5526   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":5522:5523   */\n      0x00\n        /* \"#utility.yul\":5519:5520   */\n      dup1\n        /* \"#utility.yul\":5512:5524   */\n      revert\n        /* \"#utility.yul\":5473:5526   */\n    tag_592:\n        /* \"#utility.yul\":5545:5574   */\n      tag_593\n        /* \"#utility.yul\":5564:5573   */\n      dup6\n        /* \"#utility.yul\":5545:5574   */\n      tag_526\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":5535:5574   */\n      swap4\n      pop\n        /* \"#utility.yul\":5593:5631   */\n      tag_594\n        /* \"#utility.yul\":5627:5629   */\n      0x20\n        /* \"#utility.yul\":5616:5625   */\n      dup7\n        /* \"#utility.yul\":5612:5630   */\n      add\n        /* \"#utility.yul\":5593:5631   */\n      tag_526\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":5583:5631   */\n      swap3\n      pop\n        /* \"#utility.yul\":5678:5680   */\n      0x40\n        /* \"#utility.yul\":5667:5676   */\n      dup6\n        /* \"#utility.yul\":5663:5681   */\n      add\n        /* \"#utility.yul\":5650:5682   */\n      calldataload\n        /* \"#utility.yul\":5640:5682   */\n      swap2\n      pop\n        /* \"#utility.yul\":5733:5735   */\n      0x60\n        /* \"#utility.yul\":5722:5731   */\n      dup6\n        /* \"#utility.yul\":5718:5736   */\n      add\n        /* \"#utility.yul\":5705:5737   */\n      calldataload\n        /* \"#utility.yul\":5760:5778   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5752:5758   */\n      dup2\n        /* \"#utility.yul\":5749:5779   */\n      gt\n        /* \"#utility.yul\":5746:5796   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":5792:5793   */\n      0x00\n        /* \"#utility.yul\":5789:5790   */\n      dup1\n        /* \"#utility.yul\":5782:5794   */\n      revert\n        /* \"#utility.yul\":5746:5796   */\n    tag_595:\n        /* \"#utility.yul\":5815:5837   */\n      dup6\n      add\n        /* \"#utility.yul\":5868:5872   */\n      0x1f\n        /* \"#utility.yul\":5860:5873   */\n      dup2\n      add\n        /* \"#utility.yul\":5856:5883   */\n      dup8\n      sgt\n        /* \"#utility.yul\":5846:5901   */\n      tag_596\n      jumpi\n        /* \"#utility.yul\":5897:5898   */\n      0x00\n        /* \"#utility.yul\":5894:5895   */\n      dup1\n        /* \"#utility.yul\":5887:5899   */\n      revert\n        /* \"#utility.yul\":5846:5901   */\n    tag_596:\n        /* \"#utility.yul\":5920:5994   */\n      tag_597\n        /* \"#utility.yul\":5986:5993   */\n      dup8\n        /* \"#utility.yul\":5981:5983   */\n      dup3\n        /* \"#utility.yul\":5968:5984   */\n      calldataload\n        /* \"#utility.yul\":5963:5965   */\n      0x20\n        /* \"#utility.yul\":5959:5961   */\n      dup5\n        /* \"#utility.yul\":5955:5966   */\n      add\n        /* \"#utility.yul\":5920:5994   */\n      tag_529\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":5910:5994   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5333:6000   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6005:6637   */\n    tag_183:\n        /* \"#utility.yul\":6176:6178   */\n      0x20\n        /* \"#utility.yul\":6228:6249   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6298:6311   */\n      dup3\n      mload\n        /* \"#utility.yul\":6201:6219   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":6320:6342   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6147:6151   */\n      0x00\n      swap2\n        /* \"#utility.yul\":6176:6178   */\n      swap1\n        /* \"#utility.yul\":6399:6414   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6373:6375   */\n      0x40\n        /* \"#utility.yul\":6358:6376   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":6147:6151   */\n      dup5\n        /* \"#utility.yul\":6442:6611   */\n    tag_599:\n        /* \"#utility.yul\":6456:6462   */\n      dup2\n        /* \"#utility.yul\":6453:6454   */\n      dup2\n        /* \"#utility.yul\":6450:6463   */\n      lt\n        /* \"#utility.yul\":6442:6611   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":6517:6530   */\n      dup4\n      mload\n        /* \"#utility.yul\":6505:6531   */\n      dup4\n      mstore\n        /* \"#utility.yul\":6586:6601   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":6551:6563   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":6478:6479   */\n      0x01\n        /* \"#utility.yul\":6471:6480   */\n      add\n        /* \"#utility.yul\":6442:6611   */\n      jump(tag_599)\n    tag_601:\n      pop\n        /* \"#utility.yul\":6628:6631   */\n      swap1\n      swap7\n        /* \"#utility.yul\":6005:6637   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6642:6902   */\n    tag_195:\n        /* \"#utility.yul\":6710:6716   */\n      0x00\n        /* \"#utility.yul\":6718:6724   */\n      dup1\n        /* \"#utility.yul\":6771:6773   */\n      0x40\n        /* \"#utility.yul\":6759:6768   */\n      dup4\n        /* \"#utility.yul\":6750:6757   */\n      dup6\n        /* \"#utility.yul\":6746:6769   */\n      sub\n        /* \"#utility.yul\":6742:6774   */\n      slt\n        /* \"#utility.yul\":6739:6791   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":6787:6788   */\n      0x00\n        /* \"#utility.yul\":6784:6785   */\n      dup1\n        /* \"#utility.yul\":6777:6789   */\n      revert\n        /* \"#utility.yul\":6739:6791   */\n    tag_603:\n        /* \"#utility.yul\":6810:6839   */\n      tag_604\n        /* \"#utility.yul\":6829:6838   */\n      dup4\n        /* \"#utility.yul\":6810:6839   */\n      tag_526\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":6800:6839   */\n      swap2\n      pop\n        /* \"#utility.yul\":6858:6896   */\n      tag_590\n        /* \"#utility.yul\":6892:6894   */\n      0x20\n        /* \"#utility.yul\":6881:6890   */\n      dup5\n        /* \"#utility.yul\":6877:6895   */\n      add\n        /* \"#utility.yul\":6858:6896   */\n      tag_526\n      jump\t// in\n        /* \"#utility.yul\":6907:7287   */\n    tag_212:\n        /* \"#utility.yul\":6986:6987   */\n      0x01\n        /* \"#utility.yul\":6982:6994   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7029:7041   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7050:7111   */\n      tag_607\n      jumpi\n        /* \"#utility.yul\":7104:7108   */\n      0x7f\n        /* \"#utility.yul\":7096:7102   */\n      dup3\n        /* \"#utility.yul\":7092:7109   */\n      and\n        /* \"#utility.yul\":7082:7109   */\n      swap2\n      pop\n        /* \"#utility.yul\":7050:7111   */\n    tag_607:\n        /* \"#utility.yul\":7157:7159   */\n      0x20\n        /* \"#utility.yul\":7149:7155   */\n      dup3\n        /* \"#utility.yul\":7146:7160   */\n      lt\n        /* \"#utility.yul\":7126:7144   */\n      dup2\n        /* \"#utility.yul\":7123:7161   */\n      eq\n        /* \"#utility.yul\":7120:7281   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":7203:7213   */\n      0x4e487b71\n        /* \"#utility.yul\":7198:7201   */\n      0xe0\n        /* \"#utility.yul\":7194:7214   */\n      shl\n        /* \"#utility.yul\":7191:7192   */\n      0x00\n        /* \"#utility.yul\":7184:7215   */\n      mstore\n        /* \"#utility.yul\":7238:7242   */\n      0x22\n        /* \"#utility.yul\":7235:7236   */\n      0x04\n        /* \"#utility.yul\":7228:7243   */\n      mstore\n        /* \"#utility.yul\":7266:7270   */\n      0x24\n        /* \"#utility.yul\":7263:7264   */\n      0x00\n        /* \"#utility.yul\":7256:7271   */\n      revert\n        /* \"#utility.yul\":7120:7281   */\n    tag_608:\n      pop\n        /* \"#utility.yul\":6907:7287   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7292:7419   */\n    tag_237:\n        /* \"#utility.yul\":7353:7363   */\n      0x4e487b71\n        /* \"#utility.yul\":7348:7351   */\n      0xe0\n        /* \"#utility.yul\":7344:7364   */\n      shl\n        /* \"#utility.yul\":7341:7342   */\n      0x00\n        /* \"#utility.yul\":7334:7365   */\n      mstore\n        /* \"#utility.yul\":7384:7388   */\n      0x32\n        /* \"#utility.yul\":7381:7382   */\n      0x04\n        /* \"#utility.yul\":7374:7389   */\n      mstore\n        /* \"#utility.yul\":7408:7412   */\n      0x24\n        /* \"#utility.yul\":7405:7406   */\n      0x00\n        /* \"#utility.yul\":7398:7413   */\n      revert\n        /* \"#utility.yul\":7424:7551   */\n    tag_530:\n        /* \"#utility.yul\":7485:7495   */\n      0x4e487b71\n        /* \"#utility.yul\":7480:7483   */\n      0xe0\n        /* \"#utility.yul\":7476:7496   */\n      shl\n        /* \"#utility.yul\":7473:7474   */\n      0x00\n        /* \"#utility.yul\":7466:7497   */\n      mstore\n        /* \"#utility.yul\":7516:7520   */\n      0x11\n        /* \"#utility.yul\":7513:7514   */\n      0x04\n        /* \"#utility.yul\":7506:7521   */\n      mstore\n        /* \"#utility.yul\":7540:7544   */\n      0x24\n        /* \"#utility.yul\":7537:7538   */\n      0x00\n        /* \"#utility.yul\":7530:7545   */\n      revert\n        /* \"#utility.yul\":7556:7691   */\n    tag_240:\n        /* \"#utility.yul\":7595:7598   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":7616:7633   */\n      dup3\n      eq\n        /* \"#utility.yul\":7613:7656   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":7636:7654   */\n      tag_613\n      tag_530\n      jump\t// in\n    tag_613:\n      pop\n        /* \"#utility.yul\":7683:7684   */\n      0x01\n        /* \"#utility.yul\":7672:7685   */\n      add\n      swap1\n        /* \"#utility.yul\":7556:7691   */\n      jump\t// out\n        /* \"#utility.yul\":8632:8760   */\n    tag_321:\n        /* \"#utility.yul\":8672:8675   */\n      0x00\n        /* \"#utility.yul\":8703:8704   */\n      dup3\n        /* \"#utility.yul\":8699:8705   */\n      not\n        /* \"#utility.yul\":8696:8697   */\n      dup3\n        /* \"#utility.yul\":8693:8706   */\n      gt\n        /* \"#utility.yul\":8690:8729   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":8709:8727   */\n      tag_618\n      tag_530\n      jump\t// in\n    tag_618:\n      pop\n        /* \"#utility.yul\":8745:8754   */\n      add\n      swap1\n        /* \"#utility.yul\":8632:8760   */\n      jump\t// out\n        /* \"#utility.yul\":10223:10391   */\n    tag_340:\n        /* \"#utility.yul\":10263:10270   */\n      0x00\n        /* \"#utility.yul\":10329:10330   */\n      dup2\n        /* \"#utility.yul\":10325:10326   */\n      0x00\n        /* \"#utility.yul\":10321:10327   */\n      not\n        /* \"#utility.yul\":10317:10331   */\n      div\n        /* \"#utility.yul\":10314:10315   */\n      dup4\n        /* \"#utility.yul\":10311:10332   */\n      gt\n        /* \"#utility.yul\":10306:10307   */\n      dup3\n        /* \"#utility.yul\":10299:10308   */\n      iszero\n        /* \"#utility.yul\":10292:10309   */\n      iszero\n        /* \"#utility.yul\":10288:10333   */\n      and\n        /* \"#utility.yul\":10285:10356   */\n      iszero\n      tag_625\n      jumpi\n        /* \"#utility.yul\":10336:10354   */\n      tag_625\n      tag_530\n      jump\t// in\n    tag_625:\n      pop\n        /* \"#utility.yul\":10376:10385   */\n      mul\n      swap1\n        /* \"#utility.yul\":10223:10391   */\n      jump\t// out\n        /* \"#utility.yul\":11285:12812   */\n    tag_374:\n        /* \"#utility.yul\":11509:11512   */\n      0x00\n        /* \"#utility.yul\":11547:11553   */\n      dup5\n        /* \"#utility.yul\":11541:11554   */\n      mload\n        /* \"#utility.yul\":11573:11577   */\n      0x20\n        /* \"#utility.yul\":11586:11637   */\n      tag_630\n        /* \"#utility.yul\":11630:11636   */\n      dup3\n        /* \"#utility.yul\":11625:11628   */\n      dup6\n        /* \"#utility.yul\":11620:11622   */\n      dup4\n        /* \"#utility.yul\":11612:11618   */\n      dup11\n        /* \"#utility.yul\":11608:11623   */\n      add\n        /* \"#utility.yul\":11586:11637   */\n      tag_527\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":11700:11713   */\n      dup6\n      mload\n        /* \"#utility.yul\":11659:11675   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":11722:11777   */\n      tag_631\n        /* \"#utility.yul\":11700:11713   */\n      dup2\n        /* \"#utility.yul\":11659:11675   */\n      dup5\n        /* \"#utility.yul\":11744:11759   */\n      dup5\n      dup11\n      add\n        /* \"#utility.yul\":11722:11777   */\n      tag_527\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":11866:11879   */\n      dup6\n      sload\n        /* \"#utility.yul\":11799:11819   */\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":11839:11840   */\n      0x00\n      swap1\n        /* \"#utility.yul\":11926:11927   */\n      0x01\n        /* \"#utility.yul\":11948:11966   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":12001:12019   */\n      dup1\n      dup4\n      and\n      dup1\n        /* \"#utility.yul\":12028:12121   */\n      tag_632\n      jumpi\n        /* \"#utility.yul\":12106:12110   */\n      0x7f\n        /* \"#utility.yul\":12096:12104   */\n      dup4\n        /* \"#utility.yul\":12092:12111   */\n      and\n        /* \"#utility.yul\":12080:12111   */\n      swap3\n      pop\n        /* \"#utility.yul\":12028:12121   */\n    tag_632:\n        /* \"#utility.yul\":12169:12171   */\n      dup6\n        /* \"#utility.yul\":12159:12167   */\n      dup4\n        /* \"#utility.yul\":12156:12172   */\n      lt\n        /* \"#utility.yul\":12136:12154   */\n      dup2\n        /* \"#utility.yul\":12133:12173   */\n      eq\n        /* \"#utility.yul\":12130:12297   */\n      iszero\n      tag_633\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":12196:12229   */\n      dup6\n      mstore\n        /* \"#utility.yul\":12252:12256   */\n      0x22\n        /* \"#utility.yul\":12249:12250   */\n      0x04\n        /* \"#utility.yul\":12242:12257   */\n      mstore\n        /* \"#utility.yul\":12282:12286   */\n      0x24\n        /* \"#utility.yul\":12203:12206   */\n      dup6\n        /* \"#utility.yul\":12270:12287   */\n      revert\n        /* \"#utility.yul\":12130:12297   */\n    tag_633:\n        /* \"#utility.yul\":12313:12331   */\n      dup1\n        /* \"#utility.yul\":12340:12450   */\n      dup1\n      iszero\n      tag_635\n      jumpi\n        /* \"#utility.yul\":12464:12465   */\n      0x01\n        /* \"#utility.yul\":12459:12787   */\n      dup2\n      eq\n      tag_636\n      jumpi\n        /* \"#utility.yul\":12306:12787   */\n      jump(tag_634)\n        /* \"#utility.yul\":12340:12450   */\n    tag_635:\n      not(0xff)\n        /* \"#utility.yul\":12375:12399   */\n      dup6\n      and\n        /* \"#utility.yul\":12361:12400   */\n      dup9\n      mstore\n        /* \"#utility.yul\":12420:12440   */\n      dup4\n      dup9\n      add\n      swap6\n      pop\n        /* \"#utility.yul\":12340:12450   */\n      jump(tag_634)\n        /* \"#utility.yul\":12459:12787   */\n    tag_636:\n        /* \"#utility.yul\":11232:11233   */\n      0x00\n        /* \"#utility.yul\":11225:11239   */\n      dup12\n      dup2\n      mstore\n        /* \"#utility.yul\":11269:11273   */\n      0x20\n        /* \"#utility.yul\":11256:11274   */\n      swap1\n      keccak256\n        /* \"#utility.yul\":12554:12555   */\n      0x00\n        /* \"#utility.yul\":12568:12737   */\n    tag_638:\n        /* \"#utility.yul\":12582:12590   */\n      dup6\n        /* \"#utility.yul\":12579:12580   */\n      dup2\n        /* \"#utility.yul\":12576:12591   */\n      lt\n        /* \"#utility.yul\":12568:12737   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":12664:12678   */\n      dup2\n      sload\n        /* \"#utility.yul\":12649:12662   */\n      dup11\n      dup3\n      add\n        /* \"#utility.yul\":12642:12679   */\n      mstore\n        /* \"#utility.yul\":12707:12723   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":12599:12609   */\n      dup9\n      add\n        /* \"#utility.yul\":12568:12737   */\n      jump(tag_638)\n    tag_640:\n        /* \"#utility.yul\":12572:12575   */\n      pop\n      pop\n        /* \"#utility.yul\":12768:12776   */\n      dup4\n        /* \"#utility.yul\":12761:12766   */\n      dup9\n        /* \"#utility.yul\":12757:12777   */\n      add\n        /* \"#utility.yul\":12750:12777   */\n      swap6\n      pop\n        /* \"#utility.yul\":12306:12787   */\n    tag_634:\n      pop\n        /* \"#utility.yul\":12803:12806   */\n      swap4\n      swap12\n        /* \"#utility.yul\":11285:12812   */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13585:14074   */\n    tag_438:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13854:13869   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":13836:13870   */\n      dup3\n      mstore\n        /* \"#utility.yul\":13906:13921   */\n      dup5\n      and\n        /* \"#utility.yul\":13901:13903   */\n      0x20\n        /* \"#utility.yul\":13886:13904   */\n      dup3\n      add\n        /* \"#utility.yul\":13879:13922   */\n      mstore\n        /* \"#utility.yul\":13953:13955   */\n      0x40\n        /* \"#utility.yul\":13938:13956   */\n      dup2\n      add\n        /* \"#utility.yul\":13931:13965   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14001:14004   */\n      0x80\n        /* \"#utility.yul\":13996:13998   */\n      0x60\n        /* \"#utility.yul\":13981:13999   */\n      dup3\n      add\n        /* \"#utility.yul\":13974:14005   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13779:13783   */\n      0x00\n      swap1\n        /* \"#utility.yul\":14022:14068   */\n      tag_644\n      swap1\n        /* \"#utility.yul\":14048:14067   */\n      dup4\n      add\n        /* \"#utility.yul\":14040:14046   */\n      dup5\n        /* \"#utility.yul\":14022:14068   */\n      tag_528\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":14014:14068   */\n      swap7\n        /* \"#utility.yul\":13585:14074   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14079:14328   */\n    tag_441:\n        /* \"#utility.yul\":14148:14154   */\n      0x00\n        /* \"#utility.yul\":14201:14203   */\n      0x20\n        /* \"#utility.yul\":14189:14198   */\n      dup3\n        /* \"#utility.yul\":14180:14187   */\n      dup5\n        /* \"#utility.yul\":14176:14199   */\n      sub\n        /* \"#utility.yul\":14172:14204   */\n      slt\n        /* \"#utility.yul\":14169:14221   */\n      iszero\n      tag_646\n      jumpi\n        /* \"#utility.yul\":14217:14218   */\n      0x00\n        /* \"#utility.yul\":14214:14215   */\n      dup1\n        /* \"#utility.yul\":14207:14219   */\n      revert\n        /* \"#utility.yul\":14169:14221   */\n    tag_646:\n        /* \"#utility.yul\":14249:14258   */\n      dup2\n        /* \"#utility.yul\":14243:14259   */\n      mload\n        /* \"#utility.yul\":14268:14298   */\n      tag_370\n        /* \"#utility.yul\":14292:14297   */\n      dup2\n        /* \"#utility.yul\":14268:14298   */\n      tag_524\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220626c7bfd313cc063457694610a70894c6722e8525ae223ed43ccbbe7e8e8ce8f64736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1063": {
									"entryPoint": null,
									"id": 1063,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1171": {
									"entryPoint": null,
									"id": 1171,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1366": {
									"entryPoint": null,
									"id": 1366,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3114": {
									"entryPoint": null,
									"id": 3114,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOwner_1094": {
									"entryPoint": 394,
									"id": 1094,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1218": {
									"entryPoint": 275,
									"id": 1218,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_startTokenId_1375": {
									"entryPoint": null,
									"id": 1375,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1151": {
									"entryPoint": 279,
									"id": 1151,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_1080": {
									"entryPoint": null,
									"id": 1080,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setBaseURI_3288": {
									"entryPoint": 359,
									"id": 3288,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1981:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:996:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "247:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "257:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "251:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "304:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "306:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "306:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "306:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "279:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "288:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:23:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "300:2:8"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:32:8"
															},
															"nodeType": "YulIf",
															"src": "268:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "329:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "343:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "333:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "368:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "386:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "390:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "394:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "378:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:18:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "372:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "423:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "432:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "425:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "425:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "425:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "411:6:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "408:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:14:8"
															},
															"nodeType": "YulIf",
															"src": "405:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:22:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "452:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "528:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "537:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "530:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "530:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "507:2:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "511:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "503:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "503:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:35:8"
															},
															"nodeType": "YulIf",
															"src": "489:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "553:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "569:2:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "563:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:9:8"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "557:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "595:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "597:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "587:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "591:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:10:8"
															},
															"nodeType": "YulIf",
															"src": "581:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "626:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:7:8"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "630:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "652:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "672:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "656:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "730:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "734:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "726:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "726:13:8"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "741:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "722:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "722:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "746:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "718:31:8"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "751:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "688:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "816:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "773:10:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "785:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "770:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "793:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "805:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "790:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "767:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:46:8"
															},
															"nodeType": "YulIf",
															"src": "764:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "852:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "856:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "845:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:8"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "891:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:18:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "940:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "949:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "952:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "942:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "942:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "942:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "917:2:8"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "921:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "913:11:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "909:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "909:20:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "931:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "906:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:33:8"
															},
															"nodeType": "YulIf",
															"src": "903:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "965:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "974:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "969:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1030:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1059:6:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1067:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1055:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1055:14:8"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1071:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1051:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1051:23:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1090:2:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1094:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1086:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1086:10:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1098:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1076:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1076:26:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1044:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1044:59:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1044:59:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "995:1:8"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "998:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "992:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1002:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1004:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1013:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1016:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1009:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1009:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1004:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "988:3:8",
																"statements": []
															},
															"src": "984:129:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1143:59:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1172:6:8"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1180:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1168:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1168:15:8"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1185:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1164:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:24:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1190:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:35:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:35:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1128:1:8"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1131:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1125:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1125:9:8"
															},
															"nodeType": "YulIf",
															"src": "1122:80:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1211:16:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1221:6:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:8",
														"type": ""
													}
												],
												"src": "146:1087:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1412:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1429:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1422:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1422:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1463:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1474:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1459:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1459:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1479:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1452:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1452:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1452:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1502:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1513:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1498:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1498:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1518:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1562:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1574:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1585:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1570:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1570:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1562:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1389:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1403:4:8",
														"type": ""
													}
												],
												"src": "1238:356:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1664:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1678:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1681:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1674:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1664:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1695:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1725:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1731:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1721:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1699:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1772:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1774:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1788:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1796:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1784:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1784:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1774:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1752:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1745:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1745:26:8"
															},
															"nodeType": "YulIf",
															"src": "1742:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1862:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1883:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1890:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1895:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1886:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1886:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1876:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1876:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1876:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1927:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1930:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1920:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1920:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1920:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1955:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1958:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1948:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1948:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1948:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1818:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1841:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1849:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1838:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1838:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1815:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1815:38:8"
															},
															"nodeType": "YulIf",
															"src": "1812:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1634:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1643:6:8",
														"type": ""
													}
												],
												"src": "1599:380:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040526005608081905264173539b7b760d91b60a09081526200002891600b9190620001eb565b506000600c556101a4600d556005600e55600f805461ffff191690553480156200005157600080fd5b5060405162002234380380620022348339810160408190526200007491620002a7565b6040518060400160405280600681526020016503434323230360d41b81525060405180604001604052806003815260200162494d4960e81b815250620000c9620000c36200011360201b60201c565b62000117565b8151620000de906003906020850190620001eb565b508051620000f4906004906020840190620001eb565b505060006001908155600955506200010c8162000167565b50620003c0565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001716200018a565b80516200018690600a906020840190620001eb565b5050565b6000546001600160a01b03163314620001e95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b828054620001f99062000383565b90600052602060002090601f0160209004810192826200021d576000855562000268565b82601f106200023857805160ff191683800117855562000268565b8280016001018555821562000268579182015b82811115620002685782518255916020019190600101906200024b565b50620002769291506200027a565b5090565b5b808211156200027657600081556001016200027b565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620002bb57600080fd5b82516001600160401b0380821115620002d357600080fd5b818501915085601f830112620002e857600080fd5b815181811115620002fd57620002fd62000291565b604051601f8201601f19908116603f0116810190838211818310171562000328576200032862000291565b8160405282815288868487010111156200034157600080fd5b600093505b8284101562000365578484018601518185018701529285019262000346565b82841115620003775760008684830101525b98975050505050505050565b600181811c908216806200039857607f821691505b60208210811415620003ba57634e487b7160e01b600052602260045260246000fd5b50919050565b611e6480620003d06000396000f3fe6080604052600436106102045760003560e01c80636352211e11610118578063b3807b1d116100a0578063ca8a7d5e1161006f578063ca8a7d5e146105a0578063d5abeb01146105cd578063da3ef23f146105e3578063e985e9c514610603578063f2fde38b1461064c57600080fd5b8063b3807b1d14610542578063b88d4fde14610558578063c66828621461056b578063c87b56dd1461058057600080fd5b80638da5cb5b116100e75780638da5cb5b146104ac57806395d89b41146104ca578063a0712d68146104df578063a22cb465146104f2578063a7cd52cb1461051257600080fd5b80636352211e14610438578063674c02aa1461045857806370a0823114610477578063715018a61461049757600080fd5b806317dc10c41161019b5780633ccfd60b1161016a5780633ccfd60b146103c357806342842e0e146103cb57806355f804b3146103de5780635b9e3ccf146103fe5780635c975abb1461041e57600080fd5b806317dc10c41461034a57806318160ddd1461036a57806318cae2691461038357806323b872dd146103b057600080fd5b8063081812fc116101d7578063081812fc146102bb578063095ea7b3146102f357806313faede614610306578063142b0fbe1461032a57600080fd5b806301ffc9a71461020957806302329a291461023e57806305a3b8091461026057806306fdde0314610299575b600080fd5b34801561021557600080fd5b50610229610224366004611887565b61066c565b60405190151581526020015b60405180910390f35b34801561024a57600080fd5b5061025e6102593660046118b9565b6106be565b005b34801561026c57600080fd5b5061022961027b3660046118eb565b6001600160a01b031660009081526010602052604090205460ff1690565b3480156102a557600080fd5b506102ae6106d9565b604051610235919061195e565b3480156102c757600080fd5b506102db6102d6366004611971565b61076b565b6040516001600160a01b039091168152602001610235565b61025e61030136600461198a565b6107af565b34801561031257600080fd5b5061031c600c5481565b604051908152602001610235565b34801561033657600080fd5b5061025e6103453660046119b4565b61084f565b34801561035657600080fd5b5061025e6103653660046118b9565b6108ce565b34801561037657600080fd5b506002546001540361031c565b34801561038f57600080fd5b5061031c61039e3660046118eb565b60116020526000908152604090205481565b61025e6103be366004611a29565b6108f0565b61025e610a81565b61025e6103d9366004611a29565b610ac6565b3480156103ea57600080fd5b5061025e6103f9366004611af1565b610ae1565b34801561040a57600080fd5b5061025e6104193660046119b4565b610b00565b34801561042a57600080fd5b50600f546102299060ff1681565b34801561044457600080fd5b506102db610453366004611971565b610b7a565b34801561046457600080fd5b50600f5461022990610100900460ff1681565b34801561048357600080fd5b5061031c6104923660046118eb565b610b85565b3480156104a357600080fd5b5061025e610bd4565b3480156104b857600080fd5b506000546001600160a01b03166102db565b3480156104d657600080fd5b506102ae610be8565b61025e6104ed366004611971565b610bf7565b3480156104fe57600080fd5b5061025e61050d366004611b3a565b610f3f565b34801561051e57600080fd5b5061022961052d3660046118eb565b60106020526000908152604090205460ff1681565b34801561054e57600080fd5b5061031c600e5481565b61025e610566366004611b6d565b610fab565b34801561057757600080fd5b506102ae610ff5565b34801561058c57600080fd5b506102ae61059b366004611971565b611083565b3480156105ac57600080fd5b506105c06105bb3660046118eb565b611151565b6040516102359190611be9565b3480156105d957600080fd5b5061031c600d5481565b3480156105ef57600080fd5b5061025e6105fe366004611af1565b611229565b34801561060f57600080fd5b5061022961061e366004611c2d565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205460ff1690565b34801561065857600080fd5b5061025e6106673660046118eb565b611244565b60006301ffc9a760e01b6001600160e01b03198316148061069d57506380ac58cd60e01b6001600160e01b03198316145b806106b85750635b5e139f60e01b6001600160e01b03198316145b92915050565b6106c66112ba565b600f805460ff1916911515919091179055565b6060600380546106e890611c57565b80601f016020809104026020016040519081016040528092919081815260200182805461071490611c57565b80156107615780601f1061073657610100808354040283529160200191610761565b820191906000526020600020905b81548152906001019060200180831161074457829003601f168201915b5050505050905090565b600061077682611314565b610793576040516333d1c03960e21b815260040160405180910390fd5b506000908152600760205260409020546001600160a01b031690565b60006107ba82610b7a565b9050336001600160a01b038216146107f3576107d6813361061e565b6107f3576040516367d9dca160e11b815260040160405180910390fd5b60008281526007602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6108576112ba565b60005b818110156108c95760006010600085858581811061087a5761087a611c92565b905060200201602081019061088f91906118eb565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806108c181611cbe565b91505061085a565b505050565b6108d66112ba565b600f80549115156101000261ff0019909216919091179055565b60006108fb8261133c565b9050836001600160a01b0316816001600160a01b03161461092e5760405162a1148160e81b815260040160405180910390fd5b60008281526007602052604090208054338082146001600160a01b0388169091141761097b5761095e863361061e565b61097b57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166109a257604051633a954ecd60e21b815260040160405180910390fd5b80156109ad57600082555b6001600160a01b038681166000908152600660205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260056020526040902055600160e11b8316610a385760018401600081815260056020526040902054610a36576001548114610a365760008181526005602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b610a896112ba565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610ac3573d6000803e3d6000fd5b50565b6108c983838360405180602001604052806000815250610fab565b610ae96112ba565b8051610afc90600a9060208401906117d8565b5050565b610b086112ba565b60005b818110156108c957600160106000858585818110610b2b57610b2b611c92565b9050602002016020810190610b4091906118eb565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905580610b7281611cbe565b915050610b0b565b60006106b88261133c565b60006001600160a01b038216610bae576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526006602052604090205467ffffffffffffffff1690565b610bdc6112ba565b610be6600061139d565b565b6060600480546106e890611c57565b6000610c066002546001540390565b600f5490915060ff1615610cad5760405162461bcd60e51b815260206004820152605f60248201527f574f414820686f6c6420757020746865206d696e74206973206e6f742079657460448201527f206c6976652c2061206c6974746c6520746f6f206561726c792074686572652e60648201527f2e2e206f72206c6174653f205472616e736d697373696f6e20456e64696e6700608482015260a4015b60405180910390fd5b60008211610d235760405162461bcd60e51b815260206004820152603f60248201527f6d757374206d696e74206174206c656173742031206e66742c2030206973206e60448201527f6f7420616c6c6f7765642e205472616e736d697373696f6e20456e64696e67006064820152608401610ca4565b600d54610d308383611cd9565b1115610d9c5760405162461bcd60e51b815260206004820152603560248201527f6c6f6f6b73206c696b652077652061726520706f70756c6172206d61782073756044820152741c1c1b1e481a185cc81899595b881c995858da1959605a1b6064820152608401610ca4565b6000546001600160a01b03163314610f0d576001821115610df65760405162461bcd60e51b8152602060048201526014602482015273037b7363c90189030ba1030903a34b6b2901d14960651b6044820152606401610ca4565b600f5460ff61010090910416151560011415610ebb573360009081526010602052604090205460ff16610e5d5760405162461bcd60e51b815260206004820152600f60248201526e139bdd08105b1b1bdddb1a5cdd1959608a1b6044820152606401610ca4565b33600090815260116020526040902054600e54610e7a8483611cd9565b1115610eb95760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e481b5a5b9d195960921b6044820152606401610ca4565b505b81600c54610ec99190611cf1565b341015610f0d5760405162461bcd60e51b8152602060048201526012602482015271086dee6e840c8decae6dc4ee840dac2e8c6d60731b6044820152606401610ca4565b610f1733836113ed565b3360009081526011602052604081208054849290610f36908490611cd9565b90915550505050565b3360008181526008602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610fb68484846108f0565b6001600160a01b0383163b15610fef57610fd284848484611407565b610fef576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b600b805461100290611c57565b80601f016020809104026020016040519081016040528092919081815260200182805461102e90611c57565b801561107b5780601f106110505761010080835404028352916020019161107b565b820191906000526020600020905b81548152906001019060200180831161105e57829003601f168201915b505050505081565b606061108e82611314565b6110f25760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610ca4565b60006110fc6114f0565b9050600081511161111c576040518060200160405280600081525061114a565b80611126846114ff565b600b60405160200161113a93929190611d10565b6040516020818303038152906040525b9392505050565b606060006111626002546001540390565b9050600061116f84610b85565b67ffffffffffffffff81111561118757611187611a65565b6040519080825280602002602001820160405280156111b0578160200160208202803683370190505b5090506000805b8381101561121f57856001600160a01b03166111d282610b7a565b6001600160a01b0316141561120d57808383815181106111f4576111f4611c92565b60209081029190910101528161120981611cbe565b9250505b8061121781611cbe565b9150506111b7565b5090949350505050565b6112316112ba565b8051610afc90600b9060208401906117d8565b61124c6112ba565b6001600160a01b0381166112b15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ca4565b610ac38161139d565b6000546001600160a01b03163314610be65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ca4565b6000600154821080156106b8575050600090815260056020526040902054600160e01b161590565b60008160015481101561138457600081815260056020526040902054600160e01b8116611382575b8061114a575060001901600081815260056020526040902054611364565b505b604051636f96cda160e11b815260040160405180910390fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610afc82826040518060200160405280600081525061159c565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061143c903390899088908890600401611dd4565b6020604051808303816000875af1925050508015611477575060408051601f3d908101601f1916820190925261147491810190611e11565b60015b6114d2573d8080156114a5576040519150601f19603f3d011682016040523d82523d6000602084013e6114aa565b606091505b5080516114ca576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600a80546106e890611c57565b6060600061150c83611609565b600101905060008167ffffffffffffffff81111561152c5761152c611a65565b6040519080825280601f01601f191660200182016040528015611556576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461158f57611594565b611560565b509392505050565b6115a683836116e1565b6001600160a01b0383163b156108c9576001548281035b6115d06000868380600101945086611407565b6115ed576040516368d2bf6b60e11b815260040160405180910390fd5b8181106115bd57816001541461160257600080fd5b5050505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106116485772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611674576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061169257662386f26fc10000830492506010015b6305f5e10083106116aa576305f5e100830492506008015b61271083106116be57612710830492506004015b606483106116d0576064830492506002015b600a83106106b85760010192915050565b600154816117025760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526006602090815260408083208054680100000000000000018802019055848352600590915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b8181146117b157808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101611779565b50816117cf57604051622e076360e81b815260040160405180910390fd5b60015550505050565b8280546117e490611c57565b90600052602060002090601f016020900481019282611806576000855561184c565b82601f1061181f57805160ff191683800117855561184c565b8280016001018555821561184c579182015b8281111561184c578251825591602001919060010190611831565b5061185892915061185c565b5090565b5b80821115611858576000815560010161185d565b6001600160e01b031981168114610ac357600080fd5b60006020828403121561189957600080fd5b813561114a81611871565b803580151581146118b457600080fd5b919050565b6000602082840312156118cb57600080fd5b61114a826118a4565b80356001600160a01b03811681146118b457600080fd5b6000602082840312156118fd57600080fd5b61114a826118d4565b60005b83811015611921578181015183820152602001611909565b83811115610fef5750506000910152565b6000815180845261194a816020860160208601611906565b601f01601f19169290920160200192915050565b60208152600061114a6020830184611932565b60006020828403121561198357600080fd5b5035919050565b6000806040838503121561199d57600080fd5b6119a6836118d4565b946020939093013593505050565b600080602083850312156119c757600080fd5b823567ffffffffffffffff808211156119df57600080fd5b818501915085601f8301126119f357600080fd5b813581811115611a0257600080fd5b8660208260051b8501011115611a1757600080fd5b60209290920196919550909350505050565b600080600060608486031215611a3e57600080fd5b611a47846118d4565b9250611a55602085016118d4565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611a9657611a96611a65565b604051601f8501601f19908116603f01168101908282118183101715611abe57611abe611a65565b81604052809350858152868686011115611ad757600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611b0357600080fd5b813567ffffffffffffffff811115611b1a57600080fd5b8201601f81018413611b2b57600080fd5b6114e884823560208401611a7b565b60008060408385031215611b4d57600080fd5b611b56836118d4565b9150611b64602084016118a4565b90509250929050565b60008060008060808587031215611b8357600080fd5b611b8c856118d4565b9350611b9a602086016118d4565b925060408501359150606085013567ffffffffffffffff811115611bbd57600080fd5b8501601f81018713611bce57600080fd5b611bdd87823560208401611a7b565b91505092959194509250565b6020808252825182820181905260009190848201906040850190845b81811015611c2157835183529284019291840191600101611c05565b50909695505050505050565b60008060408385031215611c4057600080fd5b611c49836118d4565b9150611b64602084016118d4565b600181811c90821680611c6b57607f821691505b60208210811415611c8c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611cd257611cd2611ca8565b5060010190565b60008219821115611cec57611cec611ca8565b500190565b6000816000190483118215151615611d0b57611d0b611ca8565b500290565b600084516020611d238285838a01611906565b855191840191611d368184848a01611906565b8554920191600090600181811c9080831680611d5357607f831692505b858310811415611d7157634e487b7160e01b85526022600452602485fd5b808015611d855760018114611d9657611dc3565b60ff19851688528388019550611dc3565b60008b81526020902060005b85811015611dbb5781548a820152908401908801611da2565b505083880195505b50939b9a5050505050505050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e0790830184611932565b9695505050505050565b600060208284031215611e2357600080fd5b815161114a8161187156fea2646970667358221220626c7bfd313cc063457694610a70894c6722e8525ae223ed43ccbbe7e8e8ce8f64736f6c634300080c0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH5 0x173539B7B7 PUSH1 0xD9 SHL PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH3 0x28 SWAP2 PUSH1 0xB SWAP2 SWAP1 PUSH3 0x1EB JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0xC SSTORE PUSH2 0x1A4 PUSH1 0xD SSTORE PUSH1 0x5 PUSH1 0xE SSTORE PUSH1 0xF DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2234 CODESIZE SUB DUP1 PUSH3 0x2234 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x74 SWAP2 PUSH3 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x34343232303 PUSH1 0xD4 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x494D49 PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH3 0xC9 PUSH3 0xC3 PUSH3 0x113 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x117 JUMP JUMPDEST DUP2 MLOAD PUSH3 0xDE SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1EB JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xF4 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1EB JUMP JUMPDEST POP POP PUSH1 0x0 PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x9 SSTORE POP PUSH3 0x10C DUP2 PUSH3 0x167 JUMP JUMPDEST POP PUSH3 0x3C0 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x171 PUSH3 0x18A JUMP JUMPDEST DUP1 MLOAD PUSH3 0x186 SWAP1 PUSH1 0xA SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1EB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x1E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1F9 SWAP1 PUSH3 0x383 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x21D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x268 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x238 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x268 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x268 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x268 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x24B JUMP JUMPDEST POP PUSH3 0x276 SWAP3 SWAP2 POP PUSH3 0x27A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x276 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x27B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x2FD JUMPI PUSH3 0x2FD PUSH3 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x328 JUMPI PUSH3 0x328 PUSH3 0x291 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x365 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x346 JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x377 JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x398 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3BA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E64 DUP1 PUSH3 0x3D0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xB3807B1D GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xCA8A7D5E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCA8A7D5E EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x603 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3807B1D EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0xC6682862 EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4F2 JUMPI DUP1 PUSH4 0xA7CD52CB EQ PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x674C02AA EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17DC10C4 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x5B9E3CCF EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17DC10C4 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x18CAE269 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x13FAEDE6 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x142B0FBE EQ PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x2329A29 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x5A3B809 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x299 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x195E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1971 JUMP JUMPDEST PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x301 CALLDATASIZE PUSH1 0x4 PUSH2 0x198A JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B4 JUMP JUMPDEST PUSH2 0x84F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x8CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB PUSH2 0x31C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1A29 JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x25E PUSH2 0xA81 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A29 JUMP JUMPDEST PUSH2 0xAC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B4 JUMP JUMPDEST PUSH2 0xB00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x229 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x453 CALLDATASIZE PUSH1 0x4 PUSH2 0x1971 JUMP JUMPDEST PUSH2 0xB7A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x229 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0xB85 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0xBD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0xBE8 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x4ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1971 JUMP JUMPDEST PUSH2 0xBF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x50D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3A JUMP JUMPDEST PUSH2 0xF3F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x52D CALLDATASIZE PUSH1 0x4 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x566 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6D JUMP JUMPDEST PUSH2 0xFAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0xFF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x1971 JUMP JUMPDEST PUSH2 0x1083 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C0 PUSH2 0x5BB CALLDATASIZE PUSH1 0x4 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x5FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0x1229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x61E CALLDATASIZE PUSH1 0x4 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x667 CALLDATASIZE PUSH1 0x4 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x69D JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x6B8 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6C6 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6E8 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x714 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x761 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x736 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x761 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x744 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x776 DUP3 PUSH2 0x1314 JUMP JUMPDEST PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BA DUP3 PUSH2 0xB7A JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x7F3 JUMPI PUSH2 0x7D6 DUP2 CALLER PUSH2 0x61E JUMP JUMPDEST PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x857 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x87A JUMPI PUSH2 0x87A PUSH2 0x1C92 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x8C1 DUP2 PUSH2 0x1CBE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x85A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FB DUP3 PUSH2 0x133C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x97B JUMPI PUSH2 0x95E DUP7 CALLER PUSH2 0x61E JUMP JUMPDEST PUSH2 0x97B JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x9A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x9AD JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP4 AND PUSH2 0xA38 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA36 JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xA36 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA89 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8C9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xFAB JUMP JUMPDEST PUSH2 0xAE9 PUSH2 0x12BA JUMP JUMPDEST DUP1 MLOAD PUSH2 0xAFC SWAP1 PUSH1 0xA SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x17D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB08 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x1 PUSH1 0x10 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xB2B JUMPI PUSH2 0xB2B PUSH2 0x1C92 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0xB72 DUP2 PUSH2 0x1CBE JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B8 DUP3 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0xBDC PUSH2 0x12BA JUMP JUMPDEST PUSH2 0xBE6 PUSH1 0x0 PUSH2 0x139D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6E8 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC06 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x574F414820686F6C6420757020746865206D696E74206973206E6F7420796574 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206C6976652C2061206C6974746C6520746F6F206561726C792074686572652E PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x2E2E206F72206C6174653F205472616E736D697373696F6E20456E64696E6700 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xD23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D757374206D696E74206174206C656173742031206E66742C2030206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F7420616C6C6F7765642E205472616E736D697373696F6E20456E64696E6700 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0xD30 DUP4 DUP4 PUSH2 0x1CD9 JUMP JUMPDEST GT ISZERO PUSH2 0xD9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6F6F6B73206C696B652077652061726520706F70756C6172206D6178207375 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x1C1C1B1E481A185CC81899595B881C995858DA1959 PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF0D JUMPI PUSH1 0x1 DUP3 GT ISZERO PUSH2 0xDF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x37B7363C90189030BA1030903A34B6B2901D149 PUSH1 0x65 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0xEBB JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xE5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD08105B1B1BDDDB1A5CDD1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCA4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xE SLOAD PUSH2 0xE7A DUP5 DUP4 PUSH2 0x1CD9 JUMP JUMPDEST GT ISZERO PUSH2 0xEB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x105B1C9958591E481B5A5B9D1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCA4 JUMP JUMPDEST POP JUMPDEST DUP2 PUSH1 0xC SLOAD PUSH2 0xEC9 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x86DEE6E840C8DECAE6DC4EE840DAC2E8C6D PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0xF17 CALLER DUP4 PUSH2 0x13ED JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xF36 SWAP1 DUP5 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xFB6 DUP5 DUP5 DUP5 PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xFEF JUMPI PUSH2 0xFD2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x1002 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x102E SWAP1 PUSH2 0x1C57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x107B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1050 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x107B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x105E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x108E DUP3 PUSH2 0x1314 JUMP JUMPDEST PUSH2 0x10F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FC PUSH2 0x14F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x114A JUMP JUMPDEST DUP1 PUSH2 0x1126 DUP5 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0xB PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x113A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1162 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x116F DUP5 PUSH2 0xB85 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1187 JUMPI PUSH2 0x1187 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11B0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x121F JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11D2 DUP3 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x120D JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11F4 JUMPI PUSH2 0x11F4 PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP2 PUSH2 0x1209 DUP2 PUSH2 0x1CBE JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x1217 DUP2 PUSH2 0x1CBE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11B7 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1231 PUSH2 0x12BA JUMP JUMPDEST DUP1 MLOAD PUSH2 0xAFC SWAP1 PUSH1 0xB SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x124C PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0xAC3 DUP2 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x6B8 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x1384 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH2 0x1382 JUMPI JUMPDEST DUP1 PUSH2 0x114A JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1364 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xAFC DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x143C SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1477 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1474 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1E11 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14D2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x14A5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x14CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0x6E8 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x150C DUP4 PUSH2 0x1609 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x152C JUMPI PUSH2 0x152C PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1556 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x158F JUMPI PUSH2 0x1594 JUMP JUMPDEST PUSH2 0x1560 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x15A6 DUP4 DUP4 PUSH2 0x16E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x1 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0x15D0 PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x15ED JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x15BD JUMPI DUP2 PUSH1 0x1 SLOAD EQ PUSH2 0x1602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1648 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1674 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1692 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x16AA JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x16BE JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x16D0 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x6B8 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH2 0x1702 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB562E8DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP9 MUL ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 DUP6 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 SSTORE DUP3 DUP5 ADD SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 PUSH1 0x1 DUP4 ADD JUMPDEST DUP2 DUP2 EQ PUSH2 0x17B1 JUMPI DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 ADD PUSH2 0x1779 JUMP JUMPDEST POP DUP2 PUSH2 0x17CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x2E0763 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x17E4 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1806 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x184C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x181F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x184C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x184C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x184C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1831 JUMP JUMPDEST POP PUSH2 0x1858 SWAP3 SWAP2 POP PUSH2 0x185C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1858 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x185D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x114A DUP2 PUSH2 0x1871 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114A DUP3 PUSH2 0x18A4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114A DUP3 PUSH2 0x18D4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1921 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1909 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFEF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x194A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x114A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A6 DUP4 PUSH2 0x18D4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1A02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A47 DUP5 PUSH2 0x18D4 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A55 PUSH1 0x20 DUP6 ADD PUSH2 0x18D4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1A96 JUMPI PUSH2 0x1A96 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1ABE JUMPI PUSH2 0x1ABE PUSH2 0x1A65 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1AD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1B2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E8 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B56 DUP4 PUSH2 0x18D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B64 PUSH1 0x20 DUP5 ADD PUSH2 0x18A4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B8C DUP6 PUSH2 0x18D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B9A PUSH1 0x20 DUP7 ADD PUSH2 0x18D4 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1BCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BDD DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1A7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C21 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1C05 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C49 DUP4 PUSH2 0x18D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B64 PUSH1 0x20 DUP5 ADD PUSH2 0x18D4 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C6B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1C8C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1CD2 JUMPI PUSH2 0x1CD2 PUSH2 0x1CA8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1CEC JUMPI PUSH2 0x1CEC PUSH2 0x1CA8 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1D0B JUMPI PUSH2 0x1D0B PUSH2 0x1CA8 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 PUSH2 0x1D23 DUP3 DUP6 DUP4 DUP11 ADD PUSH2 0x1906 JUMP JUMPDEST DUP6 MLOAD SWAP2 DUP5 ADD SWAP2 PUSH2 0x1D36 DUP2 DUP5 DUP5 DUP11 ADD PUSH2 0x1906 JUMP JUMPDEST DUP6 SLOAD SWAP3 ADD SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x1D53 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST DUP6 DUP4 LT DUP2 EQ ISZERO PUSH2 0x1D71 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP1 DUP1 ISZERO PUSH2 0x1D85 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1D96 JUMPI PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 MSTORE DUP4 DUP9 ADD SWAP6 POP PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1DBB JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP9 ADD PUSH2 0x1DA2 JUMP JUMPDEST POP POP DUP4 DUP9 ADD SWAP6 POP JUMPDEST POP SWAP4 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1E07 SWAP1 DUP4 ADD DUP5 PUSH2 0x1932 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x114A DUP2 PUSH2 0x1871 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x6C7BFD BALANCE EXTCODECOPY 0xC0 PUSH4 0x45769461 EXP PUSH17 0x894C6722E8525AE223ED43CCBBE7E8E8CE DUP16 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "418:37:7:-:0;290:3684;418:37;;290:3684;418:37;;;-1:-1:-1;;;418:37:7;;;;;;;;;;:::i;:::-;-1:-1:-1;484:10:7;462:32;;526:3;499:30;;566:1;534:33;;574:26;;;-1:-1:-1;;605:35:7;;;753:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5085:158:5;;;;;;;;;;;;;-1:-1:-1;;;5085:158:5;;;;;;;;;;;;;;;;-1:-1:-1;;;5085:158:5;;;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;5152:13:5;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;5176:17:5;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;5635:7:5;5204:13;:31;;;1821:7:3;:22;-1:-1:-1;835:24:7::1;846:12:::0;835:10:::1;:24::i;:::-;753:112:::0;290:3684;;640:96:4;719:10;;640:96::o;2433:187:2:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;2596:98:7:-;1094:13:2;:11;:13::i;:::-;2667:21:7;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2596:98:::0;:::o;1359:130:2:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:2;719:10:4;1422:23:2;1414:68;;;;-1:-1:-1;;;1414:68:2;;1440:2:8;1414:68:2;;;1422:21:8;;;1459:18;;;1452:30;1518:34;1498:18;;;1491:62;1570:18;;1414:68:2;;;;;;;;1359:130::o;290:3684:7:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;290:3684:7;;;-1:-1:-1;290:3684:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1087;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:8;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:8;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1131:2;1128:1;1125:9;1122:80;;;1190:1;1185:2;1180;1172:6;1168:15;1164:24;1157:35;1122:80;1221:6;146:1087;-1:-1:-1;;;;;;;;146:1087:8:o;1599:380::-;1678:1;1674:12;;;;1721;;;1742:61;;1796:4;1788:6;1784:17;1774:27;;1742:61;1849:2;1841:6;1838:14;1818:18;1815:38;1812:161;;;1895:10;1890:3;1886:20;1883:1;1876:31;1930:4;1927:1;1920:15;1958:4;1955:1;1948:15;1812:161;;1599:380;;;:::o;:::-;290:3684:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AllowlistLimit_3086": {
									"entryPoint": null,
									"id": 3086,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfers_2236": {
									"entryPoint": null,
									"id": 2236,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_3123": {
									"entryPoint": 5360,
									"id": 3123,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_2223": {
									"entryPoint": null,
									"id": 2223,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_2291": {
									"entryPoint": 5127,
									"id": 2291,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkOwner_1094": {
									"entryPoint": 4794,
									"id": 1094,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_exists_1975": {
									"entryPoint": 4884,
									"id": 1975,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_2797": {
									"entryPoint": null,
									"id": 2797,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_2008": {
									"entryPoint": null,
									"id": 2008,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_1989": {
									"entryPoint": null,
									"id": 1989,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_2387": {
									"entryPoint": 5857,
									"id": 2387,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_2840": {
									"entryPoint": null,
									"id": 2840,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1218": {
									"entryPoint": null,
									"id": 1218,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2830": {
									"entryPoint": null,
									"id": 2830,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_1837": {
									"entryPoint": null,
									"id": 1837,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_1827": {
									"entryPoint": null,
									"id": 1827,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_1761": {
									"entryPoint": 4924,
									"id": 1761,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_2561": {
									"entryPoint": 5532,
									"id": 2561,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeMint_2576": {
									"entryPoint": 5101,
									"id": 2576,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_1375": {
									"entryPoint": null,
									"id": 1375,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1151": {
									"entryPoint": 5021,
									"id": 1151,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addressMintedBalance_3100": {
									"entryPoint": null,
									"id": 3100,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowlistUsers_3354": {
									"entryPoint": 2816,
									"id": 3354,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowlist_3096": {
									"entryPoint": null,
									"id": 3096,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_1882": {
									"entryPoint": 1967,
									"id": 1882,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1448": {
									"entryPoint": 2949,
									"id": 1448,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@baseExtension_3077": {
									"entryPoint": 4085,
									"id": 3077,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cost_3080": {
									"entryPoint": null,
									"id": 3080,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getApproved_1905": {
									"entryPoint": 1899,
									"id": 1905,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isAllowlisted_3234": {
									"entryPoint": null,
									"id": 3234,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1949": {
									"entryPoint": null,
									"id": 1949,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_876": {
									"entryPoint": 5641,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxSupply_3083": {
									"entryPoint": null,
									"id": 3083,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_3222": {
									"entryPoint": 3063,
									"id": 3222,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_1571": {
									"entryPoint": 1753,
									"id": 1571,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@onlyAllowlisted_3092": {
									"entryPoint": null,
									"id": 3092,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOfTokenIds_3445": {
									"entryPoint": 4433,
									"id": 3445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ownerOf_1653": {
									"entryPoint": 2938,
									"id": 1653,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_1080": {
									"entryPoint": null,
									"id": 1080,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_3312": {
									"entryPoint": 1726,
									"id": 3312,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@paused_3089": {
									"entryPoint": null,
									"id": 3089,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeUsersFromAllowlist_3384": {
									"entryPoint": 2127,
									"id": 3384,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_1108": {
									"entryPoint": 3028,
									"id": 1108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2172": {
									"entryPoint": 2758,
									"id": 2172,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2210": {
									"entryPoint": 4011,
									"id": 2210,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1931": {
									"entryPoint": 3903,
									"id": 1931,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseExtension_3300": {
									"entryPoint": 4649,
									"id": 3300,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setBaseURI_3288": {
									"entryPoint": 2785,
									"id": 3288,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setOnlyAllowlisted_3324": {
									"entryPoint": 2254,
									"id": 3324,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1561": {
									"entryPoint": 1644,
									"id": 1561,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1581": {
									"entryPoint": 3048,
									"id": 1581,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_57": {
									"entryPoint": 5375,
									"id": 57,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_3276": {
									"entryPoint": 4227,
									"id": 3276,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1400": {
									"entryPoint": null,
									"id": 1400,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_2153": {
									"entryPoint": 2288,
									"id": 2153,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_1131": {
									"entryPoint": 4676,
									"id": 1131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_3464": {
									"entryPoint": 2689,
									"id": 3464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 6779,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 6308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 6580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 6329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 6450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7440,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7636,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a8b16c5698f793fadcf69c1a4b70bc053d8668181e11d673c774abfb93d1253__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48fda742698573100e179ae1b13bb17b7308f3fb873a40e607485d8ba281db03__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_59d04762fffc15004f9c80d7b6292c6e0fd9d298a8f76aac81112340e7ec504a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_97431681bf783971e6935af241e6bf6a0d8509ed0533483cd521a055744277a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bcbf221e1d785dfc11083f52adc69389d8ebd7c45bac276ecfbd15edf753070b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db7e8433bc66fe3dc25da0449b83dec916181efd3b63d1a0329faf71b04911a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 6406,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6757,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 6257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14462:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:8",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:8",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:8"
															},
															"nodeType": "YulIf",
															"src": "68:71:8"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:8",
														"type": ""
													}
												],
												"src": "14:131:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:8"
															},
															"nodeType": "YulIf",
															"src": "229:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:8",
														"type": ""
													}
												],
												"src": "150:245:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:8",
														"type": ""
													}
												],
												"src": "400:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:114:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "670:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "657:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "657:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "648:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "730:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "739:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "742:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "732:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "732:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "732:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "699:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "720:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "713:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "713:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "706:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "706:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "696:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "696:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "689:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "689:40:8"
															},
															"nodeType": "YulIf",
															"src": "686:60:8"
														}
													]
												},
												"name": "abi_decode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "617:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "628:5:8",
														"type": ""
													}
												],
												"src": "592:160:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "824:113:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "870:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "879:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "882:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "872:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "872:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "872:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "845:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "854:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "841:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "841:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "866:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "837:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:32:8"
															},
															"nodeType": "YulIf",
															"src": "834:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "895:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "921:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "905:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:26:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:8",
														"type": ""
													}
												],
												"src": "757:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "991:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1001:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1023:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1001:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1093:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1102:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1105:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1095:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1095:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1095:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1052:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1063:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1078:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1083:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1074:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1074:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1087:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1070:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1070:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1059:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1059:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1049:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1049:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1042:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1042:50:8"
															},
															"nodeType": "YulIf",
															"src": "1039:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "970:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "981:5:8",
														"type": ""
													}
												],
												"src": "942:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1190:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1236:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1245:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1248:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1238:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1238:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1238:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1211:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1220:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1207:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1207:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1232:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1203:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1203:32:8"
															},
															"nodeType": "YulIf",
															"src": "1200:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1261:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1290:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1271:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1271:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1261:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1156:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1167:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1179:6:8",
														"type": ""
													}
												],
												"src": "1120:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1364:205:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1374:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1383:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1378:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1443:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1468:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1473:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1464:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1464:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1487:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1492:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1483:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1483:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1477:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1477:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1457:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1404:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1407:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1401:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1401:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1415:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1417:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1426:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1429:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1422:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1422:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1417:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1397:3:8",
																"statements": []
															},
															"src": "1393:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1532:31:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1545:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1550:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1541:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1541:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1559:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1534:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1534:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1534:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1521:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1524:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1518:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:13:8"
															},
															"nodeType": "YulIf",
															"src": "1515:48:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1342:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1347:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1352:6:8",
														"type": ""
													}
												],
												"src": "1311:258:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1624:208:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1634:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1654:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1648:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1648:12:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1638:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1676:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1681:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1669:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1669:19:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1723:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1730:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1719:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1719:16:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1746:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1737:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1737:14:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1753:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1697:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1697:63:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1697:63:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1769:57:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1784:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1797:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1805:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1793:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1793:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1814:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1810:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1810:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1789:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1789:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1780:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1780:39:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1821:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1776:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1776:50:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1769:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1601:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1608:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1616:3:8",
														"type": ""
													}
												],
												"src": "1574:258:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1958:99:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1975:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1986:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1968:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1968:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1998:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2024:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2047:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2032:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2032:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2006:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2006:45:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1998:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1927:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1938:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1949:4:8",
														"type": ""
													}
												],
												"src": "1837:220:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2132:110:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2178:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2187:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2190:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2180:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2180:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2180:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2153:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2162:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2149:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2149:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2174:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2145:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2145:32:8"
															},
															"nodeType": "YulIf",
															"src": "2142:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2203:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2226:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2213:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2213:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2098:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2109:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2121:6:8",
														"type": ""
													}
												],
												"src": "2062:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2348:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2358:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2370:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2381:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2366:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2366:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2358:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2400:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2415:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2431:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2436:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2427:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2427:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2440:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2423:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2423:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2411:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2411:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2393:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2393:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2393:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2317:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2328:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2339:4:8",
														"type": ""
													}
												],
												"src": "2247:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2542:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2588:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2597:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2600:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2590:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2590:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2563:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2572:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2559:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2559:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2584:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2555:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2555:32:8"
															},
															"nodeType": "YulIf",
															"src": "2552:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2613:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2642:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2623:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2613:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2661:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2688:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2699:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2684:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2684:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2671:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2661:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2500:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2511:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2523:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2531:6:8",
														"type": ""
													}
												],
												"src": "2455:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2815:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2825:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2837:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2833:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2825:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2867:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2878:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2860:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2860:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2784:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2795:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2806:4:8",
														"type": ""
													}
												],
												"src": "2714:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3001:510:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3047:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3056:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3059:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3049:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3049:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3049:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3022:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3031:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3018:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3018:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3014:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:32:8"
															},
															"nodeType": "YulIf",
															"src": "3011:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3072:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3099:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3086:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3086:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3076:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3118:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3128:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3122:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3173:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3182:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3185:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3175:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3175:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3175:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3161:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3169:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3158:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:14:8"
															},
															"nodeType": "YulIf",
															"src": "3155:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3198:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3212:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3223:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3208:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3208:22:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3202:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3278:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3287:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3290:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3280:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3280:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3280:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3257:2:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3261:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3253:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3253:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3268:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3249:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3249:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3242:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3242:35:8"
															},
															"nodeType": "YulIf",
															"src": "3239:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3303:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3330:2:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3317:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3317:16:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3307:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3360:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3369:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3372:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3362:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3362:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3362:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3348:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3356:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3345:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3345:14:8"
															},
															"nodeType": "YulIf",
															"src": "3342:34:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3434:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3443:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3446:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3436:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3436:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3436:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3399:2:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3407:1:8",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3410:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3403:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3403:14:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3395:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3395:23:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3420:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3391:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3391:32:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3425:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3388:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3388:45:8"
															},
															"nodeType": "YulIf",
															"src": "3385:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3459:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3473:2:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3477:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3469:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:11:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3459:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3489:16:8",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "3499:6:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3489:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2959:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2970:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2982:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2990:6:8",
														"type": ""
													}
												],
												"src": "2896:615:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3620:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3666:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3675:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3678:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3668:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3668:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3668:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3641:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3650:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3637:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3637:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3662:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3633:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3633:32:8"
															},
															"nodeType": "YulIf",
															"src": "3630:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3691:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3720:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3701:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3691:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3739:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3772:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3783:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3768:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3768:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3749:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3739:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3796:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3823:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3834:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3819:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3819:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3806:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3806:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3796:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3570:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3581:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3593:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3601:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3609:6:8",
														"type": ""
													}
												],
												"src": "3516:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3881:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3905:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3910:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3901:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3891:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3891:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3891:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3938:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3941:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3931:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3931:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3931:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3962:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3965:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3955:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3955:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3849:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4056:557:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4066:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4076:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4070:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4121:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4123:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4123:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4123:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4109:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4117:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4106:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4106:14:8"
															},
															"nodeType": "YulIf",
															"src": "4103:40:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4152:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4166:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4162:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:7:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4156:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4178:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4198:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4192:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4182:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4210:73:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4232:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nodeType": "YulIdentifier",
																										"src": "4256:6:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4264:2:8",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4252:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4252:15:8"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "4269:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4248:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4248:24:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4274:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4244:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4244:33:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4279:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4240:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4240:42:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4228:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4228:55:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4214:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4342:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4344:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4344:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4344:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4301:10:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4313:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4298:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4298:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4321:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4333:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4318:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4318:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4295:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4295:46:8"
															},
															"nodeType": "YulIf",
															"src": "4292:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4380:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4384:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4373:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4373:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4373:22:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4404:15:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4413:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4404:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4435:6:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4443:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4428:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4428:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4428:22:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4488:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4497:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4500:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4490:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4490:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4490:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4469:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4474:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4465:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4465:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4483:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4462:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4462:25:8"
															},
															"nodeType": "YulIf",
															"src": "4459:45:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4530:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4538:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4526:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4526:17:8"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4545:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4550:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4513:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4513:44:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4513:44:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4581:6:8"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4589:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4577:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4577:19:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4598:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4573:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4573:30:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4605:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4566:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4566:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4566:41:8"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4025:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4030:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4038:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4046:5:8",
														"type": ""
													}
												],
												"src": "3981:632:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4698:371:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4744:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4753:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4756:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4746:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4746:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4746:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4719:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4728:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4715:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4711:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4711:32:8"
															},
															"nodeType": "YulIf",
															"src": "4708:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4769:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4796:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4783:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4783:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4773:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4849:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4858:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4861:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4851:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4851:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4851:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4821:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4829:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4818:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4818:30:8"
															},
															"nodeType": "YulIf",
															"src": "4815:50:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4874:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4888:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4899:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4884:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4884:22:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4878:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4954:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4963:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4966:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4956:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4956:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4956:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4933:2:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4937:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4929:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4929:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4944:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4925:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4925:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4918:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4918:35:8"
															},
															"nodeType": "YulIf",
															"src": "4915:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4979:84:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5028:2:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5032:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5024:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5024:11:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5050:2:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5037:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5037:16:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5055:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "4989:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4989:74:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4979:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4664:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4675:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4687:6:8",
														"type": ""
													}
												],
												"src": "4618:451:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5158:170:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5204:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5213:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5216:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5206:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5206:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5206:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5179:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5188:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5175:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5175:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5171:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:32:8"
															},
															"nodeType": "YulIf",
															"src": "5168:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5229:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5258:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5239:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5239:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5229:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5277:45:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5307:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5318:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5303:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5303:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5287:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5287:35:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5277:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5116:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5127:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5139:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5147:6:8",
														"type": ""
													}
												],
												"src": "5074:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5463:537:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5510:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5519:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5522:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5512:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5512:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5512:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5493:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5480:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5480:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5505:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5476:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5476:33:8"
															},
															"nodeType": "YulIf",
															"src": "5473:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5535:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5564:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5545:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5545:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5535:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5583:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5616:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5627:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5612:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5612:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5593:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5593:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5583:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5640:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5667:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5678:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5663:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5650:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5650:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5640:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5691:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5722:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5733:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5718:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5718:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5705:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5705:32:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5695:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5780:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5789:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5792:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5782:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5782:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5782:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5752:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5760:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5749:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5749:30:8"
															},
															"nodeType": "YulIf",
															"src": "5746:50:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5805:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5819:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5830:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5815:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5815:22:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5809:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5885:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5894:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5897:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5887:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5887:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5887:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "5864:2:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5868:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5860:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5860:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5875:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5856:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5856:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5849:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5849:35:8"
															},
															"nodeType": "YulIf",
															"src": "5846:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5910:84:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5959:2:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5963:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5955:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5955:11:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5981:2:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5968:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5968:16:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5986:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "5920:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5920:74:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5910:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5405:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5416:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5428:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5436:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5444:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5452:6:8",
														"type": ""
													}
												],
												"src": "5333:667:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6156:481:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6166:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6176:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6170:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6187:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6205:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6216:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6201:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6201:18:8"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "6191:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6235:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6246:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6228:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6228:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6258:17:8",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "6269:6:8"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "6262:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6284:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6304:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6298:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6298:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6288:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "6327:6:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6335:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6320:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6320:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6320:22:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6351:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6362:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6373:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6358:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6358:18:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6351:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6385:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6403:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6411:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6399:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6399:15:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6389:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6423:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6432:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6427:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6491:120:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6512:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6523:6:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6517:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6517:13:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6505:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6505:26:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6505:26:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6544:19:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6555:3:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6560:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6551:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6551:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6544:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6576:25:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6590:6:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6598:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6586:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6586:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6576:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6453:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6456:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6450:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6450:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6464:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6466:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6475:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6478:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6471:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6471:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6466:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6446:3:8",
																"statements": []
															},
															"src": "6442:169:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6620:11:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6628:3:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6620:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6125:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6136:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6147:4:8",
														"type": ""
													}
												],
												"src": "6005:632:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6729:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6775:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6784:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6787:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6777:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6777:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6777:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6750:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6759:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6746:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6746:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6771:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6742:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6742:32:8"
															},
															"nodeType": "YulIf",
															"src": "6739:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6800:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6829:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6810:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6810:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6800:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6848:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6881:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6892:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6877:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6877:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6858:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6858:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6848:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6687:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6698:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6710:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6718:6:8",
														"type": ""
													}
												],
												"src": "6642:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6962:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6972:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6986:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6989:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6982:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6982:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6972:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7003:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7033:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7039:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7029:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7029:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7007:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7080:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7082:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7096:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7104:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7092:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7092:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7082:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7060:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7053:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7053:26:8"
															},
															"nodeType": "YulIf",
															"src": "7050:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7170:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7191:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7198:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7203:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7194:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7194:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7184:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7184:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7184:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7235:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7238:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7228:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7228:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7228:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7263:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7266:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7256:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7256:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7256:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7126:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7149:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7146:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7146:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7123:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7123:38:8"
															},
															"nodeType": "YulIf",
															"src": "7120:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6942:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6951:6:8",
														"type": ""
													}
												],
												"src": "6907:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7324:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7341:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7348:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7353:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7344:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7344:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7334:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7334:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7334:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7381:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7384:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7374:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7374:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7374:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7405:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7408:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7398:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7398:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7398:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "7292:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7456:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7473:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7480:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7485:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7476:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7476:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7466:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7466:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7466:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7513:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7516:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7506:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7506:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7506:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7537:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7540:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7530:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7530:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7530:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7424:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7603:88:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7634:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7636:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7636:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7636:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7619:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7630:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7626:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7626:6:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7616:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7616:17:8"
															},
															"nodeType": "YulIf",
															"src": "7613:43:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7665:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7676:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7683:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7672:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7672:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7665:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7585:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7595:3:8",
														"type": ""
													}
												],
												"src": "7556:135:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7870:325:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7887:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7898:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7880:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7880:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7880:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7921:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7932:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7917:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7917:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7937:2:8",
																		"type": "",
																		"value": "95"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7910:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7910:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7910:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7960:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7971:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7956:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7956:18:8"
																	},
																	{
																		"hexValue": "574f414820686f6c6420757020746865206d696e74206973206e6f7420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7976:34:8",
																		"type": "",
																		"value": "WOAH hold up the mint is not yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7949:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7949:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7949:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8031:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8042:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8027:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8027:18:8"
																	},
																	{
																		"hexValue": "206c6976652c2061206c6974746c6520746f6f206561726c792074686572652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8047:34:8",
																		"type": "",
																		"value": " live, a little too early there."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8020:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8020:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8020:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8102:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8113:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8098:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8098:19:8"
																	},
																	{
																		"hexValue": "2e2e206f72206c6174653f205472616e736d697373696f6e20456e64696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8119:33:8",
																		"type": "",
																		"value": ".. or late? Transmission Ending"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8091:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8091:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8091:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8162:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8174:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8185:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8170:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8170:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8162:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_59d04762fffc15004f9c80d7b6292c6e0fd9d298a8f76aac81112340e7ec504a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7847:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7861:4:8",
														"type": ""
													}
												],
												"src": "7696:499:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8374:253:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8391:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8402:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8384:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8384:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8384:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8425:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8436:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8421:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8421:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8441:2:8",
																		"type": "",
																		"value": "63"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8414:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8414:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8464:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8475:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8460:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8460:18:8"
																	},
																	{
																		"hexValue": "6d757374206d696e74206174206c656173742031206e66742c2030206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8480:34:8",
																		"type": "",
																		"value": "must mint at least 1 nft, 0 is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8453:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8453:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8453:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8535:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8546:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8531:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8531:18:8"
																	},
																	{
																		"hexValue": "6f7420616c6c6f7765642e205472616e736d697373696f6e20456e64696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8551:33:8",
																		"type": "",
																		"value": "ot allowed. Transmission Ending"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8524:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8524:61:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8524:61:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8594:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8606:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8617:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8602:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8602:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8594:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48fda742698573100e179ae1b13bb17b7308f3fb873a40e607485d8ba281db03__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8351:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8365:4:8",
														"type": ""
													}
												],
												"src": "8200:427:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8680:80:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8707:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8709:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8709:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8709:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8696:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8703:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8699:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8699:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8693:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8693:13:8"
															},
															"nodeType": "YulIf",
															"src": "8690:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8738:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8749:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8752:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8745:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8745:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8738:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8663:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8666:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8672:3:8",
														"type": ""
													}
												],
												"src": "8632:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8939:243:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8956:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8967:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8949:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8949:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8949:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8990:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9001:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8986:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8986:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9006:2:8",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8979:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8979:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8979:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9029:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9040:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9025:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9025:18:8"
																	},
																	{
																		"hexValue": "6c6f6f6b73206c696b652077652061726520706f70756c6172206d6178207375",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9045:34:8",
																		"type": "",
																		"value": "looks like we are popular max su"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9018:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9018:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9018:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9100:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9111:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9096:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9096:18:8"
																	},
																	{
																		"hexValue": "70706c7920686173206265656e2072656163686564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9116:23:8",
																		"type": "",
																		"value": "pply has been reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9089:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9089:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9089:51:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9149:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9161:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9172:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9157:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9157:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9149:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_97431681bf783971e6935af241e6bf6a0d8509ed0533483cd521a055744277a0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8916:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8930:4:8",
														"type": ""
													}
												],
												"src": "8765:417:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9361:170:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9378:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9389:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9371:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9371:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9371:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9412:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9423:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9408:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9408:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9428:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9401:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9401:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9401:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9451:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9462:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9447:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9447:18:8"
																	},
																	{
																		"hexValue": "6f6e6c79203120617420612074696d65203a2920",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9467:22:8",
																		"type": "",
																		"value": "only 1 at a time :) "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9440:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9440:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9440:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9499:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9511:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9522:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9507:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9507:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9499:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db7e8433bc66fe3dc25da0449b83dec916181efd3b63d1a0329faf71b04911a0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9338:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9352:4:8",
														"type": ""
													}
												],
												"src": "9187:344:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9710:165:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9727:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9738:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9720:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9720:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9720:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9761:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9772:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9757:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9757:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9777:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9750:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9750:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9750:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9800:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9811:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9796:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9796:18:8"
																	},
																	{
																		"hexValue": "4e6f7420416c6c6f776c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9816:17:8",
																		"type": "",
																		"value": "Not Allowlisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9789:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9789:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9789:45:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9843:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9855:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9866:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9851:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9851:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9843:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bcbf221e1d785dfc11083f52adc69389d8ebd7c45bac276ecfbd15edf753070b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9687:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9701:4:8",
														"type": ""
													}
												],
												"src": "9536:339:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10054:164:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10071:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10082:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10064:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10064:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10064:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10105:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10116:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10101:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10101:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10121:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10094:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10094:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10094:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10144:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10155:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10140:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10140:18:8"
																	},
																	{
																		"hexValue": "416c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10160:16:8",
																		"type": "",
																		"value": "Already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10133:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10133:44:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10133:44:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10186:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10198:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10209:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10194:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10194:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10186:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10031:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10045:4:8",
														"type": ""
													}
												],
												"src": "9880:338:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10275:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10334:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10336:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10336:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10336:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10306:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10299:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10299:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10292:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10292:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10314:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10325:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "10321:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10321:6:8"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10329:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10317:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10317:14:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10311:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10311:21:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10288:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10288:45:8"
															},
															"nodeType": "YulIf",
															"src": "10285:71:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10365:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10380:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10383:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10376:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10376:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10365:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10254:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10257:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10263:7:8",
														"type": ""
													}
												],
												"src": "10223:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10570:168:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10587:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10598:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10580:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10580:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10580:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10621:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10632:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10617:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10617:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10610:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10610:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10610:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10660:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10671:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10656:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10656:18:8"
																	},
																	{
																		"hexValue": "436f737420646f65736e2774206d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10676:20:8",
																		"type": "",
																		"value": "Cost doesn't match"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10649:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10706:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10718:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10729:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10714:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10714:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10706:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a8b16c5698f793fadcf69c1a4b70bc053d8668181e11d673c774abfb93d1253__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10547:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10561:4:8",
														"type": ""
													}
												],
												"src": "10396:342:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10917:237:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10934:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10945:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10927:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10927:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10927:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10968:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10979:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10964:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10964:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10984:2:8",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10957:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10957:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10957:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11007:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11018:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11003:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11003:18:8"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11023:34:8",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10996:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10996:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10996:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11078:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11089:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11074:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11074:18:8"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11094:17:8",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11067:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11067:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11067:45:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11121:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11133:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11144:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11129:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11129:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11121:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10894:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10908:4:8",
														"type": ""
													}
												],
												"src": "10743:411:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11215:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11232:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "11235:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11225:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11225:14:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11225:14:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11248:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11266:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11269:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "11256:9:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11256:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "11248:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "11198:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11206:4:8",
														"type": ""
													}
												],
												"src": "11159:121:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11517:1295:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11527:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11547:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11541:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11541:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11531:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11563:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11573:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11567:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11612:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11620:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11608:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11608:15:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11625:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11630:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11586:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11586:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11586:51:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11646:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11663:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11668:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11659:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11659:16:8"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "11650:5:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11684:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11706:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11700:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11700:13:8"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "11688:8:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11748:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11756:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11744:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11744:15:8"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "11761:5:8"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "11768:8:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11722:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11722:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11722:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11786:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "11803:5:8"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "11810:8:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11799:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11799:20:8"
															},
															"variables": [
																{
																	"name": "end_2",
																	"nodeType": "YulTypedName",
																	"src": "11790:5:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11828:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11839:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "11832:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11849:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11872:6:8"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "11866:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11866:13:8"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "11853:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11888:19:8",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "11904:3:8"
															},
															"variables": [
																{
																	"name": "length_2",
																	"nodeType": "YulTypedName",
																	"src": "11892:8:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11916:11:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11926:1:8",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "11920:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11936:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "11952:2:8"
																	},
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "11956:9:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "11948:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11948:18:8"
															},
															"variableNames": [
																{
																	"name": "length_2",
																	"nodeType": "YulIdentifier",
																	"src": "11936:8:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11975:44:8",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "12005:9:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "12016:2:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12001:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12001:18:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11979:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12066:55:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12080:31:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length_2",
																					"nodeType": "YulIdentifier",
																					"src": "12096:8:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12106:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12092:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12092:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "length_2",
																				"nodeType": "YulIdentifier",
																				"src": "12080:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12038:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12031:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12031:26:8"
															},
															"nodeType": "YulIf",
															"src": "12028:93:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12182:115:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "12203:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12212:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12217:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12208:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12208:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12196:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12196:33:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12196:33:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12249:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12252:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12242:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12242:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12242:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "12277:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12282:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12270:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12270:17:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12270:17:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12136:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length_2",
																				"nodeType": "YulIdentifier",
																				"src": "12159:8:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12169:2:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12156:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12156:16:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12133:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12133:40:8"
															},
															"nodeType": "YulIf",
															"src": "12130:167:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12347:103:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "end_2",
																							"nodeType": "YulIdentifier",
																							"src": "12368:5:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "12379:9:8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "12394:3:8",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "12390:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12390:8:8"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "12375:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12375:24:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "12361:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12361:39:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12361:39:8"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "12413:27:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "end_2",
																							"nodeType": "YulIdentifier",
																							"src": "12424:5:8"
																						},
																						{
																							"name": "length_2",
																							"nodeType": "YulIdentifier",
																							"src": "12431:8:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12420:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12420:20:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "12413:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "12340:110:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12345:1:8",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12466:321:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12480:52:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "value2",
																							"nodeType": "YulIdentifier",
																							"src": "12525:6:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "12495:29:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12495:37:8"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "12484:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12545:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12554:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "12549:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12624:113:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "end_2",
																												"nodeType": "YulIdentifier",
																												"src": "12653:5:8"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "12660:1:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "12649:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12649:13:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "12670:7:8"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "12664:5:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12664:14:8"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "12642:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12642:37:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "12642:37:8"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "12696:27:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "12711:7:8"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "12720:2:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12707:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12707:16:8"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "12696:7:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12579:1:8"
																						},
																						{
																							"name": "length_2",
																							"nodeType": "YulIdentifier",
																							"src": "12582:8:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "12576:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12576:15:8"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "12592:19:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "12594:15:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "12603:1:8"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "12606:2:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12599:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12599:10:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12594:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "12572:3:8",
																					"statements": []
																				},
																				"src": "12568:169:8"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "12750:27:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "end_2",
																							"nodeType": "YulIdentifier",
																							"src": "12761:5:8"
																						},
																						{
																							"name": "length_2",
																							"nodeType": "YulIdentifier",
																							"src": "12768:8:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12757:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12757:20:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "12750:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "12459:328:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12464:1:8",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"name": "outOfPlaceEncoding",
																"nodeType": "YulIdentifier",
																"src": "12313:18:8"
															},
															"nodeType": "YulSwitch",
															"src": "12306:481:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12796:10:8",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "12803:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12796:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11477:3:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11482:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11490:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11498:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11509:3:8",
														"type": ""
													}
												],
												"src": "11285:1527:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12991:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13008:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13019:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13001:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13001:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13001:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13042:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13053:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13038:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13038:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13058:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13031:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13031:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13031:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13081:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13092:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13077:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13077:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13097:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13070:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13070:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13070:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13152:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13163:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13148:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13148:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13168:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13141:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13141:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13141:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13186:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13198:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13209:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13194:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13194:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13186:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12968:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12982:4:8",
														"type": ""
													}
												],
												"src": "12817:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13398:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13415:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13426:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13408:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13408:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13408:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13449:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13460:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13445:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13445:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13465:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13438:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13438:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13438:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13488:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13499:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13484:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13484:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13504:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13477:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13477:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13477:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13548:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13560:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13571:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13556:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13556:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13548:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13375:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13389:4:8",
														"type": ""
													}
												],
												"src": "13224:356:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13788:286:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13798:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13816:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13821:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13812:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13812:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13825:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13808:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13808:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13802:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13843:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13858:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13866:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13854:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13854:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13836:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13836:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13836:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13890:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13901:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13886:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13886:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13910:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13918:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13906:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13906:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13879:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13879:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13879:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13942:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13953:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13938:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13938:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13958:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13931:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13931:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13931:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13985:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13996:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13981:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13981:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14001:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13974:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13974:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13974:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14014:54:8",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14040:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14052:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14063:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14048:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14048:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "14022:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14022:46:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14014:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13733:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13744:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13752:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13760:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13768:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13779:4:8",
														"type": ""
													}
												],
												"src": "13585:489:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14159:169:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14205:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14214:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14217:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14207:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14207:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14207:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14180:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14189:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14176:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14176:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14201:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14172:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14172:32:8"
															},
															"nodeType": "YulIf",
															"src": "14169:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14230:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14249:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14243:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14243:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "14234:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14292:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14268:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14268:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14268:30:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14307:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14317:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14307:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14125:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14136:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14148:6:8",
														"type": ""
													}
												],
												"src": "14079:249:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14365:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14382:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14389:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14394:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14385:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14385:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14375:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14375:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14375:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14422:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14425:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14415:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14415:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14415:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14446:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14449:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14439:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14439:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14439:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "14333:127:8"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_59d04762fffc15004f9c80d7b6292c6e0fd9d298a8f76aac81112340e7ec504a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 95)\n        mstore(add(headStart, 64), \"WOAH hold up the mint is not yet\")\n        mstore(add(headStart, 96), \" live, a little too early there.\")\n        mstore(add(headStart, 128), \".. or late? Transmission Ending\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_48fda742698573100e179ae1b13bb17b7308f3fb873a40e607485d8ba281db03__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"must mint at least 1 nft, 0 is n\")\n        mstore(add(headStart, 96), \"ot allowed. Transmission Ending\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_97431681bf783971e6935af241e6bf6a0d8509ed0533483cd521a055744277a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"looks like we are popular max su\")\n        mstore(add(headStart, 96), \"pply has been reached\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_db7e8433bc66fe3dc25da0449b83dec916181efd3b63d1a0329faf71b04911a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"only 1 at a time :) \")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bcbf221e1d785dfc11083f52adc69389d8ebd7c45bac276ecfbd15edf753070b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Not Allowlisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Already minted\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_2a8b16c5698f793fadcf69c1a4b70bc053d8668181e11d673c774abfb93d1253__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Cost doesn't match\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let length := mload(value0)\n        let _1 := 0x20\n        copy_memory_to_memory(add(value0, _1), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, _1), end_1, length_1)\n        let end_2 := add(end_1, length_1)\n        let ret := 0\n        let slotValue := sload(value2)\n        let length_2 := ret\n        let _2 := 1\n        length_2 := shr(_2, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _2)\n        if iszero(outOfPlaceEncoding)\n        {\n            length_2 := and(length_2, 0x7f)\n        }\n        if eq(outOfPlaceEncoding, lt(length_2, _1))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(end_2, and(slotValue, not(255)))\n            ret := add(end_2, length_2)\n        }\n        case 1 {\n            let dataPos := array_dataslot_string_storage(value2)\n            let i := 0\n            for { } lt(i, length_2) { i := add(i, _1) }\n            {\n                mstore(add(end_2, i), sload(dataPos))\n                dataPos := add(dataPos, _2)\n            }\n            ret := add(end_2, length_2)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106102045760003560e01c80636352211e11610118578063b3807b1d116100a0578063ca8a7d5e1161006f578063ca8a7d5e146105a0578063d5abeb01146105cd578063da3ef23f146105e3578063e985e9c514610603578063f2fde38b1461064c57600080fd5b8063b3807b1d14610542578063b88d4fde14610558578063c66828621461056b578063c87b56dd1461058057600080fd5b80638da5cb5b116100e75780638da5cb5b146104ac57806395d89b41146104ca578063a0712d68146104df578063a22cb465146104f2578063a7cd52cb1461051257600080fd5b80636352211e14610438578063674c02aa1461045857806370a0823114610477578063715018a61461049757600080fd5b806317dc10c41161019b5780633ccfd60b1161016a5780633ccfd60b146103c357806342842e0e146103cb57806355f804b3146103de5780635b9e3ccf146103fe5780635c975abb1461041e57600080fd5b806317dc10c41461034a57806318160ddd1461036a57806318cae2691461038357806323b872dd146103b057600080fd5b8063081812fc116101d7578063081812fc146102bb578063095ea7b3146102f357806313faede614610306578063142b0fbe1461032a57600080fd5b806301ffc9a71461020957806302329a291461023e57806305a3b8091461026057806306fdde0314610299575b600080fd5b34801561021557600080fd5b50610229610224366004611887565b61066c565b60405190151581526020015b60405180910390f35b34801561024a57600080fd5b5061025e6102593660046118b9565b6106be565b005b34801561026c57600080fd5b5061022961027b3660046118eb565b6001600160a01b031660009081526010602052604090205460ff1690565b3480156102a557600080fd5b506102ae6106d9565b604051610235919061195e565b3480156102c757600080fd5b506102db6102d6366004611971565b61076b565b6040516001600160a01b039091168152602001610235565b61025e61030136600461198a565b6107af565b34801561031257600080fd5b5061031c600c5481565b604051908152602001610235565b34801561033657600080fd5b5061025e6103453660046119b4565b61084f565b34801561035657600080fd5b5061025e6103653660046118b9565b6108ce565b34801561037657600080fd5b506002546001540361031c565b34801561038f57600080fd5b5061031c61039e3660046118eb565b60116020526000908152604090205481565b61025e6103be366004611a29565b6108f0565b61025e610a81565b61025e6103d9366004611a29565b610ac6565b3480156103ea57600080fd5b5061025e6103f9366004611af1565b610ae1565b34801561040a57600080fd5b5061025e6104193660046119b4565b610b00565b34801561042a57600080fd5b50600f546102299060ff1681565b34801561044457600080fd5b506102db610453366004611971565b610b7a565b34801561046457600080fd5b50600f5461022990610100900460ff1681565b34801561048357600080fd5b5061031c6104923660046118eb565b610b85565b3480156104a357600080fd5b5061025e610bd4565b3480156104b857600080fd5b506000546001600160a01b03166102db565b3480156104d657600080fd5b506102ae610be8565b61025e6104ed366004611971565b610bf7565b3480156104fe57600080fd5b5061025e61050d366004611b3a565b610f3f565b34801561051e57600080fd5b5061022961052d3660046118eb565b60106020526000908152604090205460ff1681565b34801561054e57600080fd5b5061031c600e5481565b61025e610566366004611b6d565b610fab565b34801561057757600080fd5b506102ae610ff5565b34801561058c57600080fd5b506102ae61059b366004611971565b611083565b3480156105ac57600080fd5b506105c06105bb3660046118eb565b611151565b6040516102359190611be9565b3480156105d957600080fd5b5061031c600d5481565b3480156105ef57600080fd5b5061025e6105fe366004611af1565b611229565b34801561060f57600080fd5b5061022961061e366004611c2d565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205460ff1690565b34801561065857600080fd5b5061025e6106673660046118eb565b611244565b60006301ffc9a760e01b6001600160e01b03198316148061069d57506380ac58cd60e01b6001600160e01b03198316145b806106b85750635b5e139f60e01b6001600160e01b03198316145b92915050565b6106c66112ba565b600f805460ff1916911515919091179055565b6060600380546106e890611c57565b80601f016020809104026020016040519081016040528092919081815260200182805461071490611c57565b80156107615780601f1061073657610100808354040283529160200191610761565b820191906000526020600020905b81548152906001019060200180831161074457829003601f168201915b5050505050905090565b600061077682611314565b610793576040516333d1c03960e21b815260040160405180910390fd5b506000908152600760205260409020546001600160a01b031690565b60006107ba82610b7a565b9050336001600160a01b038216146107f3576107d6813361061e565b6107f3576040516367d9dca160e11b815260040160405180910390fd5b60008281526007602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6108576112ba565b60005b818110156108c95760006010600085858581811061087a5761087a611c92565b905060200201602081019061088f91906118eb565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806108c181611cbe565b91505061085a565b505050565b6108d66112ba565b600f80549115156101000261ff0019909216919091179055565b60006108fb8261133c565b9050836001600160a01b0316816001600160a01b03161461092e5760405162a1148160e81b815260040160405180910390fd5b60008281526007602052604090208054338082146001600160a01b0388169091141761097b5761095e863361061e565b61097b57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166109a257604051633a954ecd60e21b815260040160405180910390fd5b80156109ad57600082555b6001600160a01b038681166000908152600660205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260056020526040902055600160e11b8316610a385760018401600081815260056020526040902054610a36576001548114610a365760008181526005602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b610a896112ba565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610ac3573d6000803e3d6000fd5b50565b6108c983838360405180602001604052806000815250610fab565b610ae96112ba565b8051610afc90600a9060208401906117d8565b5050565b610b086112ba565b60005b818110156108c957600160106000858585818110610b2b57610b2b611c92565b9050602002016020810190610b4091906118eb565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905580610b7281611cbe565b915050610b0b565b60006106b88261133c565b60006001600160a01b038216610bae576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526006602052604090205467ffffffffffffffff1690565b610bdc6112ba565b610be6600061139d565b565b6060600480546106e890611c57565b6000610c066002546001540390565b600f5490915060ff1615610cad5760405162461bcd60e51b815260206004820152605f60248201527f574f414820686f6c6420757020746865206d696e74206973206e6f742079657460448201527f206c6976652c2061206c6974746c6520746f6f206561726c792074686572652e60648201527f2e2e206f72206c6174653f205472616e736d697373696f6e20456e64696e6700608482015260a4015b60405180910390fd5b60008211610d235760405162461bcd60e51b815260206004820152603f60248201527f6d757374206d696e74206174206c656173742031206e66742c2030206973206e60448201527f6f7420616c6c6f7765642e205472616e736d697373696f6e20456e64696e67006064820152608401610ca4565b600d54610d308383611cd9565b1115610d9c5760405162461bcd60e51b815260206004820152603560248201527f6c6f6f6b73206c696b652077652061726520706f70756c6172206d61782073756044820152741c1c1b1e481a185cc81899595b881c995858da1959605a1b6064820152608401610ca4565b6000546001600160a01b03163314610f0d576001821115610df65760405162461bcd60e51b8152602060048201526014602482015273037b7363c90189030ba1030903a34b6b2901d14960651b6044820152606401610ca4565b600f5460ff61010090910416151560011415610ebb573360009081526010602052604090205460ff16610e5d5760405162461bcd60e51b815260206004820152600f60248201526e139bdd08105b1b1bdddb1a5cdd1959608a1b6044820152606401610ca4565b33600090815260116020526040902054600e54610e7a8483611cd9565b1115610eb95760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e481b5a5b9d195960921b6044820152606401610ca4565b505b81600c54610ec99190611cf1565b341015610f0d5760405162461bcd60e51b8152602060048201526012602482015271086dee6e840c8decae6dc4ee840dac2e8c6d60731b6044820152606401610ca4565b610f1733836113ed565b3360009081526011602052604081208054849290610f36908490611cd9565b90915550505050565b3360008181526008602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610fb68484846108f0565b6001600160a01b0383163b15610fef57610fd284848484611407565b610fef576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b600b805461100290611c57565b80601f016020809104026020016040519081016040528092919081815260200182805461102e90611c57565b801561107b5780601f106110505761010080835404028352916020019161107b565b820191906000526020600020905b81548152906001019060200180831161105e57829003601f168201915b505050505081565b606061108e82611314565b6110f25760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610ca4565b60006110fc6114f0565b9050600081511161111c576040518060200160405280600081525061114a565b80611126846114ff565b600b60405160200161113a93929190611d10565b6040516020818303038152906040525b9392505050565b606060006111626002546001540390565b9050600061116f84610b85565b67ffffffffffffffff81111561118757611187611a65565b6040519080825280602002602001820160405280156111b0578160200160208202803683370190505b5090506000805b8381101561121f57856001600160a01b03166111d282610b7a565b6001600160a01b0316141561120d57808383815181106111f4576111f4611c92565b60209081029190910101528161120981611cbe565b9250505b8061121781611cbe565b9150506111b7565b5090949350505050565b6112316112ba565b8051610afc90600b9060208401906117d8565b61124c6112ba565b6001600160a01b0381166112b15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ca4565b610ac38161139d565b6000546001600160a01b03163314610be65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ca4565b6000600154821080156106b8575050600090815260056020526040902054600160e01b161590565b60008160015481101561138457600081815260056020526040902054600160e01b8116611382575b8061114a575060001901600081815260056020526040902054611364565b505b604051636f96cda160e11b815260040160405180910390fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610afc82826040518060200160405280600081525061159c565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061143c903390899088908890600401611dd4565b6020604051808303816000875af1925050508015611477575060408051601f3d908101601f1916820190925261147491810190611e11565b60015b6114d2573d8080156114a5576040519150601f19603f3d011682016040523d82523d6000602084013e6114aa565b606091505b5080516114ca576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600a80546106e890611c57565b6060600061150c83611609565b600101905060008167ffffffffffffffff81111561152c5761152c611a65565b6040519080825280601f01601f191660200182016040528015611556576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461158f57611594565b611560565b509392505050565b6115a683836116e1565b6001600160a01b0383163b156108c9576001548281035b6115d06000868380600101945086611407565b6115ed576040516368d2bf6b60e11b815260040160405180910390fd5b8181106115bd57816001541461160257600080fd5b5050505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106116485772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611674576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061169257662386f26fc10000830492506010015b6305f5e10083106116aa576305f5e100830492506008015b61271083106116be57612710830492506004015b606483106116d0576064830492506002015b600a83106106b85760010192915050565b600154816117025760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526006602090815260408083208054680100000000000000018802019055848352600590915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b8181146117b157808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101611779565b50816117cf57604051622e076360e81b815260040160405180910390fd5b60015550505050565b8280546117e490611c57565b90600052602060002090601f016020900481019282611806576000855561184c565b82601f1061181f57805160ff191683800117855561184c565b8280016001018555821561184c579182015b8281111561184c578251825591602001919060010190611831565b5061185892915061185c565b5090565b5b80821115611858576000815560010161185d565b6001600160e01b031981168114610ac357600080fd5b60006020828403121561189957600080fd5b813561114a81611871565b803580151581146118b457600080fd5b919050565b6000602082840312156118cb57600080fd5b61114a826118a4565b80356001600160a01b03811681146118b457600080fd5b6000602082840312156118fd57600080fd5b61114a826118d4565b60005b83811015611921578181015183820152602001611909565b83811115610fef5750506000910152565b6000815180845261194a816020860160208601611906565b601f01601f19169290920160200192915050565b60208152600061114a6020830184611932565b60006020828403121561198357600080fd5b5035919050565b6000806040838503121561199d57600080fd5b6119a6836118d4565b946020939093013593505050565b600080602083850312156119c757600080fd5b823567ffffffffffffffff808211156119df57600080fd5b818501915085601f8301126119f357600080fd5b813581811115611a0257600080fd5b8660208260051b8501011115611a1757600080fd5b60209290920196919550909350505050565b600080600060608486031215611a3e57600080fd5b611a47846118d4565b9250611a55602085016118d4565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611a9657611a96611a65565b604051601f8501601f19908116603f01168101908282118183101715611abe57611abe611a65565b81604052809350858152868686011115611ad757600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611b0357600080fd5b813567ffffffffffffffff811115611b1a57600080fd5b8201601f81018413611b2b57600080fd5b6114e884823560208401611a7b565b60008060408385031215611b4d57600080fd5b611b56836118d4565b9150611b64602084016118a4565b90509250929050565b60008060008060808587031215611b8357600080fd5b611b8c856118d4565b9350611b9a602086016118d4565b925060408501359150606085013567ffffffffffffffff811115611bbd57600080fd5b8501601f81018713611bce57600080fd5b611bdd87823560208401611a7b565b91505092959194509250565b6020808252825182820181905260009190848201906040850190845b81811015611c2157835183529284019291840191600101611c05565b50909695505050505050565b60008060408385031215611c4057600080fd5b611c49836118d4565b9150611b64602084016118d4565b600181811c90821680611c6b57607f821691505b60208210811415611c8c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611cd257611cd2611ca8565b5060010190565b60008219821115611cec57611cec611ca8565b500190565b6000816000190483118215151615611d0b57611d0b611ca8565b500290565b600084516020611d238285838a01611906565b855191840191611d368184848a01611906565b8554920191600090600181811c9080831680611d5357607f831692505b858310811415611d7157634e487b7160e01b85526022600452602485fd5b808015611d855760018114611d9657611dc3565b60ff19851688528388019550611dc3565b60008b81526020902060005b85811015611dbb5781548a820152908401908801611da2565b505083880195505b50939b9a5050505050505050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e0790830184611932565b9695505050505050565b600060208284031215611e2357600080fd5b815161114a8161187156fea2646970667358221220626c7bfd313cc063457694610a70894c6722e8525ae223ed43ccbbe7e8e8ce8f64736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xB3807B1D GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xCA8A7D5E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCA8A7D5E EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x603 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3807B1D EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0xC6682862 EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4F2 JUMPI DUP1 PUSH4 0xA7CD52CB EQ PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x674C02AA EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17DC10C4 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x5B9E3CCF EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17DC10C4 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x18CAE269 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x13FAEDE6 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x142B0FBE EQ PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x2329A29 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x5A3B809 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x299 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x195E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1971 JUMP JUMPDEST PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x301 CALLDATASIZE PUSH1 0x4 PUSH2 0x198A JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B4 JUMP JUMPDEST PUSH2 0x84F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x8CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB PUSH2 0x31C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1A29 JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x25E PUSH2 0xA81 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A29 JUMP JUMPDEST PUSH2 0xAC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B4 JUMP JUMPDEST PUSH2 0xB00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x229 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x453 CALLDATASIZE PUSH1 0x4 PUSH2 0x1971 JUMP JUMPDEST PUSH2 0xB7A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x229 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0xB85 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0xBD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0xBE8 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x4ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1971 JUMP JUMPDEST PUSH2 0xBF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x50D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3A JUMP JUMPDEST PUSH2 0xF3F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x52D CALLDATASIZE PUSH1 0x4 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25E PUSH2 0x566 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6D JUMP JUMPDEST PUSH2 0xFAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0xFF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x1971 JUMP JUMPDEST PUSH2 0x1083 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C0 PUSH2 0x5BB CALLDATASIZE PUSH1 0x4 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x5FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF1 JUMP JUMPDEST PUSH2 0x1229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x61E CALLDATASIZE PUSH1 0x4 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0x667 CALLDATASIZE PUSH1 0x4 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x69D JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x6B8 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6C6 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6E8 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x714 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x761 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x736 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x761 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x744 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x776 DUP3 PUSH2 0x1314 JUMP JUMPDEST PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BA DUP3 PUSH2 0xB7A JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x7F3 JUMPI PUSH2 0x7D6 DUP2 CALLER PUSH2 0x61E JUMP JUMPDEST PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x857 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x87A JUMPI PUSH2 0x87A PUSH2 0x1C92 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x8C1 DUP2 PUSH2 0x1CBE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x85A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FB DUP3 PUSH2 0x133C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x97B JUMPI PUSH2 0x95E DUP7 CALLER PUSH2 0x61E JUMP JUMPDEST PUSH2 0x97B JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x9A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x9AD JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP4 AND PUSH2 0xA38 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA36 JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xA36 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA89 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8C9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xFAB JUMP JUMPDEST PUSH2 0xAE9 PUSH2 0x12BA JUMP JUMPDEST DUP1 MLOAD PUSH2 0xAFC SWAP1 PUSH1 0xA SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x17D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB08 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x1 PUSH1 0x10 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xB2B JUMPI PUSH2 0xB2B PUSH2 0x1C92 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0xB72 DUP2 PUSH2 0x1CBE JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B8 DUP3 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0xBDC PUSH2 0x12BA JUMP JUMPDEST PUSH2 0xBE6 PUSH1 0x0 PUSH2 0x139D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6E8 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC06 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x574F414820686F6C6420757020746865206D696E74206973206E6F7420796574 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206C6976652C2061206C6974746C6520746F6F206561726C792074686572652E PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x2E2E206F72206C6174653F205472616E736D697373696F6E20456E64696E6700 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xD23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D757374206D696E74206174206C656173742031206E66742C2030206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F7420616C6C6F7765642E205472616E736D697373696F6E20456E64696E6700 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0xD30 DUP4 DUP4 PUSH2 0x1CD9 JUMP JUMPDEST GT ISZERO PUSH2 0xD9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6F6F6B73206C696B652077652061726520706F70756C6172206D6178207375 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x1C1C1B1E481A185CC81899595B881C995858DA1959 PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF0D JUMPI PUSH1 0x1 DUP3 GT ISZERO PUSH2 0xDF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x37B7363C90189030BA1030903A34B6B2901D149 PUSH1 0x65 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0xEBB JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xE5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD08105B1B1BDDDB1A5CDD1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCA4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xE SLOAD PUSH2 0xE7A DUP5 DUP4 PUSH2 0x1CD9 JUMP JUMPDEST GT ISZERO PUSH2 0xEB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x105B1C9958591E481B5A5B9D1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCA4 JUMP JUMPDEST POP JUMPDEST DUP2 PUSH1 0xC SLOAD PUSH2 0xEC9 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x86DEE6E840C8DECAE6DC4EE840DAC2E8C6D PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0xF17 CALLER DUP4 PUSH2 0x13ED JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xF36 SWAP1 DUP5 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xFB6 DUP5 DUP5 DUP5 PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xFEF JUMPI PUSH2 0xFD2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x1002 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x102E SWAP1 PUSH2 0x1C57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x107B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1050 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x107B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x105E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x108E DUP3 PUSH2 0x1314 JUMP JUMPDEST PUSH2 0x10F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FC PUSH2 0x14F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x114A JUMP JUMPDEST DUP1 PUSH2 0x1126 DUP5 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0xB PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x113A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1162 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x116F DUP5 PUSH2 0xB85 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1187 JUMPI PUSH2 0x1187 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11B0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x121F JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11D2 DUP3 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x120D JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11F4 JUMPI PUSH2 0x11F4 PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP2 PUSH2 0x1209 DUP2 PUSH2 0x1CBE JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x1217 DUP2 PUSH2 0x1CBE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11B7 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1231 PUSH2 0x12BA JUMP JUMPDEST DUP1 MLOAD PUSH2 0xAFC SWAP1 PUSH1 0xB SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x124C PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0xAC3 DUP2 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x6B8 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x1384 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH2 0x1382 JUMPI JUMPDEST DUP1 PUSH2 0x114A JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1364 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xAFC DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x143C SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1477 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1474 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1E11 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14D2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x14A5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x14CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0x6E8 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x150C DUP4 PUSH2 0x1609 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x152C JUMPI PUSH2 0x152C PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1556 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x158F JUMPI PUSH2 0x1594 JUMP JUMPDEST PUSH2 0x1560 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x15A6 DUP4 DUP4 PUSH2 0x16E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x1 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0x15D0 PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x15ED JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x15BD JUMPI DUP2 PUSH1 0x1 SLOAD EQ PUSH2 0x1602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1648 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1674 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1692 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x16AA JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x16BE JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x16D0 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x6B8 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH2 0x1702 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB562E8DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP9 MUL ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 DUP6 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 SSTORE DUP3 DUP5 ADD SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 PUSH1 0x1 DUP4 ADD JUMPDEST DUP2 DUP2 EQ PUSH2 0x17B1 JUMPI DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 ADD PUSH2 0x1779 JUMP JUMPDEST POP DUP2 PUSH2 0x17CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x2E0763 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x17E4 SWAP1 PUSH2 0x1C57 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1806 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x184C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x181F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x184C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x184C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x184C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1831 JUMP JUMPDEST POP PUSH2 0x1858 SWAP3 SWAP2 POP PUSH2 0x185C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1858 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x185D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x114A DUP2 PUSH2 0x1871 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114A DUP3 PUSH2 0x18A4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114A DUP3 PUSH2 0x18D4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1921 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1909 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFEF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x194A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x114A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A6 DUP4 PUSH2 0x18D4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1A02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A47 DUP5 PUSH2 0x18D4 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A55 PUSH1 0x20 DUP6 ADD PUSH2 0x18D4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1A96 JUMPI PUSH2 0x1A96 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1ABE JUMPI PUSH2 0x1ABE PUSH2 0x1A65 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1AD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1B2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E8 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B56 DUP4 PUSH2 0x18D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B64 PUSH1 0x20 DUP5 ADD PUSH2 0x18A4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B8C DUP6 PUSH2 0x18D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B9A PUSH1 0x20 DUP7 ADD PUSH2 0x18D4 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1BCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BDD DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1A7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C21 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1C05 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C49 DUP4 PUSH2 0x18D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B64 PUSH1 0x20 DUP5 ADD PUSH2 0x18D4 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C6B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1C8C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1CD2 JUMPI PUSH2 0x1CD2 PUSH2 0x1CA8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1CEC JUMPI PUSH2 0x1CEC PUSH2 0x1CA8 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1D0B JUMPI PUSH2 0x1D0B PUSH2 0x1CA8 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 PUSH2 0x1D23 DUP3 DUP6 DUP4 DUP11 ADD PUSH2 0x1906 JUMP JUMPDEST DUP6 MLOAD SWAP2 DUP5 ADD SWAP2 PUSH2 0x1D36 DUP2 DUP5 DUP5 DUP11 ADD PUSH2 0x1906 JUMP JUMPDEST DUP6 SLOAD SWAP3 ADD SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x1D53 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST DUP6 DUP4 LT DUP2 EQ ISZERO PUSH2 0x1D71 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP1 DUP1 ISZERO PUSH2 0x1D85 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1D96 JUMPI PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 MSTORE DUP4 DUP9 ADD SWAP6 POP PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1DBB JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP9 ADD PUSH2 0x1DA2 JUMP JUMPDEST POP POP DUP4 DUP9 ADD SWAP6 POP JUMPDEST POP SWAP4 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1E07 SWAP1 DUP4 ADD DUP5 PUSH2 0x1932 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x114A DUP2 PUSH2 0x1871 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x6C7BFD BALANCE EXTCODECOPY 0xC0 PUSH4 0x45769461 EXP PUSH17 0x894C6722E8525AE223ED43CCBBE7E8E8CE DUP16 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "290:3684:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9410:639:5;;;;;;;;;;-1:-1:-1;9410:639:5;;;;;:::i;:::-;;:::i;:::-;;;565:14:8;;558:22;540:41;;528:2;513:18;9410:639:5;;;;;;;;2828:75:7;;;;;;;;;;-1:-1:-1;2828:75:7;;;;;:::i;:::-;;:::i;:::-;;2054:101;;;;;;;;;;-1:-1:-1;2054:101:7;;;;;:::i;:::-;-1:-1:-1;;;;;2133:16:7;2113:4;2133:16;;;:9;:16;;;;;;;;;2054:101;10312:100:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16803:218::-;;;;;;;;;;-1:-1:-1;16803:218:5;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2411:32:8;;;2393:51;;2381:2;2366:18;16803:218:5;2247:203:8;16236:408:5;;;;;;:::i;:::-;;:::i;462:32:7:-;;;;;;;;;;;;;;;;;;;2860:25:8;;;2848:2;2833:18;462:32:7;2714:177:8;3197:190:7;;;;;;;;;;-1:-1:-1;3197:190:7;;;;;:::i;:::-;;:::i;2911:95::-;;;;;;;;;;-1:-1:-1;2911:95:7;;;;;:::i;:::-;;:::i;6063:323:5:-;;;;;;;;;;-1:-1:-1;6337:12:5;;6321:13;;:28;6063:323;;691:55:7;;;;;;;;;;-1:-1:-1;691:55:7;;;;;:::i;:::-;;;;;;;;;;;;;;20442:2825:5;;;;;;:::i;:::-;;:::i;3861:106:7:-;;;:::i;23363:193:5:-;;;;;;:::i;:::-;;:::i;2596:98:7:-;;;;;;;;;;-1:-1:-1;2596:98:7;;;;;:::i;:::-;;:::i;3012:179::-;;;;;;;;;;-1:-1:-1;3012:179:7;;;;;:::i;:::-;;:::i;574:26::-;;;;;;;;;;-1:-1:-1;574:26:7;;;;;;;;11705:152:5;;;;;;;;;;-1:-1:-1;11705:152:5;;;;;:::i;:::-;;:::i;605:35:7:-;;;;;;;;;;-1:-1:-1;605:35:7;;;;;;;;;;;7247:233:5;;;;;;;;;;-1:-1:-1;7247:233:5;;;;;:::i;:::-;;:::i;1831:101:2:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:2;1273:6;-1:-1:-1;;;;;1273:6:2;1201:85;;10488:104:5;;;;;;;;;;;;;:::i;1009:1035:7:-;;;;;;:::i;:::-;;:::i;17361:234:5:-;;;;;;;;;;-1:-1:-1;17361:234:5;;;;;:::i;:::-;;:::i;645:41:7:-;;;;;;;;;;-1:-1:-1;645:41:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;534:33;;;;;;;;;;;;;;;;24154:407:5;;;;;;:::i;:::-;;:::i;418:37:7:-;;;;;;;;;;;;;:::i;2161:425::-;;;;;;;;;;-1:-1:-1;2161:425:7;;;;;:::i;:::-;;:::i;3393:461::-;;;;;;;;;;-1:-1:-1;3393:461:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;499:30::-;;;;;;;;;;;;;;;;2700:122;;;;;;;;;;-1:-1:-1;2700:122:7;;;;;:::i;:::-;;:::i;17752:164:5:-;;;;;;;;;;-1:-1:-1;17752:164:5;;;;;:::i;:::-;-1:-1:-1;;;;;17873:25:5;;;17849:4;17873:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17752:164;2081:198:2;;;;;;;;;;-1:-1:-1;2081:198:2;;;;;:::i;:::-;;:::i;9410:639:5:-;9495:4;-1:-1:-1;;;;;;;;;9819:25:5;;;;:102;;-1:-1:-1;;;;;;;;;;9896:25:5;;;9819:102;:179;;;-1:-1:-1;;;;;;;;;;9973:25:5;;;9819:179;9799:199;9410:639;-1:-1:-1;;9410:639:5:o;2828:75:7:-;1094:13:2;:11;:13::i;:::-;2882:6:7::1;:15:::0;;-1:-1:-1;;2882:15:7::1;::::0;::::1;;::::0;;;::::1;::::0;;2828:75::o;10312:100:5:-;10366:13;10399:5;10392:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10312:100;:::o;16803:218::-;16879:7;16904:16;16912:7;16904;:16::i;:::-;16899:64;;16929:34;;-1:-1:-1;;;16929:34:5;;;;;;;;;;;16899:64;-1:-1:-1;16983:24:5;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;16983:30:5;;16803:218::o;16236:408::-;16325:13;16341:16;16349:7;16341;:16::i;:::-;16325:32;-1:-1:-1;40569:10:5;-1:-1:-1;;;;;16374:28:5;;;16370:175;;16422:44;16439:5;40569:10;17752:164;:::i;16422:44::-;16417:128;;16494:35;;-1:-1:-1;;;16494:35:5;;;;;;;;;;;16417:128;16557:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;16557:35:5;-1:-1:-1;;;;;16557:35:5;;;;;;;;;16608:28;;16557:24;;16608:28;;;;;;;16314:330;16236:408;;:::o;3197:190:7:-;1094:13:2;:11;:13::i;:::-;3292:9:7::1;3287:95;3307:20:::0;;::::1;3287:95;;;3369:5;3343:9;:23;3353:9;;3363:1;3353:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3343:23:7::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3343:23:7;:31;;-1:-1:-1;;3343:31:7::1;::::0;::::1;;::::0;;;::::1;::::0;;3329:3;::::1;::::0;::::1;:::i;:::-;;;;3287:95;;;;3197:190:::0;;:::o;2911:95::-;1094:13:2;:11;:13::i;:::-;2976:15:7::1;:24:::0;;;::::1;;;;-1:-1:-1::0;;2976:24:7;;::::1;::::0;;;::::1;::::0;;2911:95::o;20442:2825:5:-;20584:27;20614;20633:7;20614:18;:27::i;:::-;20584:57;;20699:4;-1:-1:-1;;;;;20658:45:5;20674:19;-1:-1:-1;;;;;20658:45:5;;20654:86;;20712:28;;-1:-1:-1;;;20712:28:5;;;;;;;;;;;20654:86;20754:27;19550:24;;;:15;:24;;;;;19778:26;;40569:10;19175:30;;;-1:-1:-1;;;;;18868:28:5;;19153:20;;;19150:56;20940:180;;21033:43;21050:4;40569:10;17752:164;:::i;21033:43::-;21028:92;;21085:35;;-1:-1:-1;;;21085:35:5;;;;;;;;;;;21028:92;-1:-1:-1;;;;;21137:16:5;;21133:52;;21162:23;;-1:-1:-1;;;21162:23:5;;;;;;;;;;;21133:52;21334:15;21331:160;;;21474:1;21453:19;21446:30;21331:160;-1:-1:-1;;;;;21871:24:5;;;;;;;:18;:24;;;;;;21869:26;;-1:-1:-1;;21869:26:5;;;21940:22;;;;;;;;;21938:24;;-1:-1:-1;21938:24:5;;;15094:11;15069:23;15065:41;15052:63;-1:-1:-1;;;15052:63:5;22233:26;;;;:17;:26;;;;;:175;-1:-1:-1;;;22528:47:5;;22524:627;;22633:1;22623:11;;22601:19;22756:30;;;:17;:30;;;;;;22752:384;;22894:13;;22879:11;:28;22875:242;;23041:30;;;;:17;:30;;;;;:52;;;22875:242;22582:569;22524:627;23198:7;23194:2;-1:-1:-1;;;;;23179:27:5;23188:4;-1:-1:-1;;;;;23179:27:5;;;;;;;;;;;20573:2694;;;20442:2825;;;:::o;3861:106:7:-;1094:13:2;:11;:13::i;:::-;1247:7;1273:6;;3913:48:7::1;::::0;-1:-1:-1;;;;;1273:6:2;;;;3939:21:7::1;3913:48:::0;::::1;;;::::0;3939:21;;3913:48;1247:7:2;3913:48:7;3939:21;1273:6:2;3913:48:7;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;3861:106::o:0;23363:193:5:-;23509:39;23526:4;23532:2;23536:7;23509:39;;;;;;;;;;;;:16;:39::i;2596:98:7:-;1094:13:2;:11;:13::i;:::-;2667:21:7;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2596:98:::0;:::o;3012:179::-;1094:13:2;:11;:13::i;:::-;3097:9:7::1;3092:94;3112:20:::0;;::::1;3092:94;;;3174:4;3148:9;:23;3158:9;;3168:1;3158:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3148:23:7::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3148:23:7;:30;;-1:-1:-1;;3148:30:7::1;::::0;::::1;;::::0;;;::::1;::::0;;3134:3;::::1;::::0;::::1;:::i;:::-;;;;3092:94;;11705:152:5::0;11777:7;11820:27;11839:7;11820:18;:27::i;7247:233::-;7319:7;-1:-1:-1;;;;;7343:19:5;;7339:60;;7371:28;;-1:-1:-1;;;7371:28:5;;;;;;;;;;;7339:60;-1:-1:-1;;;;;;7417:25:5;;;;;:18;:25;;;;;;1406:13;7417:55;;7247:233::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;10488:104:5:-;10544:13;10577:7;10570:14;;;;;:::i;1009:1035:7:-;1066:14;1083:13;6337:12:5;;6321:13;;:28;;6063:323;1083:13:7;1135:6;;1066:30;;-1:-1:-1;1135:6:7;;1134:7;1126:115;;;;-1:-1:-1;;;1126:115:7;;7898:2:8;1126:115:7;;;7880:21:8;7937:2;7917:18;;;7910:30;7976:34;7956:18;;;7949:62;8047:34;8027:18;;;8020:62;8119:33;8098:19;;;8091:62;8170:19;;1126:115:7;;;;;;;;;1270:1;1256:11;:15;1248:91;;;;-1:-1:-1;;;1248:91:7;;8402:2:8;1248:91:7;;;8384:21:8;8441:2;8421:18;;;8414:30;8480:34;8460:18;;;8453:62;8551:33;8531:18;;;8524:61;8602:19;;1248:91:7;8200:427:8;1248:91:7;1378:9;;1354:20;1363:11;1354:6;:20;:::i;:::-;:33;;1346:99;;;;-1:-1:-1;;;1346:99:7;;8967:2:8;1346:99:7;;;8949:21:8;9006:2;8986:18;;;8979:30;9045:34;9025:18;;;9018:62;-1:-1:-1;;;9096:18:8;;;9089:51;9157:19;;1346:99:7;8765:417:8;1346:99:7;1247:7:2;1273:6;-1:-1:-1;;;;;1273:6:2;1464:10:7;:21;1460:482;;1553:1;1538:11;:16;;1530:49;;;;-1:-1:-1;;;1530:49:7;;9389:2:8;1530:49:7;;;9371:21:8;9428:2;9408:18;;;9401:30;-1:-1:-1;;;9447:18:8;;;9440:50;9507:18;;1530:49:7;9187:344:8;1530:49:7;1593:15;;;;;;;;:23;;:15;:23;1590:272;;;1655:10;2113:4;2133:16;;;:9;:16;;;;;;;;1633:53;;;;-1:-1:-1;;;1633:53:7;;9738:2:8;1633:53:7;;;9720:21:8;9777:2;9757:18;;;9750:30;-1:-1:-1;;;9796:18:8;;;9789:45;9851:18;;1633:53:7;9536:339:8;1633:53:7;1749:10;1701:24;1728:32;;;:20;:32;;;;;;1817:14;;1783:30;1802:11;1728:32;1783:30;:::i;:::-;:48;;1775:75;;;;-1:-1:-1;;;1775:75:7;;10082:2:8;1775:75:7;;;10064:21:8;10121:2;10101:18;;;10094:30;-1:-1:-1;;;10140:18:8;;;10133:44;10194:18;;1775:75:7;9880:338:8;1775:75:7;1618:244;1590:272;1900:11;1893:4;;:18;;;;:::i;:::-;1880:9;:31;;1872:62;;;;-1:-1:-1;;;1872:62:7;;10598:2:8;1872:62:7;;;10580:21:8;10637:2;10617:18;;;10610:30;-1:-1:-1;;;10656:18:8;;;10649:48;10714:18;;1872:62:7;10396:342:8;1872:62:7;1950:34;1960:10;1972:11;1950:9;:34::i;:::-;2012:10;1991:32;;;;:20;:32;;;;;:47;;2027:11;;1991:32;:47;;2027:11;;1991:47;:::i;:::-;;;;-1:-1:-1;;;;1009:1035:7:o;17361:234:5:-;40569:10;17456:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;17456:49:5;;;;;;;;;;;;:60;;-1:-1:-1;;17456:60:5;;;;;;;;;;17532:55;;540:41:8;;;17456:49:5;;40569:10;17532:55;;513:18:8;17532:55:5;;;;;;;17361:234;;:::o;24154:407::-;24329:31;24342:4;24348:2;24352:7;24329:12;:31::i;:::-;-1:-1:-1;;;;;24375:14:5;;;:19;24371:183;;24414:56;24445:4;24451:2;24455:7;24464:5;24414:30;:56::i;:::-;24409:145;;24498:40;;-1:-1:-1;;;24498:40:5;;;;;;;;;;;24409:145;24154:407;;;;:::o;418:37:7:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2161:425::-;2259:13;2300:16;2308:7;2300;:16::i;:::-;2284:97;;;;-1:-1:-1;;;2284:97:7;;10945:2:8;2284:97:7;;;10927:21:8;10984:2;10964:18;;;10957:30;11023:34;11003:18;;;10996:62;-1:-1:-1;;;11074:18:8;;;11067:45;11129:19;;2284:97:7;10743:411:8;2284:97:7;2392:28;2423:10;:8;:10::i;:::-;2392:41;;2478:1;2453:14;2447:28;:32;:133;;;;;;;;;;;;;;;;;2515:14;2531:18;:7;:16;:18::i;:::-;2551:13;2498:67;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2447:133;2440:140;2161:425;-1:-1:-1;;;2161:425:7:o;3393:461::-;3461:16;3490:21;3514:13;6337:12:5;;6321:13;;:28;;6063:323;3514:13:7;3490:37;;3538:23;3578:21;3588:10;3578:9;:21::i;:::-;3564:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3564:36:7;;3538:62;;3611:15;3646:9;3641:182;3665:13;3661:1;:17;3641:182;;;3718:10;-1:-1:-1;;;;;3704:24:7;:10;3712:1;3704:7;:10::i;:::-;-1:-1:-1;;;;;3704:24:7;;3700:112;;;3767:1;3749:6;3756:7;3749:15;;;;;;;;:::i;:::-;;;;;;;;;;:19;3787:9;;;;:::i;:::-;;;;3700:112;3680:3;;;;:::i;:::-;;;;3641:182;;;-1:-1:-1;3840:6:7;;3393:461;-1:-1:-1;;;;3393:461:7:o;2700:122::-;1094:13:2;:11;:13::i;:::-;2783:33:7;;::::1;::::0;:13:::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;2081:198:2:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:2;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:2;;13019:2:8;2161:73:2::1;::::0;::::1;13001:21:8::0;13058:2;13038:18;;;13031:30;13097:34;13077:18;;;13070:62;-1:-1:-1;;;13148:18:8;;;13141:36;13194:19;;2161:73:2::1;12817:402:8::0;2161:73:2::1;2244:28;2263:8;2244:18;:28::i;1359:130::-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:2;40569:10:5;1422:23:2;1414:68;;;;-1:-1:-1;;;1414:68:2;;13426:2:8;1414:68:2;;;13408:21:8;;;13445:18;;;13438:30;13504:34;13484:18;;;13477:62;13556:18;;1414:68:2;13224:356:8;18174:282:5;18239:4;18329:13;;18319:7;:23;18276:153;;;;-1:-1:-1;;18380:26:5;;;;:17;:26;;;;;;-1:-1:-1;;;18380:44:5;:49;;18174:282::o;12860:1275::-;12927:7;12962;13064:13;;13057:4;:20;13053:1015;;;13102:14;13119:23;;;:17;:23;;;;;;-1:-1:-1;;;13208:24:5;;13204:845;;13873:113;13880:11;13873:113;;-1:-1:-1;;;13951:6:5;13933:25;;;;:17;:25;;;;;;13873:113;;13204:845;13079:989;13053:1015;14096:31;;-1:-1:-1;;;14096:31:5;;;;;;;;;;;2433:187:2;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;34314:112:5:-;34391:27;34401:2;34405:8;34391:27;;;;;;;;;;;;:9;:27::i;26645:716::-;26829:88;;-1:-1:-1;;;26829:88:5;;26808:4;;-1:-1:-1;;;;;26829:45:5;;;;;:88;;40569:10;;26896:4;;26902:7;;26911:5;;26829:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26829:88:5;;;;;;;;-1:-1:-1;;26829:88:5;;;;;;;;;;;;:::i;:::-;;;26825:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27112:13:5;;27108:235;;27158:40;;-1:-1:-1;;;27158:40:5;;;;;;;;;;;27108:235;27301:6;27295:13;27286:6;27282:2;27278:15;27271:38;26825:529;-1:-1:-1;;;;;;26988:64:5;-1:-1:-1;;;26988:64:5;;-1:-1:-1;26825:529:5;26645:716;;;;;;:::o;886:102:7:-;946:13;975:7;968:14;;;;;:::i;437:707:0:-;493:13;542:14;559:28;581:5;559:21;:28::i;:::-;590:1;559:32;542:49;;605:20;639:6;628:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;628:18:0;-1:-1:-1;605:41:0;-1:-1:-1;766:28:0;;;782:2;766:28;821:280;-1:-1:-1;;852:5:0;-1:-1:-1;;;986:2:0;975:14;;970:30;852:5;957:44;1045:2;1036:11;;;-1:-1:-1;1069:10:0;1065:21;;1081:5;;1065:21;821:280;;;-1:-1:-1;1121:6:0;437:707;-1:-1:-1;;;437:707:0:o;33541:689:5:-;33672:19;33678:2;33682:8;33672:5;:19::i;:::-;-1:-1:-1;;;;;33733:14:5;;;:19;33729:483;;33787:13;;33835:14;;;33868:233;33899:62;33938:1;33942:2;33946:7;;;;;;33955:5;33899:30;:62::i;:::-;33894:167;;33997:40;;-1:-1:-1;;;33997:40:5;;;;;;;;;;;33894:167;34096:3;34088:5;:11;33868:233;;34183:3;34166:13;;:20;34162:34;;34188:8;;;34162:34;33754:458;;33541:689;;;:::o;9900:890:1:-;9953:7;;-1:-1:-1;;;10028:15:1;;10024:99;;-1:-1:-1;;;10063:15:1;;;-1:-1:-1;10106:2:1;10096:12;10024:99;10149:6;10140:5;:15;10136:99;;10184:6;10175:15;;;-1:-1:-1;10218:2:1;10208:12;10136:99;10261:6;10252:5;:15;10248:99;;10296:6;10287:15;;;-1:-1:-1;10330:2:1;10320:12;10248:99;10373:5;10364;:14;10360:96;;10407:5;10398:14;;;-1:-1:-1;10440:1:1;10430:11;10360:96;10482:5;10473;:14;10469:96;;10516:5;10507:14;;;-1:-1:-1;10549:1:1;10539:11;10469:96;10591:5;10582;:14;10578:96;;10625:5;10616:14;;;-1:-1:-1;10658:1:1;10648:11;10578:96;10700:5;10691;:14;10687:64;;10735:1;10725:11;10777:6;9900:890;-1:-1:-1;;9900:890:1:o;27823:2966:5:-;27919:13;;27947;27943:44;;27969:18;;-1:-1:-1;;;27969:18:5;;;;;;;;;;;27943:44;-1:-1:-1;;;;;28475:22:5;;;;;;:18;:22;;;;1544:2;28475:22;;;:71;;28513:32;28501:45;;28475:71;;;28789:31;;;:17;:31;;;;;-1:-1:-1;15525:15:5;;15499:24;15495:46;15094:11;15069:23;15065:41;15062:52;15052:63;;28789:173;;29024:23;;;;28789:31;;28475:22;;29789:25;28475:22;;29642:335;30303:1;30289:12;30285:20;30243:346;30344:3;30335:7;30332:16;30243:346;;30562:7;30552:8;30549:1;30522:25;30519:1;30516;30511:59;30397:1;30384:15;30243:346;;;-1:-1:-1;30622:13:5;30618:45;;30644:19;;-1:-1:-1;;;30644:19:5;;;;;;;;;;;30618:45;30680:13;:19;-1:-1:-1;3287:95:7::1;3197:190:::0;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:8;-1:-1:-1;;;;;;88:32:8;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:160::-;657:20;;713:13;;706:21;696:32;;686:60;;742:1;739;732:12;686:60;592:160;;;:::o;757:180::-;813:6;866:2;854:9;845:7;841:23;837:32;834:52;;;882:1;879;872:12;834:52;905:26;921:9;905:26;:::i;942:173::-;1010:20;;-1:-1:-1;;;;;1059:31:8;;1049:42;;1039:70;;1105:1;1102;1095:12;1120:186;1179:6;1232:2;1220:9;1211:7;1207:23;1203:32;1200:52;;;1248:1;1245;1238:12;1200:52;1271:29;1290:9;1271:29;:::i;1311:258::-;1383:1;1393:113;1407:6;1404:1;1401:13;1393:113;;;1483:11;;;1477:18;1464:11;;;1457:39;1429:2;1422:10;1393:113;;;1524:6;1521:1;1518:13;1515:48;;;-1:-1:-1;;1559:1:8;1541:16;;1534:27;1311:258::o;1574:::-;1616:3;1654:5;1648:12;1681:6;1676:3;1669:19;1697:63;1753:6;1746:4;1741:3;1737:14;1730:4;1723:5;1719:16;1697:63;:::i;:::-;1814:2;1793:15;-1:-1:-1;;1789:29:8;1780:39;;;;1821:4;1776:50;;1574:258;-1:-1:-1;;1574:258:8:o;1837:220::-;1986:2;1975:9;1968:21;1949:4;2006:45;2047:2;2036:9;2032:18;2024:6;2006:45;:::i;2062:180::-;2121:6;2174:2;2162:9;2153:7;2149:23;2145:32;2142:52;;;2190:1;2187;2180:12;2142:52;-1:-1:-1;2213:23:8;;2062:180;-1:-1:-1;2062:180:8:o;2455:254::-;2523:6;2531;2584:2;2572:9;2563:7;2559:23;2555:32;2552:52;;;2600:1;2597;2590:12;2552:52;2623:29;2642:9;2623:29;:::i;:::-;2613:39;2699:2;2684:18;;;;2671:32;;-1:-1:-1;;;2455:254:8:o;2896:615::-;2982:6;2990;3043:2;3031:9;3022:7;3018:23;3014:32;3011:52;;;3059:1;3056;3049:12;3011:52;3099:9;3086:23;3128:18;3169:2;3161:6;3158:14;3155:34;;;3185:1;3182;3175:12;3155:34;3223:6;3212:9;3208:22;3198:32;;3268:7;3261:4;3257:2;3253:13;3249:27;3239:55;;3290:1;3287;3280:12;3239:55;3330:2;3317:16;3356:2;3348:6;3345:14;3342:34;;;3372:1;3369;3362:12;3342:34;3425:7;3420:2;3410:6;3407:1;3403:14;3399:2;3395:23;3391:32;3388:45;3385:65;;;3446:1;3443;3436:12;3385:65;3477:2;3469:11;;;;;3499:6;;-1:-1:-1;2896:615:8;;-1:-1:-1;;;;2896:615:8:o;3516:328::-;3593:6;3601;3609;3662:2;3650:9;3641:7;3637:23;3633:32;3630:52;;;3678:1;3675;3668:12;3630:52;3701:29;3720:9;3701:29;:::i;:::-;3691:39;;3749:38;3783:2;3772:9;3768:18;3749:38;:::i;:::-;3739:48;;3834:2;3823:9;3819:18;3806:32;3796:42;;3516:328;;;;;:::o;3849:127::-;3910:10;3905:3;3901:20;3898:1;3891:31;3941:4;3938:1;3931:15;3965:4;3962:1;3955:15;3981:632;4046:5;4076:18;4117:2;4109:6;4106:14;4103:40;;;4123:18;;:::i;:::-;4198:2;4192:9;4166:2;4252:15;;-1:-1:-1;;4248:24:8;;;4274:2;4244:33;4240:42;4228:55;;;4298:18;;;4318:22;;;4295:46;4292:72;;;4344:18;;:::i;:::-;4384:10;4380:2;4373:22;4413:6;4404:15;;4443:6;4435;4428:22;4483:3;4474:6;4469:3;4465:16;4462:25;4459:45;;;4500:1;4497;4490:12;4459:45;4550:6;4545:3;4538:4;4530:6;4526:17;4513:44;4605:1;4598:4;4589:6;4581;4577:19;4573:30;4566:41;;;;3981:632;;;;;:::o;4618:451::-;4687:6;4740:2;4728:9;4719:7;4715:23;4711:32;4708:52;;;4756:1;4753;4746:12;4708:52;4796:9;4783:23;4829:18;4821:6;4818:30;4815:50;;;4861:1;4858;4851:12;4815:50;4884:22;;4937:4;4929:13;;4925:27;-1:-1:-1;4915:55:8;;4966:1;4963;4956:12;4915:55;4989:74;5055:7;5050:2;5037:16;5032:2;5028;5024:11;4989:74;:::i;5074:254::-;5139:6;5147;5200:2;5188:9;5179:7;5175:23;5171:32;5168:52;;;5216:1;5213;5206:12;5168:52;5239:29;5258:9;5239:29;:::i;:::-;5229:39;;5287:35;5318:2;5307:9;5303:18;5287:35;:::i;:::-;5277:45;;5074:254;;;;;:::o;5333:667::-;5428:6;5436;5444;5452;5505:3;5493:9;5484:7;5480:23;5476:33;5473:53;;;5522:1;5519;5512:12;5473:53;5545:29;5564:9;5545:29;:::i;:::-;5535:39;;5593:38;5627:2;5616:9;5612:18;5593:38;:::i;:::-;5583:48;;5678:2;5667:9;5663:18;5650:32;5640:42;;5733:2;5722:9;5718:18;5705:32;5760:18;5752:6;5749:30;5746:50;;;5792:1;5789;5782:12;5746:50;5815:22;;5868:4;5860:13;;5856:27;-1:-1:-1;5846:55:8;;5897:1;5894;5887:12;5846:55;5920:74;5986:7;5981:2;5968:16;5963:2;5959;5955:11;5920:74;:::i;:::-;5910:84;;;5333:667;;;;;;;:::o;6005:632::-;6176:2;6228:21;;;6298:13;;6201:18;;;6320:22;;;6147:4;;6176:2;6399:15;;;;6373:2;6358:18;;;6147:4;6442:169;6456:6;6453:1;6450:13;6442:169;;;6517:13;;6505:26;;6586:15;;;;6551:12;;;;6478:1;6471:9;6442:169;;;-1:-1:-1;6628:3:8;;6005:632;-1:-1:-1;;;;;;6005:632:8:o;6642:260::-;6710:6;6718;6771:2;6759:9;6750:7;6746:23;6742:32;6739:52;;;6787:1;6784;6777:12;6739:52;6810:29;6829:9;6810:29;:::i;:::-;6800:39;;6858:38;6892:2;6881:9;6877:18;6858:38;:::i;6907:380::-;6986:1;6982:12;;;;7029;;;7050:61;;7104:4;7096:6;7092:17;7082:27;;7050:61;7157:2;7149:6;7146:14;7126:18;7123:38;7120:161;;;7203:10;7198:3;7194:20;7191:1;7184:31;7238:4;7235:1;7228:15;7266:4;7263:1;7256:15;7120:161;;6907:380;;;:::o;7292:127::-;7353:10;7348:3;7344:20;7341:1;7334:31;7384:4;7381:1;7374:15;7408:4;7405:1;7398:15;7424:127;7485:10;7480:3;7476:20;7473:1;7466:31;7516:4;7513:1;7506:15;7540:4;7537:1;7530:15;7556:135;7595:3;-1:-1:-1;;7616:17:8;;7613:43;;;7636:18;;:::i;:::-;-1:-1:-1;7683:1:8;7672:13;;7556:135::o;8632:128::-;8672:3;8703:1;8699:6;8696:1;8693:13;8690:39;;;8709:18;;:::i;:::-;-1:-1:-1;8745:9:8;;8632:128::o;10223:168::-;10263:7;10329:1;10325;10321:6;10317:14;10314:1;10311:21;10306:1;10299:9;10292:17;10288:45;10285:71;;;10336:18;;:::i;:::-;-1:-1:-1;10376:9:8;;10223:168::o;11285:1527::-;11509:3;11547:6;11541:13;11573:4;11586:51;11630:6;11625:3;11620:2;11612:6;11608:15;11586:51;:::i;:::-;11700:13;;11659:16;;;;11722:55;11700:13;11659:16;11744:15;;;11722:55;:::i;:::-;11866:13;;11799:20;;;11839:1;;11926;11948:18;;;;12001;;;;12028:93;;12106:4;12096:8;12092:19;12080:31;;12028:93;12169:2;12159:8;12156:16;12136:18;12133:40;12130:167;;;-1:-1:-1;;;12196:33:8;;12252:4;12249:1;12242:15;12282:4;12203:3;12270:17;12130:167;12313:18;12340:110;;;;12464:1;12459:328;;;;12306:481;;12340:110;-1:-1:-1;;12375:24:8;;12361:39;;12420:20;;;;-1:-1:-1;12340:110:8;;12459:328;11232:1;11225:14;;;11269:4;11256:18;;12554:1;12568:169;12582:8;12579:1;12576:15;12568:169;;;12664:14;;12649:13;;;12642:37;12707:16;;;;12599:10;;12568:169;;;12572:3;;12768:8;12761:5;12757:20;12750:27;;12306:481;-1:-1:-1;12803:3:8;;11285:1527;-1:-1:-1;;;;;;;;;;;11285:1527:8:o;13585:489::-;-1:-1:-1;;;;;13854:15:8;;;13836:34;;13906:15;;13901:2;13886:18;;13879:43;13953:2;13938:18;;13931:34;;;14001:3;13996:2;13981:18;;13974:31;;;13779:4;;14022:46;;14048:19;;14040:6;14022:46;:::i;:::-;14014:54;13585:489;-1:-1:-1;;;;;;13585:489:8:o;14079:249::-;14148:6;14201:2;14189:9;14180:7;14176:23;14172:32;14169:52;;;14217:1;14214;14207:12;14169:52;14249:9;14243:16;14268:30;14292:5;14268:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1556000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"AllowlistLimit()": "2340",
								"addressMintedBalance(address)": "2609",
								"allowlist(address)": "2653",
								"allowlistUsers(address[])": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2685",
								"baseExtension()": "infinite",
								"cost()": "2385",
								"getApproved(uint256)": "6903",
								"isAllowlisted(address)": "2629",
								"isApprovedForAll(address,address)": "infinite",
								"maxSupply()": "2361",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"onlyAllowlisted()": "2378",
								"owner()": "2376",
								"ownerOf(uint256)": "infinite",
								"ownerOfTokenIds(address)": "infinite",
								"pause(bool)": "26762",
								"paused()": "2432",
								"removeUsersFromAllowlist(address[])": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setBaseExtension(string)": "infinite",
								"setBaseURI(string)": "infinite",
								"setOnlyAllowlisted(bool)": "26753",
								"supportsInterface(bytes4)": "557",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4466",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28465",
								"withdraw()": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 418,
									"end": 455,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 418,
									"end": 455,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 418,
									"end": 455,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 418,
									"end": 455,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 418,
									"end": 455,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 418,
									"end": 455,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "173539B7B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 418,
									"end": 455,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 418,
									"end": 455,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 418,
									"end": 455,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 418,
									"end": 455,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 418,
									"end": 455,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 455,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 418,
									"end": 455,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 418,
									"end": 455,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 418,
									"end": 455,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 418,
									"end": 455,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 418,
									"end": 455,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 418,
									"end": 455,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 455,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 484,
									"end": 494,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 462,
									"end": 494,
									"name": "PUSH",
									"source": 7,
									"value": "C"
								},
								{
									"begin": 462,
									"end": 494,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 526,
									"end": 529,
									"name": "PUSH",
									"source": 7,
									"value": "1A4"
								},
								{
									"begin": 499,
									"end": 529,
									"name": "PUSH",
									"source": 7,
									"value": "D"
								},
								{
									"begin": 499,
									"end": 529,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 534,
									"end": 567,
									"name": "PUSH",
									"source": 7,
									"value": "E"
								},
								{
									"begin": 534,
									"end": 567,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 574,
									"end": 600,
									"name": "PUSH",
									"source": 7,
									"value": "F"
								},
								{
									"begin": 574,
									"end": 600,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 574,
									"end": 600,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 605,
									"end": 640,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 605,
									"end": 640,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 605,
									"end": 640,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 753,
									"end": 865,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 753,
									"end": 865,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 753,
									"end": 865,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 753,
									"end": 865,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 753,
									"end": 865,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 753,
									"end": 865,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 753,
									"end": 865,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 753,
									"end": 865,
									"name": "tag",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 753,
									"end": 865,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "34343232303"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "494D49"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5085,
									"end": 5243,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5152,
									"end": 5157,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 5152,
									"end": 5157,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5183,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 5176,
									"end": 5183,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 5176,
									"end": 5193,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5635,
									"end": 5642,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5204,
									"end": 5217,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 5204,
									"end": 5235,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5204,
									"end": 5235,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5204,
									"end": 5235,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 835,
									"end": 859,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 846,
									"end": 858,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 835,
									"end": 845,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 835,
									"end": 859,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 835,
									"end": 859,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 835,
									"end": 859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 865,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2596,
									"end": 2694,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2596,
									"end": 2694,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1094,
									"end": 1105,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2667,
									"end": 2688,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2667,
									"end": 2688,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2667,
									"end": 2688,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 2667,
									"end": 2688,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2667,
									"end": 2674,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 2667,
									"end": 2674,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2667,
									"end": 2688,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2667,
									"end": 2688,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2667,
									"end": 2688,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2667,
									"end": 2688,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2667,
									"end": 2688,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2667,
									"end": 2688,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2667,
									"end": 2688,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 2667,
									"end": 2688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2667,
									"end": 2688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2596,
									"end": 2694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2596,
									"end": 2694,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1359,
									"end": 1489,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1359,
									"end": 1489,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1247,
									"end": 1254,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1422,
									"end": 1445,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1440,
									"end": 1442,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1422,
									"end": 1443,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1422,
									"end": 1443,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1422,
									"end": 1443,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1459,
									"end": 1477,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1459,
									"end": 1477,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1459,
									"end": 1477,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1452,
									"end": 1482,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1518,
									"end": 1552,
									"name": "PUSH",
									"source": 8,
									"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
								},
								{
									"begin": 1498,
									"end": 1516,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1498,
									"end": 1516,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1516,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1491,
									"end": 1553,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1570,
									"end": 1588,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1570,
									"end": 1588,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1359,
									"end": 1489,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "tag",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 259,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 302,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 288,
									"end": 297,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 279,
									"end": 286,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 275,
									"end": 298,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 271,
									"end": 303,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 268,
									"end": 320,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 268,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 314,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 306,
									"end": 318,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 268,
									"end": 320,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 343,
									"end": 359,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 343,
									"end": 359,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 408,
									"end": 422,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 405,
									"end": 439,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 405,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 433,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 425,
									"end": 437,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 405,
									"end": 439,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 448,
									"end": 480,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 448,
									"end": 480,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 518,
									"end": 525,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 511,
									"end": 515,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 507,
									"end": 509,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 503,
									"end": 516,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 499,
									"end": 526,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 489,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 540,
									"end": 541,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 538,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 530,
									"end": 542,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 489,
									"end": 544,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 569,
									"end": 571,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 563,
									"end": 572,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 591,
									"end": 593,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 587,
									"end": 589,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 584,
									"end": 594,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 581,
									"end": 617,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 581,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 581,
									"end": 617,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 675,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 726,
									"end": 739,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 722,
									"end": 744,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 722,
									"end": 744,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 746,
									"end": 748,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 714,
									"end": 754,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 702,
									"end": 755,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 702,
									"end": 755,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 702,
									"end": 755,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 770,
									"end": 788,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 790,
									"end": 812,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 767,
									"end": 813,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 764,
									"end": 836,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 764,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 764,
									"end": 836,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 856,
									"end": 866,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 852,
									"end": 854,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 845,
									"end": 867,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 891,
									"end": 893,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 883,
									"end": 889,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 876,
									"end": 894,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 931,
									"end": 938,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 926,
									"end": 928,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 921,
									"end": 923,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 917,
									"end": 919,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 913,
									"end": 924,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 909,
									"end": 929,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 906,
									"end": 939,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 903,
									"end": 956,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 903,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 952,
									"end": 953,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 950,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 942,
									"end": 954,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 903,
									"end": 956,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 974,
									"end": 975,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 965,
									"end": 975,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 995,
									"end": 996,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1076,
									"end": 1102,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1103,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1131,
									"end": 1133,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1128,
									"end": 1129,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1125,
									"end": 1134,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1190,
									"end": 1191,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1185,
									"end": 1187,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1172,
									"end": 1178,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1168,
									"end": 1183,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1188,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1157,
									"end": 1192,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1221,
									"end": 1227,
									"name": "SWAP9",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "SWAP8",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1599,
									"end": 1979,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1599,
									"end": 1979,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1674,
									"end": 1686,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 1686,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 1686,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 1686,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1742,
									"end": 1803,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1742,
									"end": 1803,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1796,
									"end": 1800,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1788,
									"end": 1794,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1784,
									"end": 1801,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1774,
									"end": 1801,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1774,
									"end": 1801,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1742,
									"end": 1803,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1742,
									"end": 1803,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1849,
									"end": 1851,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1841,
									"end": 1847,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1838,
									"end": 1852,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1836,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1815,
									"end": 1853,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1812,
									"end": 1973,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1812,
									"end": 1973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1812,
									"end": 1973,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1905,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1890,
									"end": 1893,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1886,
									"end": 1906,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1883,
									"end": 1884,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1876,
									"end": 1907,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1930,
									"end": 1934,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1927,
									"end": 1928,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1920,
									"end": 1935,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1958,
									"end": 1962,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1955,
									"end": 1956,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1948,
									"end": 1963,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1812,
									"end": 1973,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1812,
									"end": 1973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1812,
									"end": 1973,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1599,
									"end": 1979,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1599,
									"end": 1979,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1599,
									"end": 1979,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1599,
									"end": 1979,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1599,
									"end": 1979,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1599,
									"end": 1979,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 3974,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220626c7bfd313cc063457694610a70894c6722e8525ae223ed43ccbbe7e8e8ce8f64736f6c634300080c0033",
									".code": [
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "6352211E"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "B3807B1D"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "CA8A7D5E"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "CA8A7D5E"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "D5ABEB01"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "DA3EF23F"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "E985E9C5"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "B3807B1D"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "B88D4FDE"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "C6682862"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "C87B56DD"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "A0712D68"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "A22CB465"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "A7CD52CB"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "6352211E"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "674C02AA"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "17DC10C4"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "3CCFD60B"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "3CCFD60B"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "42842E0E"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "55F804B3"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "5B9E3CCF"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "17DC10C4"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "18CAE269"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "81812FC"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "81812FC"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "13FAEDE6"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "142B0FBE"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A7"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "2329A29"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "5A3B809"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 290,
											"end": 3974,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2142,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2155,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2443,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2443,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2393,
											"end": 2444,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2393,
											"end": 2444,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2383,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2247,
											"end": 2450,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 462,
											"end": 494,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 462,
											"end": 494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 462,
											"end": 494,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 462,
											"end": 494,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 462,
											"end": 494,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 462,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 462,
											"end": 494,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 462,
											"end": 494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 494,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 462,
											"end": 494,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 462,
											"end": 494,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 462,
											"end": 494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 462,
											"end": 494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 462,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 462,
											"end": 494,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 462,
											"end": 494,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 494,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 462,
											"end": 494,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 462,
											"end": 494,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 462,
											"end": 494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 462,
											"end": 494,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 494,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2885,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2885,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2851,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 462,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2714,
											"end": 2891,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6337,
											"end": 6349,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6337,
											"end": 6349,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6321,
											"end": 6334,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6321,
											"end": 6334,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6321,
											"end": 6349,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 746,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 691,
											"end": 746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 691,
											"end": 746,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 746,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 691,
											"end": 746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 691,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 691,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 691,
											"end": 746,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 691,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 691,
											"end": 746,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 691,
											"end": 746,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 691,
											"end": 746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 691,
											"end": 746,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 691,
											"end": 746,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 691,
											"end": 746,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3861,
											"end": 3967,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3861,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3861,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 3861,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3861,
											"end": 3967,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 574,
											"end": 600,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 574,
											"end": 600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 574,
											"end": 600,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 574,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 574,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 574,
											"end": 600,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 574,
											"end": 600,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 574,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 574,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 574,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 574,
											"end": 600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 574,
											"end": 600,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 605,
											"end": 640,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 605,
											"end": 640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 605,
											"end": 640,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 605,
											"end": 640,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 605,
											"end": 640,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 605,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 605,
											"end": 640,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 605,
											"end": 640,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 640,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 605,
											"end": 640,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 605,
											"end": 640,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 605,
											"end": 640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 605,
											"end": 640,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 605,
											"end": 640,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 605,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 605,
											"end": 640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 605,
											"end": 640,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 605,
											"end": 640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 605,
											"end": 640,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 605,
											"end": 640,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 605,
											"end": 640,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 605,
											"end": 640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 605,
											"end": 640,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1009,
											"end": 2044,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1009,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1009,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1009,
											"end": 2044,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 2044,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1009,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1009,
											"end": 2044,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1009,
											"end": 2044,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1009,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1009,
											"end": 2044,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 645,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 686,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 534,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 534,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 534,
											"end": 567,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 534,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 534,
											"end": 567,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 534,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 534,
											"end": 567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 534,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 534,
											"end": 567,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 534,
											"end": 567,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 534,
											"end": 567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 534,
											"end": 567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 534,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 534,
											"end": 567,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 534,
											"end": 567,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 534,
											"end": 567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 534,
											"end": 567,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 529,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 499,
											"end": 529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 499,
											"end": 529,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 499,
											"end": 529,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 499,
											"end": 529,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 499,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 499,
											"end": 529,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 499,
											"end": 529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 529,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 499,
											"end": 529,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 499,
											"end": 529,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 499,
											"end": 529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 499,
											"end": 529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 499,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 499,
											"end": 529,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 499,
											"end": 529,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 499,
											"end": 529,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 499,
											"end": 529,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17849,
											"end": 17853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17891,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17898,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17873,
											"end": 17908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9495,
											"end": 9499,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9819,
											"end": 9844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9844,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9844,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9844,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 9819,
											"end": 9921,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9896,
											"end": 9921,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9896,
											"end": 9921,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9896,
											"end": 9921,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9921,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 9819,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9973,
											"end": 9998,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9973,
											"end": 9998,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9973,
											"end": 9998,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 9819,
											"end": 9998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9799,
											"end": 9998,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9410,
											"end": 10049,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 2882,
											"end": 2897,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2882,
											"end": 2897,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2882,
											"end": 2897,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2882,
											"end": 2897,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2882,
											"end": 2897,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2882,
											"end": 2897,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2882,
											"end": 2897,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2882,
											"end": 2897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2882,
											"end": 2897,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2882,
											"end": 2897,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2882,
											"end": 2897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2882,
											"end": 2897,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2903,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10366,
											"end": 10379,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10399,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10392,
											"end": 10404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10412,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16879,
											"end": 16886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16904,
											"end": 16920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 16912,
											"end": 16919,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16904,
											"end": 16911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 16904,
											"end": 16920,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16904,
											"end": 16920,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 16904,
											"end": 16920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16899,
											"end": 16963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 16899,
											"end": 16963,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16929,
											"end": 16963,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16899,
											"end": 16963,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 16899,
											"end": 16963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16983,
											"end": 16998,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16983,
											"end": 17013,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16803,
											"end": 17021,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16325,
											"end": 16338,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16341,
											"end": 16357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 16349,
											"end": 16356,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16341,
											"end": 16348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 16341,
											"end": 16357,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16341,
											"end": 16357,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 16341,
											"end": 16357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16325,
											"end": 16357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16374,
											"end": 16402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16374,
											"end": 16402,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16374,
											"end": 16402,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 16370,
											"end": 16545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 16370,
											"end": 16545,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16422,
											"end": 16466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 16439,
											"end": 16444,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16422,
											"end": 16466,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 16422,
											"end": 16466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16417,
											"end": 16545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 16417,
											"end": 16545,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16494,
											"end": 16529,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16417,
											"end": 16545,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 16417,
											"end": 16545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16572,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16592,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16557,
											"end": 16581,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16608,
											"end": 16636,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 16314,
											"end": 16644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16644,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3382,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3287,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3327,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3327,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3327,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3382,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3287,
											"end": 3382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3369,
											"end": 3374,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3352,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3353,
											"end": 3362,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3362,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3363,
											"end": 3364,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3374,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3374,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3343,
											"end": 3374,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3374,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3374,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3374,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3374,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3287,
											"end": 3382,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3382,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3287,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2976,
											"end": 2991,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3000,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 3006,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20584,
											"end": 20611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 20614,
											"end": 20641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 20633,
											"end": 20640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 20614,
											"end": 20632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 20614,
											"end": 20641,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 20614,
											"end": 20641,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 20614,
											"end": 20641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20584,
											"end": 20641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20584,
											"end": 20641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20699,
											"end": 20703,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20658,
											"end": 20703,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 20674,
											"end": 20693,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20658,
											"end": 20703,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 20658,
											"end": 20703,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 20654,
											"end": 20740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 20654,
											"end": 20740,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20712,
											"end": 20740,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 20654,
											"end": 20740,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 20654,
											"end": 20740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20754,
											"end": 20781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19550,
											"end": 19565,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19550,
											"end": 19574,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 19778,
											"end": 19804,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 19778,
											"end": 19804,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 19175,
											"end": 19205,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 19175,
											"end": 19205,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19175,
											"end": 19205,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18868,
											"end": 18896,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 18868,
											"end": 18896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 19153,
											"end": 19173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19153,
											"end": 19173,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 19153,
											"end": 19173,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 19150,
											"end": 19206,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 20940,
											"end": 21120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 20940,
											"end": 21120,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21033,
											"end": 21076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 21050,
											"end": 21054,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 17752,
											"end": 17916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 21033,
											"end": 21076,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 21033,
											"end": 21076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21028,
											"end": 21120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 21028,
											"end": 21120,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21085,
											"end": 21120,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 21028,
											"end": 21120,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 21028,
											"end": 21120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21137,
											"end": 21153,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 21137,
											"end": 21153,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21133,
											"end": 21185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 21133,
											"end": 21185,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21162,
											"end": 21185,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 21133,
											"end": 21185,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 21133,
											"end": 21185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21334,
											"end": 21349,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21331,
											"end": 21491,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 21331,
											"end": 21491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 21331,
											"end": 21491,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21474,
											"end": 21475,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 21453,
											"end": 21472,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 21446,
											"end": 21476,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 21331,
											"end": 21491,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 21331,
											"end": 21491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21889,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 21871,
											"end": 21895,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21869,
											"end": 21895,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21940,
											"end": 21962,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21938,
											"end": 21962,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15094,
											"end": 15105,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 15069,
											"end": 15092,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 15065,
											"end": 15106,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 15052,
											"end": 15115,
											"name": "OR",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15052,
											"end": 15115,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22233,
											"end": 22250,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22233,
											"end": 22259,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 22233,
											"end": 22408,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22528,
											"end": 22575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 22528,
											"end": 22575,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 22524,
											"end": 23151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 22524,
											"end": 23151,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 22633,
											"end": 22634,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 22623,
											"end": 22634,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 22623,
											"end": 22634,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 22601,
											"end": 22620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22756,
											"end": 22773,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 22756,
											"end": 22786,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22752,
											"end": 23136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 22752,
											"end": 23136,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 22894,
											"end": 22907,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 22894,
											"end": 22907,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22879,
											"end": 22890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22879,
											"end": 22907,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 22875,
											"end": 23117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 22875,
											"end": 23117,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23058,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23071,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23093,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23093,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23041,
											"end": 23093,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 22875,
											"end": 23117,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 22875,
											"end": 23117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22582,
											"end": 23151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 22524,
											"end": 23151,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 22524,
											"end": 23151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23198,
											"end": 23205,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23194,
											"end": 23196,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 23188,
											"end": 23192,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23179,
											"end": 23206,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 20573,
											"end": 23267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20573,
											"end": 23267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20573,
											"end": 23267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20442,
											"end": 23267,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 3967,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3861,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 3960,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3939,
											"end": 3960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3939,
											"end": 3960,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3939,
											"end": 3960,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3861,
											"end": 3967,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 23363,
											"end": 23556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 23526,
											"end": 23530,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23532,
											"end": 23534,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23536,
											"end": 23543,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23509,
											"end": 23525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 23509,
											"end": 23548,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2667,
											"end": 2688,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2688,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2667,
											"end": 2688,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2674,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2667,
											"end": 2674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2688,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2667,
											"end": 2688,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2688,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2688,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2667,
											"end": 2688,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2667,
											"end": 2688,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2667,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2688,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2694,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 3012,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3106,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3186,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 3092,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3186,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3092,
											"end": 3186,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3174,
											"end": 3178,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3148,
											"end": 3157,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3167,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3167,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3169,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 3158,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3178,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3178,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3178,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3178,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3178,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3178,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3178,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3178,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3178,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3148,
											"end": 3178,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3134,
											"end": 3137,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3134,
											"end": 3137,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3134,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3134,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3137,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 3092,
											"end": 3186,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 11705,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11777,
											"end": 11784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11820,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 11839,
											"end": 11846,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11820,
											"end": 11838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 11820,
											"end": 11847,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7319,
											"end": 7326,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7343,
											"end": 7362,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7343,
											"end": 7362,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 7339,
											"end": 7399,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7399,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7399,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 7339,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7435,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1419,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7417,
											"end": 7472,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7472,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7480,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 10488,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10544,
											"end": 10557,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10577,
											"end": 10584,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 10570,
											"end": 10584,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1009,
											"end": 2044,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1009,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 6337,
											"end": 6349,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6337,
											"end": 6349,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6321,
											"end": 6334,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6321,
											"end": 6334,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6321,
											"end": 6349,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6321,
											"end": 6349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1096,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 1083,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1135,
											"end": 1141,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 1135,
											"end": 1141,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1135,
											"end": 1141,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1135,
											"end": 1141,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7898,
											"end": 7900,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7880,
											"end": 7901,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7937,
											"end": 7939,
											"name": "PUSH",
											"source": 8,
											"value": "5F"
										},
										{
											"begin": 7917,
											"end": 7935,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7917,
											"end": 7935,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7917,
											"end": 7935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7910,
											"end": 7940,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7976,
											"end": 8010,
											"name": "PUSH",
											"source": 8,
											"value": "574F414820686F6C6420757020746865206D696E74206973206E6F7420796574"
										},
										{
											"begin": 7956,
											"end": 7974,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7956,
											"end": 7974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7956,
											"end": 7974,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8011,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8047,
											"end": 8081,
											"name": "PUSH",
											"source": 8,
											"value": "206C6976652C2061206C6974746C6520746F6F206561726C792074686572652E"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8020,
											"end": 8082,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8119,
											"end": 8152,
											"name": "PUSH",
											"source": 8,
											"value": "2E2E206F72206C6174653F205472616E736D697373696F6E20456E64696E6700"
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8091,
											"end": 8153,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8170,
											"end": 8189,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 8170,
											"end": 8189,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 1126,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1256,
											"end": 1271,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 1248,
											"end": 1339,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1339,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1339,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1339,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1339,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 8404,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1339,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1248,
											"end": 1339,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8405,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8441,
											"end": 8443,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 8421,
											"end": 8439,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8421,
											"end": 8439,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8421,
											"end": 8439,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8444,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8480,
											"end": 8514,
											"name": "PUSH",
											"source": 8,
											"value": "6D757374206D696E74206174206C656173742031206E66742C2030206973206E"
										},
										{
											"begin": 8460,
											"end": 8478,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8460,
											"end": 8478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8460,
											"end": 8478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8453,
											"end": 8515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8551,
											"end": 8584,
											"name": "PUSH",
											"source": 8,
											"value": "6F7420616C6C6F7765642E205472616E736D697373696F6E20456E64696E6700"
										},
										{
											"begin": 8531,
											"end": 8549,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8531,
											"end": 8549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8531,
											"end": 8549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8524,
											"end": 8585,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8602,
											"end": 8621,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8602,
											"end": 8621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 8200,
											"end": 8627,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1339,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 1248,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1387,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 1378,
											"end": 1387,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 1363,
											"end": 1374,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1360,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 1354,
											"end": 1374,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1354,
											"end": 1374,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 1354,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1387,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1387,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 1346,
											"end": 1445,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1445,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1346,
											"end": 1445,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1346,
											"end": 1445,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1445,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8967,
											"end": 8969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1346,
											"end": 1445,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1346,
											"end": 1445,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8949,
											"end": 8970,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9006,
											"end": 9008,
											"name": "PUSH",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8979,
											"end": 9009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9045,
											"end": 9079,
											"name": "PUSH",
											"source": 8,
											"value": "6C6F6F6B73206C696B652077652061726520706F70756C6172206D6178207375"
										},
										{
											"begin": 9025,
											"end": 9043,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9025,
											"end": 9043,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9025,
											"end": 9043,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9018,
											"end": 9080,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C1C1B1E481A185CC81899595B881C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9089,
											"end": 9140,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9176,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9157,
											"end": 9176,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 8765,
											"end": 9182,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1445,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 1346,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1464,
											"end": 1485,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1460,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 1460,
											"end": 1942,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1554,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1538,
											"end": 1549,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1538,
											"end": 1554,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1538,
											"end": 1554,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 1530,
											"end": 1579,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1579,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1579,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1530,
											"end": 1579,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1579,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9389,
											"end": 9391,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1530,
											"end": 1579,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1530,
											"end": 1579,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9371,
											"end": 9392,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9428,
											"end": 9430,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 9408,
											"end": 9426,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9408,
											"end": 9426,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9408,
											"end": 9426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9401,
											"end": 9431,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7363C90189030BA1030903A34B6B2901D149"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9440,
											"end": 9490,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9507,
											"end": 9525,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9507,
											"end": 9525,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 9187,
											"end": 9531,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1579,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 1530,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1616,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1616,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1593,
											"end": 1616,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1590,
											"end": 1862,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1590,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 1590,
											"end": 1862,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1665,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2142,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 1633,
											"end": 1686,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1686,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1633,
											"end": 1686,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1633,
											"end": 1686,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1686,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9740,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1633,
											"end": 1686,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1633,
											"end": 1686,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1686,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9720,
											"end": 9741,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9777,
											"end": 9779,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 9757,
											"end": 9775,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9757,
											"end": 9775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9757,
											"end": 9775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9750,
											"end": 9780,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08105B1B1BDDDB1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9796,
											"end": 9814,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9796,
											"end": 9814,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 9814,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9789,
											"end": 9834,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1633,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 9536,
											"end": 9875,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1633,
											"end": 1686,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 1633,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1749,
											"end": 1759,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1748,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1728,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1728,
											"end": 1760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1760,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1760,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1831,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 1817,
											"end": 1831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1783,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1802,
											"end": 1813,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1760,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1783,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 1783,
											"end": 1813,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1783,
											"end": 1813,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1783,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1783,
											"end": 1831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1783,
											"end": 1831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1775,
											"end": 1850,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1850,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1775,
											"end": 1850,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1850,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10082,
											"end": 10084,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1775,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1775,
											"end": 1850,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10064,
											"end": 10085,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10121,
											"end": 10123,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 10101,
											"end": 10119,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10101,
											"end": 10119,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10101,
											"end": 10119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10094,
											"end": 10124,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481B5A5B9D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10140,
											"end": 10158,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10140,
											"end": 10158,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10140,
											"end": 10158,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10133,
											"end": 10177,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10194,
											"end": 10212,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10194,
											"end": 10212,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1775,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 9880,
											"end": 10218,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1775,
											"end": 1850,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1775,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1590,
											"end": 1862,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 1590,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 1911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1897,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 1893,
											"end": 1897,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 1893,
											"end": 1911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 1893,
											"end": 1911,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1893,
											"end": 1911,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 1893,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1889,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1911,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1911,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 1872,
											"end": 1934,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1934,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1872,
											"end": 1934,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1934,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10598,
											"end": 10600,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1934,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1872,
											"end": 1934,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1934,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10580,
											"end": 10601,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10637,
											"end": 10639,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10617,
											"end": 10635,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10617,
											"end": 10635,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10617,
											"end": 10635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10610,
											"end": 10640,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "86DEE6E840C8DECAE6DC4EE840DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10656,
											"end": 10674,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10656,
											"end": 10674,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10656,
											"end": 10674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10649,
											"end": 10697,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 10396,
											"end": 10738,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1934,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 1872,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 1960,
											"end": 1970,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1972,
											"end": 1983,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 1950,
											"end": 1984,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1950,
											"end": 1984,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 1950,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2022,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2011,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2038,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2038,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2038,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 1991,
											"end": 2038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2038,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 1991,
											"end": 2038,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1991,
											"end": 2038,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 1991,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2038,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2038,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1009,
											"end": 2044,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17474,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17495,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17516,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17456,
											"end": 17505,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17532,
											"end": 17587,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17361,
											"end": 17595,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24329,
											"end": 24360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 24342,
											"end": 24346,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24348,
											"end": 24350,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24352,
											"end": 24359,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24329,
											"end": 24341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 24329,
											"end": 24360,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 24329,
											"end": 24360,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 24329,
											"end": 24360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24375,
											"end": 24389,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 24375,
											"end": 24389,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 24375,
											"end": 24389,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 24375,
											"end": 24394,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 24371,
											"end": 24554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 24371,
											"end": 24554,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 24414,
											"end": 24470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 24445,
											"end": 24449,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24451,
											"end": 24453,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24455,
											"end": 24462,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24464,
											"end": 24469,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24414,
											"end": 24444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 24414,
											"end": 24470,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 24414,
											"end": 24470,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 24414,
											"end": 24470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24409,
											"end": 24554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 24409,
											"end": 24554,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24538,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 24409,
											"end": 24554,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 24409,
											"end": 24554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24154,
											"end": 24561,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 418,
											"end": 455,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 2308,
											"end": 2315,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2284,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 2284,
											"end": 2381,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2284,
											"end": 2381,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2381,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2381,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2284,
											"end": 2381,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10945,
											"end": 10947,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2381,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2284,
											"end": 2381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2284,
											"end": 2381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10927,
											"end": 10948,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10984,
											"end": 10986,
											"name": "PUSH",
											"source": 8,
											"value": "2F"
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10957,
											"end": 10987,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11023,
											"end": 11057,
											"name": "PUSH",
											"source": 8,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 11003,
											"end": 11021,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11003,
											"end": 11021,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11003,
											"end": 11021,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11058,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11074,
											"end": 11092,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11074,
											"end": 11092,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11074,
											"end": 11092,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11112,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11129,
											"end": 11148,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 11129,
											"end": 11148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 10743,
											"end": 11154,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2381,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 2284,
											"end": 2381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2392,
											"end": 2420,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 2423,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 2423,
											"end": 2433,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2423,
											"end": 2433,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 2423,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2392,
											"end": 2433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2392,
											"end": 2433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2467,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2479,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2529,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 2531,
											"end": 2538,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2564,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 2565,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 2447,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2580,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2586,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3477,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3490,
											"end": 3511,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 6337,
											"end": 6349,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6337,
											"end": 6349,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6321,
											"end": 6334,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6321,
											"end": 6334,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6321,
											"end": 6349,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6321,
											"end": 6349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6386,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3527,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 3514,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3527,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3561,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 3588,
											"end": 3598,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3578,
											"end": 3599,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3578,
											"end": 3599,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 3578,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3611,
											"end": 3626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3655,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3823,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 3641,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3665,
											"end": 3678,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3678,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3823,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 3641,
											"end": 3823,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3728,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 3712,
											"end": 3713,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 3704,
											"end": 3714,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3704,
											"end": 3714,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 3704,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3812,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 3700,
											"end": 3812,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3763,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3764,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3812,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 3700,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3683,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 3680,
											"end": 3683,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3680,
											"end": 3683,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3680,
											"end": 3683,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 3680,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3683,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 3641,
											"end": 3823,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3823,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 3641,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3840,
											"end": 3846,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3840,
											"end": 3846,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3393,
											"end": 3854,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2700,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2796,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2783,
											"end": 2796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2783,
											"end": 2816,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13019,
											"end": 13021,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13001,
											"end": 13022,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13058,
											"end": 13060,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 13038,
											"end": 13056,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13038,
											"end": 13056,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13038,
											"end": 13056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13031,
											"end": 13061,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13097,
											"end": 13131,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13077,
											"end": 13095,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 13077,
											"end": 13095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13077,
											"end": 13095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13070,
											"end": 13132,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13148,
											"end": 13166,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 13148,
											"end": 13166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13148,
											"end": 13166,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13141,
											"end": 13177,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13194,
											"end": 13213,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 13194,
											"end": 13213,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 12817,
											"end": 13219,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13426,
											"end": 13428,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13408,
											"end": 13429,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13408,
											"end": 13429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13408,
											"end": 13429,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13445,
											"end": 13463,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13445,
											"end": 13463,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13445,
											"end": 13463,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13438,
											"end": 13468,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13504,
											"end": 13538,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13484,
											"end": 13502,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 13484,
											"end": 13502,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13484,
											"end": 13502,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13477,
											"end": 13539,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13556,
											"end": 13574,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 13556,
											"end": 13574,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 13224,
											"end": 13580,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18174,
											"end": 18456,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 18174,
											"end": 18456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18239,
											"end": 18243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18329,
											"end": 18342,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 18329,
											"end": 18342,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 18319,
											"end": 18326,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18319,
											"end": 18342,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 18276,
											"end": 18429,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18276,
											"end": 18429,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 18276,
											"end": 18429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 18276,
											"end": 18429,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18397,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18406,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18380,
											"end": 18424,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18429,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 18380,
											"end": 18429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18174,
											"end": 18456,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12860,
											"end": 14135,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 12860,
											"end": 14135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12927,
											"end": 12934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12962,
											"end": 12969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13064,
											"end": 13077,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 13064,
											"end": 13077,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13057,
											"end": 13061,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13057,
											"end": 13077,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 13053,
											"end": 14068,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13053,
											"end": 14068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 13053,
											"end": 14068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13102,
											"end": 13116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13119,
											"end": 13136,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13119,
											"end": 13142,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13208,
											"end": 13232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13208,
											"end": 13232,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13204,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 13204,
											"end": 14049,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "tag",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13880,
											"end": 13891,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13951,
											"end": 13957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13933,
											"end": 13950,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13933,
											"end": 13958,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 13873,
											"end": 13986,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13204,
											"end": 14049,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 13204,
											"end": 14049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13079,
											"end": 14068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13053,
											"end": 14068,
											"name": "tag",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 13053,
											"end": 14068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14096,
											"end": 14127,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 34314,
											"end": 34426,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 34314,
											"end": 34426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 34391,
											"end": 34418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 34401,
											"end": 34403,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 34405,
											"end": 34413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 34391,
											"end": 34418,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 34391,
											"end": 34418,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 34391,
											"end": 34418,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 34391,
											"end": 34418,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 34391,
											"end": 34418,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 34391,
											"end": 34418,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 34391,
											"end": 34418,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 34391,
											"end": 34418,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 34391,
											"end": 34418,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 34391,
											"end": 34418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 34391,
											"end": 34418,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 34391,
											"end": 34418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 34391,
											"end": 34400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 34391,
											"end": 34418,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26808,
											"end": 26812,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26808,
											"end": 26812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26829,
											"end": 26874,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26874,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26874,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 26829,
											"end": 26874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 40569,
											"end": 40579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26896,
											"end": 26900,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 26896,
											"end": 26900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26902,
											"end": 26909,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 26902,
											"end": 26909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26911,
											"end": 26916,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 26911,
											"end": 26916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "tag",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "440"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "tag",
											"source": 5,
											"value": "440"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "tag",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 26829,
											"end": 26917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "442"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "446"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "tag",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "tag",
											"source": 5,
											"value": "446"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27112,
											"end": 27125,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27112,
											"end": 27125,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 27108,
											"end": 27343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "448"
										},
										{
											"begin": 27108,
											"end": 27343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 27158,
											"end": 27198,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 27108,
											"end": 27343,
											"name": "tag",
											"source": 5,
											"value": "448"
										},
										{
											"begin": 27108,
											"end": 27343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 27301,
											"end": 27307,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27295,
											"end": 27308,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 27286,
											"end": 27292,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 27282,
											"end": 27284,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 27278,
											"end": 27293,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 27271,
											"end": 27309,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "tag",
											"source": 5,
											"value": "442"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26988,
											"end": 27052,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26988,
											"end": 27052,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 26988,
											"end": 27052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "tag",
											"source": 5,
											"value": "450"
										},
										{
											"begin": 26825,
											"end": 27354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26645,
											"end": 27361,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 886,
											"end": 988,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 886,
											"end": 988,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 946,
											"end": 959,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 975,
											"end": 982,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 968,
											"end": 982,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 968,
											"end": 982,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 968,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 968,
											"end": 982,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 968,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 968,
											"end": 982,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 437,
											"end": 1144,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 437,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 493,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 542,
											"end": 556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 581,
											"end": 586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 559,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 559,
											"end": 587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 559,
											"end": 587,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 559,
											"end": 587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 590,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 559,
											"end": 591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 542,
											"end": 591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 542,
											"end": 591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 628,
											"end": 646,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 605,
											"end": 646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 766,
											"end": 794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 766,
											"end": 794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 766,
											"end": 794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 766,
											"end": 794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 852,
											"end": 857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 986,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 975,
											"end": 989,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 975,
											"end": 989,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 970,
											"end": 1000,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 852,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1001,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1069,
											"end": 1079,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 1065,
											"end": 1086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 1081,
											"end": 1086,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1086,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 1065,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 437,
											"end": 1144,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 437,
											"end": 1144,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33541,
											"end": 34230,
											"name": "tag",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 33541,
											"end": 34230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 33672,
											"end": 33691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "472"
										},
										{
											"begin": 33678,
											"end": 33680,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 33682,
											"end": 33690,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 33672,
											"end": 33677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "473"
										},
										{
											"begin": 33672,
											"end": 33691,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 33672,
											"end": 33691,
											"name": "tag",
											"source": 5,
											"value": "472"
										},
										{
											"begin": 33672,
											"end": 33691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33733,
											"end": 33747,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 33733,
											"end": 33747,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 33733,
											"end": 33747,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 33733,
											"end": 33752,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 33729,
											"end": 34212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 33729,
											"end": 34212,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 33787,
											"end": 33800,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 33787,
											"end": 33800,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 33835,
											"end": 33849,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 33835,
											"end": 33849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 33835,
											"end": 33849,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 33868,
											"end": 34101,
											"name": "tag",
											"source": 5,
											"value": "475"
										},
										{
											"begin": 33868,
											"end": 34101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 33899,
											"end": 33961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 33938,
											"end": 33939,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 33942,
											"end": 33944,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 33946,
											"end": 33953,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 33946,
											"end": 33953,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 33946,
											"end": 33953,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 33946,
											"end": 33953,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 33946,
											"end": 33953,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 33946,
											"end": 33953,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 33955,
											"end": 33960,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 33899,
											"end": 33929,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 33899,
											"end": 33961,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 33899,
											"end": 33961,
											"name": "tag",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 33899,
											"end": 33961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 33894,
											"end": 34061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "479"
										},
										{
											"begin": 33894,
											"end": 34061,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 33997,
											"end": 34037,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 33997,
											"end": 34037,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33997,
											"end": 34037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 33997,
											"end": 34037,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 33997,
											"end": 34037,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 33997,
											"end": 34037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 33997,
											"end": 34037,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 33997,
											"end": 34037,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 33997,
											"end": 34037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 33997,
											"end": 34037,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 33997,
											"end": 34037,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 33997,
											"end": 34037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 33997,
											"end": 34037,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 33894,
											"end": 34061,
											"name": "tag",
											"source": 5,
											"value": "479"
										},
										{
											"begin": 33894,
											"end": 34061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 34096,
											"end": 34099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 34088,
											"end": 34093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 34088,
											"end": 34099,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 33868,
											"end": 34101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "475"
										},
										{
											"begin": 33868,
											"end": 34101,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 34183,
											"end": 34186,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 34166,
											"end": 34179,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 34166,
											"end": 34179,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 34166,
											"end": 34186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 34162,
											"end": 34196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 34162,
											"end": 34196,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 34188,
											"end": 34196,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 34188,
											"end": 34196,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 34188,
											"end": 34196,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 34162,
											"end": 34196,
											"name": "tag",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 34162,
											"end": 34196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 33754,
											"end": 34212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 33754,
											"end": 34212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 33541,
											"end": 34230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 33541,
											"end": 34230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 33541,
											"end": 34230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 33541,
											"end": 34230,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9900,
											"end": 10790,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 9900,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9953,
											"end": 9960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9953,
											"end": 9960,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10028,
											"end": 10043,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10028,
											"end": 10043,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10024,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 10024,
											"end": 10123,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10063,
											"end": 10078,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10063,
											"end": 10078,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10063,
											"end": 10078,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10106,
											"end": 10108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10096,
											"end": 10108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10024,
											"end": 10123,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 10024,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10149,
											"end": 10155,
											"name": "PUSH",
											"source": 1,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10140,
											"end": 10145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10140,
											"end": 10155,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10136,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 10136,
											"end": 10235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10190,
											"name": "PUSH",
											"source": 1,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10175,
											"end": 10190,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10175,
											"end": 10190,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10175,
											"end": 10190,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10218,
											"end": 10220,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10208,
											"end": 10220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10136,
											"end": 10235,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 10136,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10261,
											"end": 10267,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10252,
											"end": 10257,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10252,
											"end": 10267,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10248,
											"end": 10347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 10248,
											"end": 10347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10296,
											"end": 10302,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10287,
											"end": 10302,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10287,
											"end": 10302,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10287,
											"end": 10302,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10330,
											"end": 10332,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 10320,
											"end": 10332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10248,
											"end": 10347,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 10248,
											"end": 10347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10373,
											"end": 10378,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 10364,
											"end": 10369,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10360,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 10360,
											"end": 10456,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10407,
											"end": 10412,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 10398,
											"end": 10412,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10412,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10398,
											"end": 10412,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10440,
											"end": 10441,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 10430,
											"end": 10441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10360,
											"end": 10456,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 10360,
											"end": 10456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10482,
											"end": 10487,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 10473,
											"end": 10478,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10487,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10469,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 10469,
											"end": 10565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10516,
											"end": 10521,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 10507,
											"end": 10521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10507,
											"end": 10521,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10507,
											"end": 10521,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10549,
											"end": 10550,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10539,
											"end": 10550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10469,
											"end": 10565,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 10469,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10596,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10582,
											"end": 10587,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10582,
											"end": 10596,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10578,
											"end": 10674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 10578,
											"end": 10674,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10630,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10616,
											"end": 10630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10630,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10630,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10658,
											"end": 10659,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10648,
											"end": 10659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10578,
											"end": 10674,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 10578,
											"end": 10674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10705,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 10691,
											"end": 10696,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10691,
											"end": 10705,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 10687,
											"end": 10751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10736,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10725,
											"end": 10736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10777,
											"end": 10783,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9900,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9900,
											"end": 10790,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27823,
											"end": 30789,
											"name": "tag",
											"source": 5,
											"value": "473"
										},
										{
											"begin": 27823,
											"end": 30789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 27919,
											"end": 27932,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 27919,
											"end": 27932,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 27947,
											"end": 27960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 27943,
											"end": 27987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "502"
										},
										{
											"begin": 27943,
											"end": 27987,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 27969,
											"end": 27987,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 27969,
											"end": 27987,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B562E8DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27969,
											"end": 27987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 27969,
											"end": 27987,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 27969,
											"end": 27987,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 27969,
											"end": 27987,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 27969,
											"end": 27987,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 27969,
											"end": 27987,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 27969,
											"end": 27987,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27969,
											"end": 27987,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 27969,
											"end": 27987,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 27969,
											"end": 27987,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 27969,
											"end": 27987,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 27943,
											"end": 27987,
											"name": "tag",
											"source": 5,
											"value": "502"
										},
										{
											"begin": 27943,
											"end": 27987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28493,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28546,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 28513,
											"end": 28545,
											"name": "PUSH",
											"source": 5,
											"value": "10000000000000001"
										},
										{
											"begin": 28501,
											"end": 28546,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 28501,
											"end": 28546,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28546,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 28789,
											"end": 28820,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 28789,
											"end": 28820,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 28789,
											"end": 28820,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 28789,
											"end": 28806,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 28789,
											"end": 28820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28789,
											"end": 28820,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 28789,
											"end": 28820,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 28789,
											"end": 28820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 28789,
											"end": 28820,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 15525,
											"end": 15540,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15525,
											"end": 15540,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15499,
											"end": 15523,
											"name": "PUSH",
											"source": 5,
											"value": "E1"
										},
										{
											"begin": 15495,
											"end": 15541,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 15094,
											"end": 15105,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 15069,
											"end": 15092,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 15065,
											"end": 15106,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 15062,
											"end": 15114,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15052,
											"end": 15115,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15052,
											"end": 15115,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 28789,
											"end": 28962,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28789,
											"end": 28962,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 29024,
											"end": 29047,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 29024,
											"end": 29047,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 29024,
											"end": 29047,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 29024,
											"end": 29047,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28789,
											"end": 28820,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 28789,
											"end": 28820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 29789,
											"end": 29814,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 28475,
											"end": 28497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 29642,
											"end": 29977,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 30303,
											"end": 30304,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 30289,
											"end": 30301,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 30285,
											"end": 30305,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 30243,
											"end": 30589,
											"name": "tag",
											"source": 5,
											"value": "508"
										},
										{
											"begin": 30243,
											"end": 30589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 30344,
											"end": 30347,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 30335,
											"end": 30342,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 30332,
											"end": 30348,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 30243,
											"end": 30589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "510"
										},
										{
											"begin": 30243,
											"end": 30589,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 30562,
											"end": 30569,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 30552,
											"end": 30560,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 30549,
											"end": 30550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 30522,
											"end": 30547,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 30519,
											"end": 30520,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 30516,
											"end": 30517,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 30511,
											"end": 30570,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 30397,
											"end": 30398,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 30384,
											"end": 30399,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 30243,
											"end": 30589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "508"
										},
										{
											"begin": 30243,
											"end": 30589,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 30243,
											"end": 30589,
											"name": "tag",
											"source": 5,
											"value": "510"
										},
										{
											"begin": 30243,
											"end": 30589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30622,
											"end": 30635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 30618,
											"end": 30663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "511"
										},
										{
											"begin": 30618,
											"end": 30663,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 30644,
											"end": 30663,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 30644,
											"end": 30663,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E0763"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30644,
											"end": 30663,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 30644,
											"end": 30663,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 30644,
											"end": 30663,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 30644,
											"end": 30663,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 30644,
											"end": 30663,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 30644,
											"end": 30663,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 30644,
											"end": 30663,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 30644,
											"end": 30663,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 30644,
											"end": 30663,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 30644,
											"end": 30663,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 30644,
											"end": 30663,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 30618,
											"end": 30663,
											"name": "tag",
											"source": 5,
											"value": "511"
										},
										{
											"begin": 30618,
											"end": 30663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 30680,
											"end": 30693,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 30680,
											"end": 30699,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3287,
											"end": 3382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3387,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "285"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "514"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "212"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "514"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "516"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "519"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "516"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "517"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "519"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "517"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "519"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "518"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "519"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "518"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "519"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "520"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "520"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "522"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "520"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "522"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 335,
											"end": 365,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 592,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 657,
											"end": 677,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 657,
											"end": 677,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 713,
											"end": 726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 713,
											"end": 726,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 706,
											"end": 727,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 696,
											"end": 728,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 696,
											"end": 728,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 686,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 686,
											"end": 746,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 742,
											"end": 743,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 740,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 732,
											"end": 744,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 686,
											"end": 746,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 686,
											"end": 746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 592,
											"end": 752,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 592,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 592,
											"end": 752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 592,
											"end": 752,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 757,
											"end": 937,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 757,
											"end": 937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 868,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 863,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 845,
											"end": 852,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 841,
											"end": 864,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 837,
											"end": 869,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 834,
											"end": 886,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 834,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 834,
											"end": 886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 882,
											"end": 883,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 880,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 872,
											"end": 884,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 834,
											"end": 886,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 834,
											"end": 886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 905,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 921,
											"end": 930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 905,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 905,
											"end": 931,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 1115,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 942,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1030,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1030,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1091,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1091,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1039,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 1039,
											"end": 1109,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1105,
											"end": 1106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1103,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1107,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1120,
											"end": 1306,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1120,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1229,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1211,
											"end": 1218,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1235,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1246,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1250,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 1290,
											"end": 1299,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 1271,
											"end": 1300,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1311,
											"end": 1569,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 1311,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1506,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 1393,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1401,
											"end": 1414,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1393,
											"end": 1506,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1393,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 1393,
											"end": 1506,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1483,
											"end": 1494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1483,
											"end": 1494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1483,
											"end": 1494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1477,
											"end": 1495,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1464,
											"end": 1475,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1464,
											"end": 1475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1464,
											"end": 1475,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1496,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1431,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1432,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1393,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 1393,
											"end": 1506,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1393,
											"end": 1506,
											"name": "tag",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 1393,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1531,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1515,
											"end": 1563,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1515,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 1515,
											"end": 1563,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1559,
											"end": 1560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1557,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1561,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1311,
											"end": 1569,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1574,
											"end": 1832,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 1574,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1616,
											"end": 1619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1659,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1660,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1679,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1669,
											"end": 1688,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1741,
											"end": 1744,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1730,
											"end": 1734,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1723,
											"end": 1728,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1719,
											"end": 1735,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 1697,
											"end": 1760,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1697,
											"end": 1760,
											"name": "tag",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 1697,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1814,
											"end": 1816,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1793,
											"end": 1808,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1789,
											"end": 1818,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1780,
											"end": 1819,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1780,
											"end": 1819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1780,
											"end": 1819,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1780,
											"end": 1819,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1825,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1776,
											"end": 1826,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1574,
											"end": 1832,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1832,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1837,
											"end": 2057,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1837,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1986,
											"end": 1988,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 1989,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 2047,
											"end": 2049,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 2006,
											"end": 2051,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2062,
											"end": 2242,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 2062,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2176,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2160,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2149,
											"end": 2172,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2177,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2194,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 2142,
											"end": 2194,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2180,
											"end": 2192,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2194,
											"name": "tag",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 2142,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2213,
											"end": 2236,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2213,
											"end": 2236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2242,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2455,
											"end": 2709,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 2455,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2523,
											"end": 2529,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2584,
											"end": 2586,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2581,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2559,
											"end": 2582,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2555,
											"end": 2587,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2604,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 2552,
											"end": 2604,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2600,
											"end": 2601,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2602,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2604,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 2552,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 2642,
											"end": 2651,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 2623,
											"end": 2652,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2623,
											"end": 2652,
											"name": "tag",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 2623,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2652,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2701,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2703,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2703,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2455,
											"end": 2709,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2896,
											"end": 3511,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2896,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3031,
											"end": 3040,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3029,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3018,
											"end": 3041,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3046,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3063,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 3011,
											"end": 3063,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3057,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3049,
											"end": 3061,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3063,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 3011,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3108,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3086,
											"end": 3109,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3146,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3169,
											"end": 3171,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3161,
											"end": 3167,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3158,
											"end": 3172,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3189,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 3155,
											"end": 3189,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3185,
											"end": 3186,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3183,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3189,
											"name": "tag",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 3155,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3223,
											"end": 3229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3221,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3208,
											"end": 3230,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3198,
											"end": 3230,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3198,
											"end": 3230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3268,
											"end": 3275,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3265,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3257,
											"end": 3259,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3253,
											"end": 3266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3276,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 3239,
											"end": 3294,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3290,
											"end": 3291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3294,
											"name": "tag",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 3239,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3332,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3333,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3376,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 3342,
											"end": 3376,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3372,
											"end": 3373,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3370,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3374,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3376,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 3342,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3425,
											"end": 3432,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3422,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3416,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3407,
											"end": 3408,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3403,
											"end": 3417,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3401,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3395,
											"end": 3418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3391,
											"end": 3423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3433,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3385,
											"end": 3450,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3385,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 3385,
											"end": 3450,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3447,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3444,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3385,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 3385,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3477,
											"end": 3479,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3469,
											"end": 3480,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3480,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3480,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3480,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3505,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3505,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2896,
											"end": 3511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2896,
											"end": 3511,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2896,
											"end": 3511,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3516,
											"end": 3844,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3516,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3593,
											"end": 3599,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3601,
											"end": 3607,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3650,
											"end": 3659,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3641,
											"end": 3648,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 3660,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3665,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3630,
											"end": 3682,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3630,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 3630,
											"end": 3682,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3679,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3630,
											"end": 3682,
											"name": "tag",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 3630,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 3720,
											"end": 3729,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3701,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 3701,
											"end": 3730,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3701,
											"end": 3730,
											"name": "tag",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 3701,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3730,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 3783,
											"end": 3785,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3772,
											"end": 3781,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 3749,
											"end": 3787,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3749,
											"end": 3787,
											"name": "tag",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 3749,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3787,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3834,
											"end": 3836,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3832,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3806,
											"end": 3838,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3838,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3838,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3844,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3844,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3844,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3844,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3849,
											"end": 3976,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 3849,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3920,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3905,
											"end": 3908,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3901,
											"end": 3921,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3898,
											"end": 3899,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3922,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3941,
											"end": 3945,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3931,
											"end": 3946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3965,
											"end": 3969,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3962,
											"end": 3963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3970,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4613,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 3981,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4046,
											"end": 4051,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4117,
											"end": 4119,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4109,
											"end": 4115,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4120,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4103,
											"end": 4143,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4103,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 4103,
											"end": 4143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "tag",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4200,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4201,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4252,
											"end": 4267,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4267,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4248,
											"end": 4272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4248,
											"end": 4272,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4248,
											"end": 4272,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4276,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 4244,
											"end": 4277,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4282,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4228,
											"end": 4283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4228,
											"end": 4283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4228,
											"end": 4283,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4316,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4340,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4340,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4340,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4341,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4292,
											"end": 4364,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4292,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 4292,
											"end": 4364,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "tag",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 4344,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4384,
											"end": 4394,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4382,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4373,
											"end": 4395,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4413,
											"end": 4419,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4404,
											"end": 4419,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4404,
											"end": 4419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4443,
											"end": 4449,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4428,
											"end": 4450,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4486,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4480,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4469,
											"end": 4472,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4465,
											"end": 4481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4462,
											"end": 4487,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4459,
											"end": 4504,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4459,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 4459,
											"end": 4504,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4501,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4497,
											"end": 4498,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4490,
											"end": 4502,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4459,
											"end": 4504,
											"name": "tag",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 4459,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4550,
											"end": 4556,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4545,
											"end": 4548,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4538,
											"end": 4542,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4530,
											"end": 4536,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4543,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4557,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 4606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4598,
											"end": 4602,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4589,
											"end": 4595,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4596,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4573,
											"end": 4603,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4607,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4613,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4613,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4613,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4618,
											"end": 5069,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 4618,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4687,
											"end": 4693,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4740,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4728,
											"end": 4737,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4719,
											"end": 4726,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4738,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 4743,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4708,
											"end": 4760,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4708,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 4708,
											"end": 4760,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4756,
											"end": 4757,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 4758,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4708,
											"end": 4760,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 4708,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 4805,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4783,
											"end": 4806,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4829,
											"end": 4847,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4821,
											"end": 4827,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4818,
											"end": 4848,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4865,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 4815,
											"end": 4865,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 4862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4815,
											"end": 4865,
											"name": "tag",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 4815,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4884,
											"end": 4906,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4884,
											"end": 4906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4937,
											"end": 4941,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4929,
											"end": 4942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 4942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4952,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4915,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 4915,
											"end": 4970,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4964,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4956,
											"end": 4968,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4915,
											"end": 4970,
											"name": "tag",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 4915,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4989,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 5055,
											"end": 5062,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5050,
											"end": 5052,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5028,
											"end": 5030,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5024,
											"end": 5035,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4989,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 4989,
											"end": 5063,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5074,
											"end": 5328,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 5074,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5139,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5147,
											"end": 5153,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5188,
											"end": 5197,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5179,
											"end": 5186,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5175,
											"end": 5198,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5171,
											"end": 5203,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5220,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 5168,
											"end": 5220,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5213,
											"end": 5214,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5206,
											"end": 5218,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5220,
											"name": "tag",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 5168,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5239,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 5258,
											"end": 5267,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5239,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 5239,
											"end": 5268,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5239,
											"end": 5268,
											"name": "tag",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 5239,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5268,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5287,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 5318,
											"end": 5320,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5307,
											"end": 5316,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5321,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5287,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 5287,
											"end": 5322,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5287,
											"end": 5322,
											"name": "tag",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 5287,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5277,
											"end": 5322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5277,
											"end": 5322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5328,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5328,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5328,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5328,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5328,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5328,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5333,
											"end": 6000,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 5333,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5434,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5436,
											"end": 5442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5444,
											"end": 5450,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5458,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5505,
											"end": 5508,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5493,
											"end": 5502,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5503,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5476,
											"end": 5509,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5526,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 5473,
											"end": 5526,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5522,
											"end": 5523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5519,
											"end": 5520,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5524,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5526,
											"name": "tag",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 5473,
											"end": 5526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 5564,
											"end": 5573,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 5545,
											"end": 5574,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5545,
											"end": 5574,
											"name": "tag",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 5545,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5535,
											"end": 5574,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5535,
											"end": 5574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5593,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 5627,
											"end": 5629,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5616,
											"end": 5625,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5612,
											"end": 5630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5593,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 5593,
											"end": 5631,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5593,
											"end": 5631,
											"name": "tag",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 5593,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5583,
											"end": 5631,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5583,
											"end": 5631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5680,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5667,
											"end": 5676,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5663,
											"end": 5681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5650,
											"end": 5682,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5682,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5733,
											"end": 5735,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5718,
											"end": 5736,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5737,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5760,
											"end": 5778,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5752,
											"end": 5758,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5749,
											"end": 5779,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5746,
											"end": 5796,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5746,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 5746,
											"end": 5796,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 5793,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5794,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5746,
											"end": 5796,
											"name": "tag",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 5746,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5815,
											"end": 5837,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5815,
											"end": 5837,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5868,
											"end": 5872,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5860,
											"end": 5873,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5873,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5856,
											"end": 5883,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5846,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 5846,
											"end": 5901,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5897,
											"end": 5898,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5887,
											"end": 5899,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5846,
											"end": 5901,
											"name": "tag",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 5846,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5920,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 5986,
											"end": 5993,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5981,
											"end": 5983,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5968,
											"end": 5984,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5963,
											"end": 5965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5955,
											"end": 5966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5920,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 5920,
											"end": 5994,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5920,
											"end": 5994,
											"name": "tag",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 5920,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5910,
											"end": 5994,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5910,
											"end": 5994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5910,
											"end": 5994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 6000,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 6000,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 6000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 6000,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 6000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 6000,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 6000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 6000,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6005,
											"end": 6637,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 6005,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6178,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6228,
											"end": 6249,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6228,
											"end": 6249,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6228,
											"end": 6249,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6311,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6311,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6219,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6219,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6219,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6320,
											"end": 6342,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6320,
											"end": 6342,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6320,
											"end": 6342,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6151,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6147,
											"end": 6151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6399,
											"end": 6414,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6399,
											"end": 6414,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6399,
											"end": 6414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6399,
											"end": 6414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6373,
											"end": 6375,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6358,
											"end": 6376,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6358,
											"end": 6376,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6358,
											"end": 6376,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6151,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6442,
											"end": 6611,
											"name": "tag",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 6442,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6456,
											"end": 6462,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6453,
											"end": 6454,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6450,
											"end": 6463,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6442,
											"end": 6611,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6442,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 6442,
											"end": 6611,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6517,
											"end": 6530,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6517,
											"end": 6530,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6505,
											"end": 6531,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6505,
											"end": 6531,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6586,
											"end": 6601,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6586,
											"end": 6601,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6586,
											"end": 6601,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6586,
											"end": 6601,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6551,
											"end": 6563,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6551,
											"end": 6563,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6551,
											"end": 6563,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6551,
											"end": 6563,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6478,
											"end": 6479,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6471,
											"end": 6480,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6442,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 6442,
											"end": 6611,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6442,
											"end": 6611,
											"name": "tag",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 6442,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 6631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6631,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 6005,
											"end": 6637,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6005,
											"end": 6637,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6642,
											"end": 6902,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 6642,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6773,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6759,
											"end": 6768,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6750,
											"end": 6757,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6746,
											"end": 6769,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6742,
											"end": 6774,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6787,
											"end": 6788,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6785,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6777,
											"end": 6789,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "tag",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 6829,
											"end": 6838,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 6810,
											"end": 6839,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6810,
											"end": 6839,
											"name": "tag",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 6810,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6800,
											"end": 6839,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6858,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 6892,
											"end": 6894,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6890,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 6895,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6858,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 6858,
											"end": 6896,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6907,
											"end": 7287,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 6907,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6986,
											"end": 6987,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6982,
											"end": 6994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6982,
											"end": 6994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6982,
											"end": 6994,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 6982,
											"end": 6994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7029,
											"end": 7041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7029,
											"end": 7041,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7029,
											"end": 7041,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7050,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 7050,
											"end": 7111,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7104,
											"end": 7108,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 7096,
											"end": 7102,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7092,
											"end": 7109,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7082,
											"end": 7109,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7082,
											"end": 7109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7050,
											"end": 7111,
											"name": "tag",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 7050,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7157,
											"end": 7159,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7149,
											"end": 7155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7146,
											"end": 7160,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7126,
											"end": 7144,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7123,
											"end": 7161,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7120,
											"end": 7281,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7120,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 7120,
											"end": 7281,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7203,
											"end": 7213,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 7198,
											"end": 7201,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7194,
											"end": 7214,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7192,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7184,
											"end": 7215,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7238,
											"end": 7242,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 7235,
											"end": 7236,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7228,
											"end": 7243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7266,
											"end": 7270,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7271,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7120,
											"end": 7281,
											"name": "tag",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 7120,
											"end": 7281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7120,
											"end": 7281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 7287,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 7287,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 7287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6907,
											"end": 7287,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7292,
											"end": 7419,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 7292,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7353,
											"end": 7363,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 7348,
											"end": 7351,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7344,
											"end": 7364,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7341,
											"end": 7342,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7365,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7384,
											"end": 7388,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 7381,
											"end": 7382,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7374,
											"end": 7389,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7408,
											"end": 7412,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7405,
											"end": 7406,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7398,
											"end": 7413,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7485,
											"end": 7495,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 7480,
											"end": 7483,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7473,
											"end": 7474,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7466,
											"end": 7497,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7516,
											"end": 7520,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7513,
											"end": 7514,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7506,
											"end": 7521,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7540,
											"end": 7544,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7537,
											"end": 7538,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7530,
											"end": 7545,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7556,
											"end": 7691,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 7556,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7598,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7613,
											"end": 7656,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7613,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 7613,
											"end": 7656,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7636,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 7636,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 7636,
											"end": 7654,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7636,
											"end": 7654,
											"name": "tag",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 7636,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7683,
											"end": 7684,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7672,
											"end": 7685,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7672,
											"end": 7685,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7556,
											"end": 7691,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8632,
											"end": 8760,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 8632,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8675,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8703,
											"end": 8704,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8699,
											"end": 8705,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 8696,
											"end": 8697,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 8706,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8690,
											"end": 8729,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8690,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 8690,
											"end": 8729,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8709,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 8709,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 8709,
											"end": 8727,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8709,
											"end": 8727,
											"name": "tag",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 8709,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8745,
											"end": 8754,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8745,
											"end": 8754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8632,
											"end": 8760,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10223,
											"end": 10391,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 10223,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10263,
											"end": 10270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10329,
											"end": 10330,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10325,
											"end": 10326,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10321,
											"end": 10327,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10331,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10314,
											"end": 10315,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10311,
											"end": 10332,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10306,
											"end": 10307,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10299,
											"end": 10308,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10292,
											"end": 10309,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10288,
											"end": 10333,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10285,
											"end": 10356,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10285,
											"end": 10356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 10285,
											"end": 10356,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "tag",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10376,
											"end": 10385,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10376,
											"end": 10385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10223,
											"end": 10391,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11285,
											"end": 12812,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 11285,
											"end": 12812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11509,
											"end": 11512,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11547,
											"end": 11553,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11541,
											"end": 11554,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11573,
											"end": 11577,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11586,
											"end": 11637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 11630,
											"end": 11636,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11625,
											"end": 11628,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11620,
											"end": 11622,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11612,
											"end": 11618,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 11608,
											"end": 11623,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11586,
											"end": 11637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 11586,
											"end": 11637,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11586,
											"end": 11637,
											"name": "tag",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 11586,
											"end": 11637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11700,
											"end": 11713,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11700,
											"end": 11713,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 11675,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 11675,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 11675,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 11675,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11722,
											"end": 11777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 11700,
											"end": 11713,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 11675,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11744,
											"end": 11759,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11744,
											"end": 11759,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 11744,
											"end": 11759,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11722,
											"end": 11777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 11722,
											"end": 11777,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11722,
											"end": 11777,
											"name": "tag",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 11722,
											"end": 11777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11866,
											"end": 11879,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11866,
											"end": 11879,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11799,
											"end": 11819,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11799,
											"end": 11819,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11799,
											"end": 11819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11839,
											"end": 11840,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11839,
											"end": 11840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11926,
											"end": 11927,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 11948,
											"end": 11966,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11948,
											"end": 11966,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11948,
											"end": 11966,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 11948,
											"end": 11966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12001,
											"end": 12019,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12001,
											"end": 12019,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12001,
											"end": 12019,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12001,
											"end": 12019,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12028,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 12028,
											"end": 12121,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12106,
											"end": 12110,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 12096,
											"end": 12104,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12092,
											"end": 12111,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12080,
											"end": 12111,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12080,
											"end": 12111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12028,
											"end": 12121,
											"name": "tag",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 12028,
											"end": 12121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12169,
											"end": 12171,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12159,
											"end": 12167,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12156,
											"end": 12172,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12136,
											"end": 12154,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12133,
											"end": 12173,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12130,
											"end": 12297,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12130,
											"end": 12297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 12130,
											"end": 12297,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12196,
											"end": 12229,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12196,
											"end": 12229,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12252,
											"end": 12256,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 12249,
											"end": 12250,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12242,
											"end": 12257,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12282,
											"end": 12286,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12203,
											"end": 12206,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12270,
											"end": 12287,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12130,
											"end": 12297,
											"name": "tag",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 12130,
											"end": 12297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12313,
											"end": 12331,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12340,
											"end": 12450,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12340,
											"end": 12450,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12340,
											"end": 12450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 12340,
											"end": 12450,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12464,
											"end": 12465,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12459,
											"end": 12787,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12459,
											"end": 12787,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12459,
											"end": 12787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 12459,
											"end": 12787,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12306,
											"end": 12787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 12306,
											"end": 12787,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12340,
											"end": 12450,
											"name": "tag",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 12340,
											"end": 12450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12375,
											"end": 12399,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12375,
											"end": 12399,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12361,
											"end": 12400,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 12361,
											"end": 12400,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12420,
											"end": 12440,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12420,
											"end": 12440,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 12420,
											"end": 12440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12420,
											"end": 12440,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12340,
											"end": 12450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 12340,
											"end": 12450,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12459,
											"end": 12787,
											"name": "tag",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 12459,
											"end": 12787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11232,
											"end": 11233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11225,
											"end": 11239,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 11225,
											"end": 11239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11225,
											"end": 11239,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11269,
											"end": 11273,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11256,
											"end": 11274,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11256,
											"end": 11274,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12554,
											"end": 12555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12568,
											"end": 12737,
											"name": "tag",
											"source": 8,
											"value": "638"
										},
										{
											"begin": 12568,
											"end": 12737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12582,
											"end": 12590,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12579,
											"end": 12580,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12576,
											"end": 12591,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12568,
											"end": 12737,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12568,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 12568,
											"end": 12737,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12664,
											"end": 12678,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12664,
											"end": 12678,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12649,
											"end": 12662,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 12649,
											"end": 12662,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12649,
											"end": 12662,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12642,
											"end": 12679,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12707,
											"end": 12723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12707,
											"end": 12723,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12707,
											"end": 12723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12707,
											"end": 12723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12599,
											"end": 12609,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 12599,
											"end": 12609,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12568,
											"end": 12737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "638"
										},
										{
											"begin": 12568,
											"end": 12737,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12568,
											"end": 12737,
											"name": "tag",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 12568,
											"end": 12737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12572,
											"end": 12575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12572,
											"end": 12575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12768,
											"end": 12776,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12761,
											"end": 12766,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 12757,
											"end": 12777,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12750,
											"end": 12777,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 12750,
											"end": 12777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12306,
											"end": 12787,
											"name": "tag",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 12306,
											"end": 12787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12803,
											"end": 12806,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 12803,
											"end": 12806,
											"name": "SWAP12",
											"source": 8
										},
										{
											"begin": 11285,
											"end": 12812,
											"name": "SWAP11",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11285,
											"end": 12812,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13585,
											"end": 14074,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 13585,
											"end": 14074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13854,
											"end": 13869,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13854,
											"end": 13869,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13854,
											"end": 13869,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13836,
											"end": 13870,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13836,
											"end": 13870,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13906,
											"end": 13921,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13906,
											"end": 13921,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13901,
											"end": 13903,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13886,
											"end": 13904,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13886,
											"end": 13904,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13879,
											"end": 13922,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13953,
											"end": 13955,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13938,
											"end": 13956,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13938,
											"end": 13956,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13931,
											"end": 13965,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13931,
											"end": 13965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13931,
											"end": 13965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14001,
											"end": 14004,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 13996,
											"end": 13998,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 13981,
											"end": 13999,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13981,
											"end": 13999,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13974,
											"end": 14005,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13974,
											"end": 14005,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13974,
											"end": 14005,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13779,
											"end": 13783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13779,
											"end": 13783,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 14022,
											"end": 14068,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14048,
											"end": 14067,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14048,
											"end": 14067,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14046,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 14022,
											"end": 14068,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14022,
											"end": 14068,
											"name": "tag",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 14022,
											"end": 14068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14014,
											"end": 14068,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 13585,
											"end": 14074,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13585,
											"end": 14074,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14079,
											"end": 14328,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 14079,
											"end": 14328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14148,
											"end": 14154,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14201,
											"end": 14203,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14189,
											"end": 14198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14180,
											"end": 14187,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14176,
											"end": 14199,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14172,
											"end": 14204,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 14169,
											"end": 14221,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14169,
											"end": 14221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 14169,
											"end": 14221,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14217,
											"end": 14218,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14214,
											"end": 14215,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14207,
											"end": 14219,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14169,
											"end": 14221,
											"name": "tag",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 14169,
											"end": 14221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14249,
											"end": 14258,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14243,
											"end": 14259,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14268,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 14292,
											"end": 14297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14268,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 14268,
											"end": 14298,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"AllowlistLimit()": "b3807b1d",
							"addressMintedBalance(address)": "18cae269",
							"allowlist(address)": "a7cd52cb",
							"allowlistUsers(address[])": "5b9e3ccf",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"baseExtension()": "c6682862",
							"cost()": "13faede6",
							"getApproved(uint256)": "081812fc",
							"isAllowlisted(address)": "05a3b809",
							"isApprovedForAll(address,address)": "e985e9c5",
							"maxSupply()": "d5abeb01",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"onlyAllowlisted()": "674c02aa",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"ownerOfTokenIds(address)": "ca8a7d5e",
							"pause(bool)": "02329a29",
							"paused()": "5c975abb",
							"removeUsersFromAllowlist(address[])": "142b0fbe",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseExtension(string)": "da3ef23f",
							"setBaseURI(string)": "55f804b3",
							"setOnlyAllowlisted(bool)": "17dc10c4",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_initBaseURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AllowlistLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressMintedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowlist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"allowlistUsers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseExtension\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isAllowlisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onlyAllowlisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"ownerOfTokenIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"removeUsersFromAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newBaseExtension\",\"type\":\"string\"}],\"name\":\"setBaseExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setOnlyAllowlisted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fourtwo.sol\":\"fourtwo\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ERC721A.sol\":{\"keccak256\":\"0x9f5a967104a5603a1094fdb66aa218d1e2e2bfee8c8f534081c5dc75a1f248be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59cba8070007e8ac094138dc5edd5582f0198ef045d15cc66f61ae7630ef194d\",\"dweb:/ipfs/QmU3rwvKBbpz7sXwZ7aYCuacWkhNYJKcrMe9yQgrRQvZjh\"]},\"contracts/IERC721A.sol\":{\"keccak256\":\"0x8bb4a4d0e8649b403839485b5afd8d3a0a99917c868096566ef4787ab90e9a3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://569ca4f6327aad3dcee9b8c531b581ed626969d957cc23a2ad7f68c6eedeff52\",\"dweb:/ipfs/QmS2GDmqStyYVZmBTELaNK4kKjAdphM8gRtBycZjGitX6Z\"]},\"contracts/fourtwo.sol\":{\"keccak256\":\"0xc18e7633315cbc03e1dd1bf72193d264e29b258202a1349fc85261b134096131\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aaf3924f2daec7a2f0d479f497dfcaa6c59e978872a6ef9530c4604af8a58b49\",\"dweb:/ipfs/QmUb7mnezR25sYYXaziQUEDgL8wZiGYEdxLHbuY7H3NzJT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1047,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1320,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1322,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1324,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1326,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1330,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1334,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1339,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)1252_storage)"
							},
							{
								"astId": 1345,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1163,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "_status",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 3074,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "baseURI",
								"offset": 0,
								"slot": "10",
								"type": "t_string_storage"
							},
							{
								"astId": 3077,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "baseExtension",
								"offset": 0,
								"slot": "11",
								"type": "t_string_storage"
							},
							{
								"astId": 3080,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "cost",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 3083,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "maxSupply",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 3086,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "AllowlistLimit",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 3089,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "paused",
								"offset": 0,
								"slot": "15",
								"type": "t_bool"
							},
							{
								"astId": 3092,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "onlyAllowlisted",
								"offset": 1,
								"slot": "15",
								"type": "t_bool"
							},
							{
								"astId": 3096,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "allowlist",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 3100,
								"contract": "contracts/fourtwo.sol:fourtwo",
								"label": "addressMintedBalance",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)1252_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)1252_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)1252_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 1251,
										"contract": "contracts/fourtwo.sol:fourtwo",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							1039
						],
						"StringsUpgradeable": [
							174
						]
					},
					"id": 175,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
							"file": "./math/MathUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 175,
							"sourceUnit": 1040,
							"src": "126:36:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StringsUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "164:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 174,
							"linearizedBaseContracts": [
								174
							],
							"name": "StringsUpgradeable",
							"nameLocation": "207:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 6,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "257:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "232:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 4,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "232:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "268:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 9,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "315:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "292:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 7,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "292:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "333:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "508:636:0",
										"statements": [
											{
												"id": 55,
												"nodeType": "UncheckedBlock",
												"src": "518:620:0",
												"statements": [
													{
														"assignments": [
															18
														],
														"declarations": [
															{
																"constant": false,
																"id": 18,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "550:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 55,
																"src": "542:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 17,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "542:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 25,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 21,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "581:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 19,
																		"name": "MathUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1039,
																		"src": "559:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$1039_$",
																			"typeString": "type(library MathUpgradeable)"
																		}
																	},
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 876,
																	"src": "559:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "559:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "590:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "559:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "542:49:0"
													},
													{
														"assignments": [
															27
														],
														"declarations": [
															{
																"constant": false,
																"id": 27,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "619:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 55,
																"src": "605:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 26,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "605:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 32,
														"initialValue": {
															"arguments": [
																{
																	"id": 30,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "639:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "628:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 28,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "632:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "628:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "605:41:0"
													},
													{
														"assignments": [
															34
														],
														"declarations": [
															{
																"constant": false,
																"id": 34,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "668:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 55,
																"src": "660:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 33,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "660:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 35,
														"nodeType": "VariableDeclarationStatement",
														"src": "660:11:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "741:67:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "759:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "782:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "786:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "778:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "778:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "759:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 27,
																"isOffset": false,
																"isSlot": false,
																"src": "770:6:0",
																"valueSize": 1
															},
															{
																"declaration": 18,
																"isOffset": false,
																"isSlot": false,
																"src": "786:6:0",
																"valueSize": 1
															},
															{
																"declaration": 34,
																"isOffset": false,
																"isSlot": false,
																"src": "759:3:0",
																"valueSize": 1
															}
														],
														"id": 36,
														"nodeType": "InlineAssembly",
														"src": "732:76:0"
													},
													{
														"body": {
															"id": 51,
															"nodeType": "Block",
															"src": "834:267:0",
															"statements": [
																{
																	"expression": {
																		"id": 39,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "852:5:0",
																		"subExpression": {
																			"id": 38,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 34,
																			"src": "852:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 40,
																	"nodeType": "ExpressionStatement",
																	"src": "852:5:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "935:84:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "965:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "979:5:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "986:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "975:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "975:14:0"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "991:8:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "970:4:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "970:30:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "957:7:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "957:44:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "957:44:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 6,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "991:8:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 34,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "965:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 12,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "979:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 41,
																	"nodeType": "InlineAssembly",
																	"src": "926:93:0"
																},
																{
																	"expression": {
																		"id": 44,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 42,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "1036:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 43,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1036:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 45,
																	"nodeType": "ExpressionStatement",
																	"src": "1036:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 48,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 46,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "1069:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 47,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1078:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1069:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 50,
																	"nodeType": "IfStatement",
																	"src": "1065:21:0",
																	"trueBody": {
																		"id": 49,
																		"nodeType": "Break",
																		"src": "1081:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "828:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 52,
														"nodeType": "WhileStatement",
														"src": "821:280:0"
													},
													{
														"expression": {
															"id": 53,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1121:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 16,
														"id": 54,
														"nodeType": "Return",
														"src": "1114:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "342:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "446:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "463:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "455:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:15:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "493:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 14,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "493:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:15:0"
									},
									"scope": 174,
									"src": "437:707:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1323:111:0",
										"statements": [
											{
												"id": 75,
												"nodeType": "UncheckedBlock",
												"src": "1333:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 66,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "1376:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 69,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 60,
																				"src": "1406:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 67,
																				"name": "MathUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "1383:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$1039_$",
																					"typeString": "type(library MathUpgradeable)"
																				}
																			},
																			"id": 68,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 999,
																			"src": "1383:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 70,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1383:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1415:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1383:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 65,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	77,
																	153,
																	173
																],
																"referencedDeclaration": 153,
																"src": "1364:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1364:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 64,
														"id": 74,
														"nodeType": "Return",
														"src": "1357:60:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "1150:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1258:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1278:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1270:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:15:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1308:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 62,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1308:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:15:0"
									},
									"scope": 174,
									"src": "1249:185:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "1647:347:0",
										"statements": [
											{
												"assignments": [
													88
												],
												"declarations": [
													{
														"constant": false,
														"id": 88,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1670:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "1657:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 87,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1657:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 97,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1689:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 92,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "1693:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1689:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1702:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1689:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1679:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 89,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1683:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1679:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1657:47:0"
											},
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 98,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1714:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 100,
														"indexExpression": {
															"hexValue": "30",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1721:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1714:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1726:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1714:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1714:15:0"
											},
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 104,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1739:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 106,
														"indexExpression": {
															"hexValue": "31",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1746:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1739:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1751:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1739:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "1739:15:0"
											},
											{
												"body": {
													"id": 138,
													"nodeType": "Block",
													"src": "1809:83:0",
													"statements": [
														{
															"expression": {
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 124,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 88,
																		"src": "1823:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 126,
																	"indexExpression": {
																		"id": 125,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "1830:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1823:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 127,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "1835:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 131,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 128,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 80,
																			"src": "1844:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1852:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1844:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1835:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1823:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 133,
															"nodeType": "ExpressionStatement",
															"src": "1823:33:0"
														},
														{
															"expression": {
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 134,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 80,
																	"src": "1870:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1880:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1870:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 137,
															"nodeType": "ExpressionStatement",
															"src": "1870:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 118,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1797:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1801:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1797:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 139,
												"initializationExpression": {
													"assignments": [
														111
													],
													"declarations": [
														{
															"constant": false,
															"id": 111,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1777:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 139,
															"src": "1769:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 110,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 117,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1781:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 113,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1785:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1781:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1794:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1781:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1769:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1804:3:0",
														"subExpression": {
															"id": 121,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1806:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 123,
													"nodeType": "ExpressionStatement",
													"src": "1804:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1764:128:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 141,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1909:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1918:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1909:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1921:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1901:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1901:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "1901:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 149,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1980:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1973:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 147,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1973:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1973:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 86,
												"id": 151,
												"nodeType": "Return",
												"src": "1966:21:0"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "1440:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1566:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1586:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1578:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1601:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1593:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1577:31:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1632:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1632:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1631:15:0"
									},
									"scope": 174,
									"src": "1557:437:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "2219:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 166,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 156,
																			"src": "2264:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2256:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 164,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2256:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2256:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2248:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 162,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2248:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2248:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 169,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "2272:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 161,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															77,
															153,
															173
														],
														"referencedDeclaration": 153,
														"src": "2236:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2236:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 160,
												"id": 171,
												"nodeType": "Return",
												"src": "2229:59:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "2000:141:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2155:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "2167:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:14:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "2204:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2204:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:15:0"
									},
									"scope": 174,
									"src": "2146:149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 175,
							"src": "199:2098:0",
							"usedErrors": []
						}
					],
					"src": "101:2197:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							1039
						]
					},
					"id": 1040,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 176,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 177,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:1",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1039,
							"linearizedBaseContracts": [
								1039
							],
							"name": "MathUpgradeable",
							"nameLocation": "210:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MathUpgradeable.Rounding",
									"id": 181,
									"members": [
										{
											"id": 178,
											"name": "Down",
											"nameLocation": "256:4:1",
											"nodeType": "EnumValue",
											"src": "256:4:1"
										},
										{
											"id": 179,
											"name": "Up",
											"nameLocation": "298:2:1",
											"nodeType": "EnumValue",
											"src": "298:2:1"
										},
										{
											"id": 180,
											"name": "Zero",
											"nameLocation": "329:4:1",
											"nodeType": "EnumValue",
											"src": "329:4:1"
										}
									],
									"name": "Rounding",
									"nameLocation": "237:8:1",
									"nodeType": "EnumDefinition",
									"src": "232:122:1"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "491:37:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 191,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "508:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 192,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "512:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "508:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 195,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "520:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "508:13:1",
													"trueExpression": {
														"id": 194,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "516:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 197,
												"nodeType": "Return",
												"src": "501:20:1"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "360:59:1",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "433:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "445:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "437:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "456:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "448:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:22:1"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "482:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:9:1"
									},
									"scope": 1039,
									"src": "424:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "666:37:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 209,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "683:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 210,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "687:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "683:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 213,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "695:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "683:13:1",
													"trueExpression": {
														"id": 212,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "691:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 208,
												"id": 215,
												"nodeType": "Return",
												"src": "676:20:1"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "534:60:1",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "608:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "620:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "612:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "631:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "623:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:22:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "657:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:1"
									},
									"scope": 1039,
									"src": "599:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "887:82:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 227,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "942:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 228,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "946:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "942:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 230,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "941:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "952:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "956:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "952:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "951:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "951:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "941:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 226,
												"id": 238,
												"nodeType": "Return",
												"src": "934:28:1"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "709:102:1",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "825:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "841:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "833:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "852:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "844:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:22:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "878:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:1"
									},
									"scope": 1039,
									"src": "816:153:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "1239:123:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 250,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "1327:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1332:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1327:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 254,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "1341:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1345:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1341:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 257,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1340:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 258,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "1350:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1340:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1354:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1340:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1327:28:1",
													"trueExpression": {
														"hexValue": "30",
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1336:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 249,
												"id": 263,
												"nodeType": "Return",
												"src": "1320:35:1"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "975:188:1",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1177:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1193:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1185:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1204:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1196:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:22:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1230:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:9:1"
									},
									"scope": 1039,
									"src": "1168:194:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1806:3797:1",
										"statements": [
											{
												"id": 385,
												"nodeType": "UncheckedBlock",
												"src": "1816:3781:1",
												"statements": [
													{
														"assignments": [
															278
														],
														"declarations": [
															{
																"constant": false,
																"id": 278,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2145:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "2137:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2137:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 279,
														"nodeType": "VariableDeclarationStatement",
														"src": "2137:13:1"
													},
													{
														"assignments": [
															281
														],
														"declarations": [
															{
																"constant": false,
																"id": 281,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2217:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "2209:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 280,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2209:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 282,
														"nodeType": "VariableDeclarationStatement",
														"src": "2209:13:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2289:157:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2307:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2324:1:1"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2327:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2334:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2330:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2330:6:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2317:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:20:1"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2311:2:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2354:18:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2367:1:1"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2370:1:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2363:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2363:9:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2354:5:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2389:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2406:2:1"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2410:5:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2402:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2402:14:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2421:2:1"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2425:5:1"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2418:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2418:13:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2398:34:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2389:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "2354:5:1",
																"valueSize": 1
															},
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "2410:5:1",
																"valueSize": 1
															},
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "2425:5:1",
																"valueSize": 1
															},
															{
																"declaration": 281,
																"isOffset": false,
																"isSlot": false,
																"src": "2389:5:1",
																"valueSize": 1
															},
															{
																"declaration": 268,
																"isOffset": false,
																"isSlot": false,
																"src": "2324:1:1",
																"valueSize": 1
															},
															{
																"declaration": 268,
																"isOffset": false,
																"isSlot": false,
																"src": "2367:1:1",
																"valueSize": 1
															},
															{
																"declaration": 270,
																"isOffset": false,
																"isSlot": false,
																"src": "2327:1:1",
																"valueSize": 1
															},
															{
																"declaration": 270,
																"isOffset": false,
																"isSlot": false,
																"src": "2370:1:1",
																"valueSize": 1
															}
														],
														"id": 283,
														"nodeType": "InlineAssembly",
														"src": "2280:166:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 284,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "2527:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2536:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2527:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 292,
														"nodeType": "IfStatement",
														"src": "2523:75:1",
														"trueBody": {
															"id": 291,
															"nodeType": "Block",
															"src": "2539:59:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 287,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 278,
																			"src": "2564:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 288,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 272,
																			"src": "2572:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2564:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 276,
																	"id": 290,
																	"nodeType": "Return",
																	"src": "2557:26:1"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 294,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "2708:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 295,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "2722:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2708:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 293,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2700:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2700:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 298,
														"nodeType": "ExpressionStatement",
														"src": "2700:28:1"
													},
													{
														"assignments": [
															300
														],
														"declarations": [
															{
																"constant": false,
																"id": 300,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2992:9:1",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "2984:17:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 299,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2984:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 301,
														"nodeType": "VariableDeclarationStatement",
														"src": "2984:17:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3024:291:1",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3093:38:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3113:1:1"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3116:1:1"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3119:11:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3106:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3106:25:1"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3093:9:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3213:41:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3226:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3236:9:1"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3247:5:1"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3233:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3233:20:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3222:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3222:32:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3213:5:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3271:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3284:5:1"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3291:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:21:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3271:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 272,
																"isOffset": false,
																"isSlot": false,
																"src": "3119:11:1",
																"valueSize": 1
															},
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "3247:5:1",
																"valueSize": 1
															},
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "3271:5:1",
																"valueSize": 1
															},
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "3284:5:1",
																"valueSize": 1
															},
															{
																"declaration": 281,
																"isOffset": false,
																"isSlot": false,
																"src": "3213:5:1",
																"valueSize": 1
															},
															{
																"declaration": 281,
																"isOffset": false,
																"isSlot": false,
																"src": "3226:5:1",
																"valueSize": 1
															},
															{
																"declaration": 300,
																"isOffset": false,
																"isSlot": false,
																"src": "3093:9:1",
																"valueSize": 1
															},
															{
																"declaration": 300,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:9:1",
																"valueSize": 1
															},
															{
																"declaration": 300,
																"isOffset": false,
																"isSlot": false,
																"src": "3291:9:1",
																"valueSize": 1
															},
															{
																"declaration": 268,
																"isOffset": false,
																"isSlot": false,
																"src": "3113:1:1",
																"valueSize": 1
															},
															{
																"declaration": 270,
																"isOffset": false,
																"isSlot": false,
																"src": "3116:1:1",
																"valueSize": 1
															}
														],
														"id": 302,
														"nodeType": "InlineAssembly",
														"src": "3015:300:1"
													},
													{
														"assignments": [
															304
														],
														"declarations": [
															{
																"constant": false,
																"id": 304,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3630:4:1",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "3622:12:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 303,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3622:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 312,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 305,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "3637:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3652:12:1",
																			"subExpression": {
																				"id": 306,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "3653:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3667:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3652:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 310,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3651:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3637:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3622:47:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3692:362:1",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3757:37:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3776:11:1"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3789:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3772:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3772:22:1"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3757:11:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3861:25:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3874:5:1"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3881:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3870:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3870:16:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3861:5:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4001:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4021:1:1",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4024:4:1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4017:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4017:12:1"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4031:4:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4013:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4013:23:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4038:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4009:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4009:31:1"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4001:4:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 272,
																"isOffset": false,
																"isSlot": false,
																"src": "3757:11:1",
																"valueSize": 1
															},
															{
																"declaration": 272,
																"isOffset": false,
																"isSlot": false,
																"src": "3776:11:1",
																"valueSize": 1
															},
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "3861:5:1",
																"valueSize": 1
															},
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "3874:5:1",
																"valueSize": 1
															},
															{
																"declaration": 304,
																"isOffset": false,
																"isSlot": false,
																"src": "3789:4:1",
																"valueSize": 1
															},
															{
																"declaration": 304,
																"isOffset": false,
																"isSlot": false,
																"src": "3881:4:1",
																"valueSize": 1
															},
															{
																"declaration": 304,
																"isOffset": false,
																"isSlot": false,
																"src": "4001:4:1",
																"valueSize": 1
															},
															{
																"declaration": 304,
																"isOffset": false,
																"isSlot": false,
																"src": "4024:4:1",
																"valueSize": 1
															},
															{
																"declaration": 304,
																"isOffset": false,
																"isSlot": false,
																"src": "4031:4:1",
																"valueSize": 1
															}
														],
														"id": 313,
														"nodeType": "InlineAssembly",
														"src": "3683:371:1"
													},
													{
														"expression": {
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 314,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "4120:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 315,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "4129:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 316,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "4137:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4129:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4120:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 319,
														"nodeType": "ExpressionStatement",
														"src": "4120:21:1"
													},
													{
														"assignments": [
															321
														],
														"declarations": [
															{
																"constant": false,
																"id": 321,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4467:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "4459:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 320,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4459:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 328,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4478:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 323,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 272,
																			"src": "4482:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4478:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 325,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4477:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4497:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4477:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4459:39:1"
													},
													{
														"expression": {
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 329,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4715:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4726:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 331,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "4730:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 332,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "4744:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4730:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4726:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4715:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 336,
														"nodeType": "ExpressionStatement",
														"src": "4715:36:1"
													},
													{
														"expression": {
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 337,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4784:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4795:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 339,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "4799:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 340,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "4813:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4799:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4795:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4784:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 344,
														"nodeType": "ExpressionStatement",
														"src": "4784:36:1"
													},
													{
														"expression": {
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 345,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4854:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4865:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 347,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "4869:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 348,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "4883:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4869:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4865:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4854:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 352,
														"nodeType": "ExpressionStatement",
														"src": "4854:36:1"
													},
													{
														"expression": {
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 353,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4924:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4935:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 355,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "4939:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 356,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "4953:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4939:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4935:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4924:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 360,
														"nodeType": "ExpressionStatement",
														"src": "4924:36:1"
													},
													{
														"expression": {
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 361,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4994:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5005:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 363,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "5009:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 364,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "5023:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5009:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5005:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4994:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 368,
														"nodeType": "ExpressionStatement",
														"src": "4994:36:1"
													},
													{
														"expression": {
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 369,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "5065:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5076:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 371,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "5080:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 372,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "5094:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5080:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5076:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 376,
														"nodeType": "ExpressionStatement",
														"src": "5065:36:1"
													},
													{
														"expression": {
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 377,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "5535:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 378,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "5544:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 379,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "5552:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5544:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5535:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "5535:24:1"
													},
													{
														"expression": {
															"id": 383,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "5580:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 276,
														"id": 384,
														"nodeType": "Return",
														"src": "5573:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "1368:305:1",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1687:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1711:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1703:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1730:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1722:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1722:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1749:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1741:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1741:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:73:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1798:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1790:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1789:16:1"
									},
									"scope": 1039,
									"src": "1678:3925:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "5883:189:1",
										"statements": [
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5901:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 430,
														"src": "5893:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 402,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5893:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 409,
												"initialValue": {
													"arguments": [
														{
															"id": 405,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5917:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 406,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "5920:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 407,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "5923:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 404,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															387,
															431
														],
														"referencedDeclaration": 387,
														"src": "5910:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5910:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5893:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$181",
															"typeString": "enum MathUpgradeable.Rounding"
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 410,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "5949:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$181",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 411,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "5961:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$181_$",
																	"typeString": "type(enum MathUpgradeable.Rounding)"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 179,
															"src": "5961:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$181",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"src": "5949:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 415,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "5983:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 416,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "5986:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 417,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "5989:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 414,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5976:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5976:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6004:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5976:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5949:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 427,
												"nodeType": "IfStatement",
												"src": "5945:98:1",
												"trueBody": {
													"id": 426,
													"nodeType": "Block",
													"src": "6007:36:1",
													"statements": [
														{
															"expression": {
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 422,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6021:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6031:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6021:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 425,
															"nodeType": "ExpressionStatement",
															"src": "6021:11:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 428,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 403,
													"src": "6059:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 401,
												"id": 429,
												"nodeType": "Return",
												"src": "6052:13:1"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "5609:121:1",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5744:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5768:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "5760:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5760:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "5779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5806:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "5798:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5836:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "5827:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$181",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 395,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "5827:8:1"
													},
													"referencedDeclaration": 181,
													"src": "5827:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$181",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5750:100:1"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "5874:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:9:1"
									},
									"scope": 1039,
									"src": "5735:337:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "6348:1585:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 439,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "6362:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6367:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 445,
												"nodeType": "IfStatement",
												"src": "6358:45:1",
												"trueBody": {
													"id": 444,
													"nodeType": "Block",
													"src": "6370:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6391:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 438,
															"id": 443,
															"nodeType": "Return",
															"src": "6384:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													447
												],
												"declarations": [
													{
														"constant": false,
														"id": 447,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7090:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 542,
														"src": "7082:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 446,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7082:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7099:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 450,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 434,
																			"src": "7110:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 449,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			711,
																			747
																		],
																		"referencedDeclaration": 711,
																		"src": "7105:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7105:7:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7116:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7105:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 454,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7104:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7099:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7082:36:1"
											},
											{
												"id": 541,
												"nodeType": "UncheckedBlock",
												"src": "7519:408:1",
												"statements": [
													{
														"expression": {
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 457,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7543:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 458,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "7553:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 459,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "7562:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 460,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "7566:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7562:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7553:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 463,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7552:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7577:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7552:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7543:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 467,
														"nodeType": "ExpressionStatement",
														"src": "7543:35:1"
													},
													{
														"expression": {
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 468,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7592:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 469,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "7602:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 470,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "7611:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 471,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "7615:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7611:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7602:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 474,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7601:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7626:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7601:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7592:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 478,
														"nodeType": "ExpressionStatement",
														"src": "7592:35:1"
													},
													{
														"expression": {
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 479,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7641:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 480,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "7651:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 481,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "7660:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 482,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "7664:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7660:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7651:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 485,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7650:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7675:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7650:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7641:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 489,
														"nodeType": "ExpressionStatement",
														"src": "7641:35:1"
													},
													{
														"expression": {
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 490,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7690:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 491,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "7700:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 492,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "7709:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 493,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "7713:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7709:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7700:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 496,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7699:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7724:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7699:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7690:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 500,
														"nodeType": "ExpressionStatement",
														"src": "7690:35:1"
													},
													{
														"expression": {
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 501,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7739:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 502,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "7749:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 503,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "7758:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 504,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "7762:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7758:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7749:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 507,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7748:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7773:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7748:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7739:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 511,
														"nodeType": "ExpressionStatement",
														"src": "7739:35:1"
													},
													{
														"expression": {
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 512,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7788:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 513,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "7798:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 514,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "7807:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 515,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "7811:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7807:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7798:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 518,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7797:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7822:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7797:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7788:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 522,
														"nodeType": "ExpressionStatement",
														"src": "7788:35:1"
													},
													{
														"expression": {
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 523,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7837:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 524,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "7847:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 525,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "7856:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 526,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "7860:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7856:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7847:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 529,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7846:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7871:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7846:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7837:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 533,
														"nodeType": "ExpressionStatement",
														"src": "7837:35:1"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 535,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "7897:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 536,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "7905:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 537,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "7909:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7905:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 534,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "7893:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7893:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 438,
														"id": 540,
														"nodeType": "Return",
														"src": "7886:30:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "6078:208:1",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6300:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6313:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "6305:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6305:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6304:11:1"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "6339:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6339:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6338:9:1"
									},
									"scope": 1039,
									"src": "6291:1642:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "8109:161:1",
										"statements": [
											{
												"id": 577,
												"nodeType": "UncheckedBlock",
												"src": "8119:145:1",
												"statements": [
													{
														"assignments": [
															555
														],
														"declarations": [
															{
																"constant": false,
																"id": 555,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8151:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 577,
																"src": "8143:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 554,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8143:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"id": 557,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "8165:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 556,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	543,
																	579
																],
																"referencedDeclaration": 543,
																"src": "8160:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8160:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8143:24:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "8188:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$181",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 561,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 549,
																					"src": "8198:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 562,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 181,
																						"src": "8210:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$181_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 563,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 179,
																					"src": "8210:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "8198:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 567,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 565,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 555,
																						"src": "8225:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 566,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 555,
																						"src": "8234:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8225:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 568,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 546,
																					"src": "8243:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8225:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8198:46:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8251:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8198:54:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8247:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 574,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8197:56:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8188:65:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 553,
														"id": 576,
														"nodeType": "Return",
														"src": "8181:72:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "7939:89:1",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8042:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8055:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "8047:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8047:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8067:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "8058:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$181",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 548,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 547,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "8058:8:1"
													},
													"referencedDeclaration": 181,
													"src": "8058:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$181",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8046:30:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "8100:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8099:9:1"
									},
									"scope": 1039,
									"src": "8033:237:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "8455:922:1",
										"statements": [
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8473:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 710,
														"src": "8465:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8465:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 590,
												"initialValue": {
													"hexValue": "30",
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8482:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8465:18:1"
											},
											{
												"id": 707,
												"nodeType": "UncheckedBlock",
												"src": "8493:855:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "8521:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8530:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8521:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8536:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8521:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 605,
														"nodeType": "IfStatement",
														"src": "8517:99:1",
														"trueBody": {
															"id": 604,
															"nodeType": "Block",
															"src": "8539:77:1",
															"statements": [
																{
																	"expression": {
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 596,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "8557:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8567:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8557:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 599,
																	"nodeType": "ExpressionStatement",
																	"src": "8557:13:1"
																},
																{
																	"expression": {
																		"id": 602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 600,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "8588:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8598:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8588:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 603,
																	"nodeType": "ExpressionStatement",
																	"src": "8588:13:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 606,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "8633:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8642:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8633:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8633:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 620,
														"nodeType": "IfStatement",
														"src": "8629:96:1",
														"trueBody": {
															"id": 619,
															"nodeType": "Block",
															"src": "8650:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 611,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "8668:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8678:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8668:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 614,
																	"nodeType": "ExpressionStatement",
																	"src": "8668:12:1"
																},
																{
																	"expression": {
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 615,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "8698:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8708:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8698:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 618,
																	"nodeType": "ExpressionStatement",
																	"src": "8698:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "8742:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8751:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8742:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8756:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8742:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 635,
														"nodeType": "IfStatement",
														"src": "8738:96:1",
														"trueBody": {
															"id": 634,
															"nodeType": "Block",
															"src": "8759:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 626,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "8777:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8787:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8777:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 629,
																	"nodeType": "ExpressionStatement",
																	"src": "8777:12:1"
																},
																{
																	"expression": {
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 630,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "8807:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8817:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8807:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 633,
																	"nodeType": "ExpressionStatement",
																	"src": "8807:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 636,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "8851:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8860:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8851:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8865:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8851:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 650,
														"nodeType": "IfStatement",
														"src": "8847:96:1",
														"trueBody": {
															"id": 649,
															"nodeType": "Block",
															"src": "8868:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 641,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "8886:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8896:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8886:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 644,
																	"nodeType": "ExpressionStatement",
																	"src": "8886:12:1"
																},
																{
																	"expression": {
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 645,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "8916:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8926:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8916:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 648,
																	"nodeType": "ExpressionStatement",
																	"src": "8916:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 651,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "8960:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8960:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8973:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8960:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 665,
														"nodeType": "IfStatement",
														"src": "8956:93:1",
														"trueBody": {
															"id": 664,
															"nodeType": "Block",
															"src": "8976:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 656,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "8994:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9004:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8994:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 659,
																	"nodeType": "ExpressionStatement",
																	"src": "8994:11:1"
																},
																{
																	"expression": {
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 660,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "9023:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9033:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9023:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 663,
																	"nodeType": "ExpressionStatement",
																	"src": "9023:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 666,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "9066:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9075:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9066:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9079:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9066:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 680,
														"nodeType": "IfStatement",
														"src": "9062:93:1",
														"trueBody": {
															"id": 679,
															"nodeType": "Block",
															"src": "9082:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 671,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "9100:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9110:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9100:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 674,
																	"nodeType": "ExpressionStatement",
																	"src": "9100:11:1"
																},
																{
																	"expression": {
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 675,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "9129:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9139:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9129:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 678,
																	"nodeType": "ExpressionStatement",
																	"src": "9129:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "9172:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9181:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9172:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9185:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9172:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 695,
														"nodeType": "IfStatement",
														"src": "9168:93:1",
														"trueBody": {
															"id": 694,
															"nodeType": "Block",
															"src": "9188:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 686,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "9206:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9216:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9206:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 689,
																	"nodeType": "ExpressionStatement",
																	"src": "9206:11:1"
																},
																{
																	"expression": {
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 690,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "9235:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9245:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9235:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 693,
																	"nodeType": "ExpressionStatement",
																	"src": "9235:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 696,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "9278:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9287:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9278:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9291:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9278:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 706,
														"nodeType": "IfStatement",
														"src": "9274:64:1",
														"trueBody": {
															"id": 705,
															"nodeType": "Block",
															"src": "9294:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 701,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "9312:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9322:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9312:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 704,
																	"nodeType": "ExpressionStatement",
																	"src": "9312:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 708,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 588,
													"src": "9364:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 586,
												"id": 709,
												"nodeType": "Return",
												"src": "9357:13:1"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "8276:113:1",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8403:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8416:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "8408:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8408:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8407:15:1"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "8446:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8445:9:1"
									},
									"scope": 1039,
									"src": "8394:983:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "9610:165:1",
										"statements": [
											{
												"id": 745,
												"nodeType": "UncheckedBlock",
												"src": "9620:149:1",
												"statements": [
													{
														"assignments": [
															723
														],
														"declarations": [
															{
																"constant": false,
																"id": 723,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9652:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 745,
																"src": "9644:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 722,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9644:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 727,
														"initialValue": {
															"arguments": [
																{
																	"id": 725,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "9666:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 724,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	711,
																	747
																],
																"referencedDeclaration": 711,
																"src": "9661:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9661:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9644:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 728,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "9693:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$181",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 729,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 717,
																					"src": "9703:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 730,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 181,
																						"src": "9715:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$181_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 731,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 179,
																					"src": "9715:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "9703:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 735,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 733,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9730:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 734,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 723,
																						"src": "9735:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9730:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 736,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "9744:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9730:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9703:46:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9756:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9703:54:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9752:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 742,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9702:56:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9693:65:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 721,
														"id": 744,
														"nodeType": "Return",
														"src": "9686:72:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "9383:142:1",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9539:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9552:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "9544:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9544:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9568:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "9559:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$181",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 716,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 715,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "9559:8:1"
													},
													"referencedDeclaration": 181,
													"src": "9559:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$181",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9543:34:1"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "9601:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9600:9:1"
									},
									"scope": 1039,
									"src": "9530:245:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "9962:828:1",
										"statements": [
											{
												"assignments": [
													756
												],
												"declarations": [
													{
														"constant": false,
														"id": 756,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9980:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 875,
														"src": "9972:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 755,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9972:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 758,
												"initialValue": {
													"hexValue": "30",
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9989:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9972:18:1"
											},
											{
												"id": 872,
												"nodeType": "UncheckedBlock",
												"src": "10000:761:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 759,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "10028:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10037:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10041:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10037:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10028:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 775,
														"nodeType": "IfStatement",
														"src": "10024:99:1",
														"trueBody": {
															"id": 774,
															"nodeType": "Block",
															"src": "10045:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 764,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "10063:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10072:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10076:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10072:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10063:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 769,
																	"nodeType": "ExpressionStatement",
																	"src": "10063:15:1"
																},
																{
																	"expression": {
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 770,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "10096:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10106:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10096:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 773,
																	"nodeType": "ExpressionStatement",
																	"src": "10096:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 776,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "10140:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10149:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10153:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10149:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10140:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 792,
														"nodeType": "IfStatement",
														"src": "10136:99:1",
														"trueBody": {
															"id": 791,
															"nodeType": "Block",
															"src": "10157:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 781,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "10175:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10184:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10188:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10184:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10175:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 786,
																	"nodeType": "ExpressionStatement",
																	"src": "10175:15:1"
																},
																{
																	"expression": {
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 787,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "10208:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10218:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10208:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 790,
																	"nodeType": "ExpressionStatement",
																	"src": "10208:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 793,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "10252:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10261:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10265:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10261:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10252:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 809,
														"nodeType": "IfStatement",
														"src": "10248:99:1",
														"trueBody": {
															"id": 808,
															"nodeType": "Block",
															"src": "10269:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 798,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "10287:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10296:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 800,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10300:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10296:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10287:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 803,
																	"nodeType": "ExpressionStatement",
																	"src": "10287:15:1"
																},
																{
																	"expression": {
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 804,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "10320:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10330:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10320:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 807,
																	"nodeType": "ExpressionStatement",
																	"src": "10320:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 810,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "10364:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10373:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10377:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10373:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10364:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 826,
														"nodeType": "IfStatement",
														"src": "10360:96:1",
														"trueBody": {
															"id": 825,
															"nodeType": "Block",
															"src": "10380:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 815,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "10398:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10407:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10411:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10407:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10398:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 820,
																	"nodeType": "ExpressionStatement",
																	"src": "10398:14:1"
																},
																{
																	"expression": {
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 821,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "10430:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10440:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10430:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 824,
																	"nodeType": "ExpressionStatement",
																	"src": "10430:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 827,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "10473:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10482:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10486:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10482:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10473:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 843,
														"nodeType": "IfStatement",
														"src": "10469:96:1",
														"trueBody": {
															"id": 842,
															"nodeType": "Block",
															"src": "10489:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 832,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "10507:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10516:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10520:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10516:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10507:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 837,
																	"nodeType": "ExpressionStatement",
																	"src": "10507:14:1"
																},
																{
																	"expression": {
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 838,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "10539:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10549:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10539:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 841,
																	"nodeType": "ExpressionStatement",
																	"src": "10539:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 844,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "10582:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10591:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10595:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10591:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10582:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 860,
														"nodeType": "IfStatement",
														"src": "10578:96:1",
														"trueBody": {
															"id": 859,
															"nodeType": "Block",
															"src": "10598:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "10616:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10625:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 851,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10629:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10625:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10616:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 854,
																	"nodeType": "ExpressionStatement",
																	"src": "10616:14:1"
																},
																{
																	"expression": {
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 855,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "10648:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10658:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10648:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10648:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 861,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "10691:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10700:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10704:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10700:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10691:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 871,
														"nodeType": "IfStatement",
														"src": "10687:64:1",
														"trueBody": {
															"id": 870,
															"nodeType": "Block",
															"src": "10707:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 866,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "10725:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10735:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10725:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 869,
																	"nodeType": "ExpressionStatement",
																	"src": "10725:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 873,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 756,
													"src": "10777:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 754,
												"id": 874,
												"nodeType": "Return",
												"src": "10770:13:1"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "9781:114:1",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9909:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9923:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "9915:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9915:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9914:15:1"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "9953:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9953:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9952:9:1"
									},
									"scope": 1039,
									"src": "9900:890:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "11025:165:1",
										"statements": [
											{
												"id": 910,
												"nodeType": "UncheckedBlock",
												"src": "11035:149:1",
												"statements": [
													{
														"assignments": [
															888
														],
														"declarations": [
															{
																"constant": false,
																"id": 888,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11067:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 910,
																"src": "11059:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 887,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11059:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 892,
														"initialValue": {
															"arguments": [
																{
																	"id": 890,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "11082:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 889,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	876,
																	912
																],
																"referencedDeclaration": 876,
																"src": "11076:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11076:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11059:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 893,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "11109:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$181",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 894,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 882,
																					"src": "11119:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 895,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 181,
																						"src": "11131:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$181_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 896,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 179,
																					"src": "11131:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "11119:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 900,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 898,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11146:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 899,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 888,
																						"src": "11150:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11146:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 901,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 879,
																					"src": "11159:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11146:18:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11119:45:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11171:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11119:53:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11167:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 907,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11118:55:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11109:64:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 886,
														"id": 909,
														"nodeType": "Return",
														"src": "11102:71:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "10796:143:1",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10953:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10967:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "10959:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10959:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10983:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "10974:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$181",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 881,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 880,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "10974:8:1"
													},
													"referencedDeclaration": 181,
													"src": "10974:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$181",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10958:34:1"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "11016:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11015:9:1"
									},
									"scope": 1039,
									"src": "10944:246:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "11504:600:1",
										"statements": [
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11522:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 998,
														"src": "11514:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 920,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"hexValue": "30",
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11531:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11514:18:1"
											},
											{
												"id": 995,
												"nodeType": "UncheckedBlock",
												"src": "11542:533:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 924,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "11570:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11579:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11570:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11570:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 938,
														"nodeType": "IfStatement",
														"src": "11566:98:1",
														"trueBody": {
															"id": 937,
															"nodeType": "Block",
															"src": "11588:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 929,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "11606:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11616:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11606:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 932,
																	"nodeType": "ExpressionStatement",
																	"src": "11606:13:1"
																},
																{
																	"expression": {
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 933,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "11637:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11647:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11637:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 936,
																	"nodeType": "ExpressionStatement",
																	"src": "11637:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 939,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "11681:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11690:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11681:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11695:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11681:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 953,
														"nodeType": "IfStatement",
														"src": "11677:95:1",
														"trueBody": {
															"id": 952,
															"nodeType": "Block",
															"src": "11698:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 944,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "11716:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11726:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11716:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 947,
																	"nodeType": "ExpressionStatement",
																	"src": "11716:12:1"
																},
																{
																	"expression": {
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 948,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "11746:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11756:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11746:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 951,
																	"nodeType": "ExpressionStatement",
																	"src": "11746:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 954,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "11789:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11798:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11789:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11803:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11789:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 968,
														"nodeType": "IfStatement",
														"src": "11785:95:1",
														"trueBody": {
															"id": 967,
															"nodeType": "Block",
															"src": "11806:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 959,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "11824:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11834:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11824:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 962,
																	"nodeType": "ExpressionStatement",
																	"src": "11824:12:1"
																},
																{
																	"expression": {
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 963,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "11854:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11864:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11854:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "11854:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 969,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "11897:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11906:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11897:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11911:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11897:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 983,
														"nodeType": "IfStatement",
														"src": "11893:95:1",
														"trueBody": {
															"id": 982,
															"nodeType": "Block",
															"src": "11914:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 974,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "11932:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11942:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11932:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 977,
																	"nodeType": "ExpressionStatement",
																	"src": "11932:12:1"
																},
																{
																	"expression": {
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 978,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "11962:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11972:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11962:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 981,
																	"nodeType": "ExpressionStatement",
																	"src": "11962:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 984,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "12005:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12014:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12005:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12018:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12005:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 994,
														"nodeType": "IfStatement",
														"src": "12001:64:1",
														"trueBody": {
															"id": 993,
															"nodeType": "Block",
															"src": "12021:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 989,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "12039:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12049:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12039:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 992,
																	"nodeType": "ExpressionStatement",
																	"src": "12039:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 996,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 921,
													"src": "12091:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 919,
												"id": 997,
												"nodeType": "Return",
												"src": "12084:13:1"
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "11196:240:1",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11450:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11465:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11457:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11456:15:1"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11495:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11495:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11494:9:1"
									},
									"scope": 1039,
									"src": "11441:663:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "12340:173:1",
										"statements": [
											{
												"id": 1036,
												"nodeType": "UncheckedBlock",
												"src": "12350:157:1",
												"statements": [
													{
														"assignments": [
															1011
														],
														"declarations": [
															{
																"constant": false,
																"id": 1011,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12382:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1036,
																"src": "12374:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1010,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12374:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1015,
														"initialValue": {
															"arguments": [
																{
																	"id": 1013,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "12398:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1012,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	999,
																	1038
																],
																"referencedDeclaration": 999,
																"src": "12391:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12391:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12374:30:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1016,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "12425:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$181",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 1020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1017,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1005,
																					"src": "12435:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1018,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 181,
																						"src": "12447:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$181_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 1019,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 179,
																					"src": "12447:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "12435:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1026,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1021,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12462:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1024,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1022,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1011,
																									"src": "12468:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1023,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12477:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12468:10:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1025,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12467:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12462:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1027,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "12482:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12462:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12435:52:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12494:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12435:60:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12490:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1033,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12434:62:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12425:71:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1009,
														"id": 1035,
														"nodeType": "Return",
														"src": "12418:78:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "12110:143:1",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12267:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12282:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "12274:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12298:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "12289:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$181",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 1004,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1003,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "12289:8:1"
													},
													"referencedDeclaration": 181,
													"src": "12289:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$181",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12273:34:1"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "12331:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12331:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12330:9:1"
									},
									"scope": 1039,
									"src": "12258:255:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1040,
							"src": "202:12313:1",
							"usedErrors": []
						}
					],
					"src": "103:12413:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1228
						],
						"Ownable": [
							1152
						]
					},
					"id": 1153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1041,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1042,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1153,
							"sourceUnit": 1229,
							"src": "127:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1044,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1228,
										"src": "683:7:2"
									},
									"id": 1045,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1043,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1152,
							"linearizedBaseContracts": [
								1152,
								1228
							],
							"name": "Ownable",
							"nameLocation": "672:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1047,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1152,
									"src": "697:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1046,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 1053,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "753:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "784:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:2"
									},
									"src": "726:84:2"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "926:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1058,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "955:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1057,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "936:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "936:32:2"
											}
										]
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1063,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:2"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:2"
									},
									"scope": 1152,
									"src": "912:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "1084:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1066,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "1094:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:2"
											},
											{
												"id": 1069,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:2"
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1071,
									"name": "onlyOwner",
									"nameLocation": "1072:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:2"
									},
									"src": "1063:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "1256:30:2",
										"statements": [
											{
												"expression": {
													"id": 1077,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1047,
													"src": "1273:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1076,
												"id": 1078,
												"nodeType": "Return",
												"src": "1266:13:2"
											}
										]
									},
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:2"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1247:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:2"
									},
									"scope": 1152,
									"src": "1201:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "1404:85:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1085,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "1422:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1087,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "1433:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:2"
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:2"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:2"
									},
									"scope": 1152,
									"src": "1359:130:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "1885:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1101,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1100,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "1895:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:2"
											}
										]
									},
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1098,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1097,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1071,
												"src": "1875:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:2"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:2"
									},
									"scope": 1152,
									"src": "1831:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "2151:128:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1117,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "2169:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1118,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1127,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "2263:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1126,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "2244:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:2"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1113,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1071,
												"src": "2141:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2108:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:2"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:2"
									},
									"scope": 1152,
									"src": "2081:198:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "2496:124:2",
										"statements": [
											{
												"assignments": [
													1138
												],
												"declarations": [
													{
														"constant": false,
														"id": 1138,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1150,
														"src": "2506:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1137,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1140,
												"initialValue": {
													"id": 1139,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1047,
													"src": "2525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:2"
											},
											{
												"expression": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1141,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "2541:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1142,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "2550:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1146,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "2594:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1147,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "2604:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1145,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "2573:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "EmitStatement",
												"src": "2568:45:2"
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "2461:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:2"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:2"
									},
									"scope": 1152,
									"src": "2433:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1153,
							"src": "654:1968:2",
							"usedErrors": []
						}
					],
					"src": "102:2521:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1206
						]
					},
					"id": 1207,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1155,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1206,
							"linearizedBaseContracts": [
								1206
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1158,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1206,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1156,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1157,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1161,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 1206,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1160,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1163,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1206,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1166,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1167,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 1171,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 1206,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1174,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 1177,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1178,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1182,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1186,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1187,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1185,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1192,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1193,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 1206,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1200,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1201,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 1206,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1207,
							"src": "888:1952:3",
							"usedErrors": []
						}
					],
					"src": "112:2729:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1228
						]
					},
					"id": 1229,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1208,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1209,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1228,
							"linearizedBaseContracts": [
								1228
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1214,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1213,
												"id": 1216,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 1228,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1223,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1222,
												"id": 1225,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 1228,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1229,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "contracts/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							2851
						],
						"ERC721A__IERC721Receiver": [
							1246
						],
						"IERC721A": [
							3057
						]
					},
					"id": 2852,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1230,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:5"
						},
						{
							"absolutePath": "contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 1231,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2852,
							"sourceUnit": 3058,
							"src": "115:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1232,
								"nodeType": "StructuredDocumentation",
								"src": "143:53:5",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 1246,
							"linearizedBaseContracts": [
								1246
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "208:24:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 1245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "249:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "284:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "276:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "311:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "303:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "303:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "367:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "352:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "352:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "265:113:5"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "397:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1242,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "397:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:8:5"
									},
									"scope": 1246,
									"src": "240:165:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2852,
							"src": "198:210:5",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1248,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3057,
										"src": "950:8:5"
									},
									"id": 1249,
									"nodeType": "InheritanceSpecifier",
									"src": "950:8:5"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1247,
								"nodeType": "StructuredDocumentation",
								"src": "412:516:5",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 2851,
							"linearizedBaseContracts": [
								2851,
								3057
							],
							"name": "ERC721A",
							"nameLocation": "939:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 1252,
									"members": [
										{
											"constant": false,
											"id": 1251,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1095:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 1252,
											"src": "1087:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1250,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1087:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1059:16:5",
									"nodeType": "StructDefinition",
									"scope": 2851,
									"src": "1052:56:5",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1260,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1376:27:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "1351:68:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1253,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1351:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 1259,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1407:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1412:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1407:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 1257,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1406:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1258,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1418:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1406:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1263,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "1520:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "1495:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1261,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1495:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 1262,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1544:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1266,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "1647:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "1622:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1264,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1622:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 1265,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1671:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1269,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "1766:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "1741:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1267,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1741:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 1268,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1780:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1277,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1899:23:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "1874:65:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1270,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1874:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 1276,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1926:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1931:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1926:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 1274,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1925:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1275,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1938:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1925:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1280,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "2039:23:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "2014:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1278,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2014:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 1279,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2065:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1285,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "2164:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "2139:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1281,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2139:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 1284,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1282,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2182:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 1283,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2187:3:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "2182:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1288,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2299:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "2274:55:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2274:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 1287,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2326:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1293,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2434:25:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "2409:61:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1289,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2409:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 1292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1290,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2462:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 1291,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2467:3:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2462:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1296,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "2565:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "2540:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2540:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 1295,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2586:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1304,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2710:30:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "2685:72:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1297,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2685:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 1303,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2744:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2749:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2744:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 1301,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2743:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1302,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2756:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2743:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1312,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2845:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "2820:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1305,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2820:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 1311,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2865:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2870:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2865:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 1309,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2864:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1310,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2877:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2864:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1315,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "3192:32:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "3167:64:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1313,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3167:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 1314,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3227:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1318,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "3382:25:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "3357:128:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1316,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3357:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 1317,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3419:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1320,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3735:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "3719:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1319,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3719:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1322,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3810:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "3794:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1321,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3794:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1324,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3865:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "3850:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1323,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3850:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1326,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3915:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "3900:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1325,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3900:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1330,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "4354:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "4318:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1329,
										"keyType": {
											"id": 1327,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4326:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4318:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4337:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1334,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "4622:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "4586:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1333,
										"keyType": {
											"id": 1331,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4594:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4586:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1332,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4605:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1339,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4745:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "4700:60:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$1252_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 1338,
										"keyType": {
											"id": 1335,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4708:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4700:36:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$1252_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueType": {
											"id": 1337,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1336,
												"name": "TokenApprovalRef",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1252,
												"src": "4719:16:5"
											},
											"referencedDeclaration": 1252,
											"src": "4719:16:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$1252_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1345,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4871:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 2851,
									"src": "4818:71:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1344,
										"keyType": {
											"id": 1340,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4826:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4818:44:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 1343,
											"keyType": {
												"id": 1341,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4845:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4837:24:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 1342,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4856:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1365,
										"nodeType": "Block",
										"src": "5141:102:5",
										"statements": [
											{
												"expression": {
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1352,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "5152:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1353,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "5160:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5152:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "5152:13:5"
											},
											{
												"expression": {
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1356,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "5176:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1357,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "5186:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5176:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1359,
												"nodeType": "ExpressionStatement",
												"src": "5176:17:5"
											},
											{
												"expression": {
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1360,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "5204:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1361,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "5220:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5220:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5204:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1364,
												"nodeType": "ExpressionStatement",
												"src": "5204:31:5"
											}
										]
									},
									"id": 1366,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "5111:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "5097:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1346,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5097:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "5132:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "5118:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5118:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5096:44:5"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5141:0:5"
									},
									"scope": 2851,
									"src": "5085:158:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "5644:27:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5662:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1371,
												"id": 1373,
												"nodeType": "Return",
												"src": "5655:8:5"
											}
										]
									},
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "5445:128:5",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5588:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5601:2:5"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "5635:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5635:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5634:9:5"
									},
									"scope": 2851,
									"src": "5579:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "5814:39:5",
										"statements": [
											{
												"expression": {
													"id": 1381,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1320,
													"src": "5832:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1380,
												"id": 1382,
												"nodeType": "Return",
												"src": "5825:20:5"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "5679:65:5",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "5759:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:2:5"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "5805:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5805:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5804:9:5"
									},
									"scope": 2851,
									"src": "5750:103:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2908
									],
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "6133:253:5",
										"statements": [
											{
												"id": 1398,
												"nodeType": "UncheckedBlock",
												"src": "6289:90:5",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1391,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "6321:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1392,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "6337:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1394,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "6352:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6352:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6321:46:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1390,
														"id": 1397,
														"nodeType": "Return",
														"src": "6314:53:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "5861:196:5",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6072:11:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1387,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6106:8:5"
									},
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:2:5"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "6124:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6124:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6123:9:5"
									},
									"scope": 2851,
									"src": "6063:323:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "6548:232:5",
										"statements": [
											{
												"id": 1411,
												"nodeType": "UncheckedBlock",
												"src": "6698:75:5",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1406,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "6730:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1407,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "6746:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6746:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6730:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1405,
														"id": 1410,
														"nodeType": "Return",
														"src": "6723:38:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "6394:84:5",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "6493:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6505:2:5"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "6539:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6539:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6538:9:5"
									},
									"scope": 2851,
									"src": "6484:296:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1421,
										"nodeType": "Block",
										"src": "6926:38:5",
										"statements": [
											{
												"expression": {
													"id": 1419,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1322,
													"src": "6944:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1418,
												"id": 1420,
												"nodeType": "Return",
												"src": "6937:19:5"
											}
										]
									},
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "6788:68:5",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 1422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "6871:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6883:2:5"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "6917:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6917:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6916:9:5"
									},
									"scope": 2851,
									"src": "6862:102:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2951
									],
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "7328:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1431,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "7343:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7360:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7352:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1432,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7352:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7352:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7343:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1440,
												"nodeType": "IfStatement",
												"src": "7339:60:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1437,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2863,
															"src": "7371:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7371:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1439,
													"nodeType": "RevertStatement",
													"src": "7364:35:5"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1441,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "7417:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1443,
														"indexExpression": {
															"id": 1442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "7436:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7417:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1444,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "7445:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7417:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1430,
												"id": 1446,
												"nodeType": "Return",
												"src": "7410:62:5"
											}
										]
									},
									"documentation": {
										"id": 1423,
										"nodeType": "StructuredDocumentation",
										"src": "7165:76:5",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7256:9:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1427,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7301:8:5"
									},
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7274:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "7266:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7266:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7265:15:5"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "7319:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7318:9:5"
									},
									"scope": 2851,
									"src": "7247:233:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "7632:108:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1456,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "7651:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1458,
																	"indexExpression": {
																		"id": 1457,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1451,
																		"src": "7670:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7651:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1459,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "7680:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7651:50:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1461,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7650:52:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1462,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "7705:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7650:82:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1455,
												"id": 1464,
												"nodeType": "Return",
												"src": "7643:89:5"
											}
										]
									},
									"documentation": {
										"id": 1449,
										"nodeType": "StructuredDocumentation",
										"src": "7488:68:5",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "7571:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "7585:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7585:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7584:15:5"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "7623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7622:9:5"
									},
									"scope": 2851,
									"src": "7562:178:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "7908:108:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1474,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "7927:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1476,
																	"indexExpression": {
																		"id": 1475,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1469,
																		"src": "7946:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7927:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1477,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "7956:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7927:50:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1479,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7926:52:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1480,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "7981:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7926:82:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1473,
												"id": 1482,
												"nodeType": "Return",
												"src": "7919:89:5"
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "7748:84:5",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "7847:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7869:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "7861:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7861:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7860:15:5"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "7899:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7899:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7898:9:5"
									},
									"scope": 2851,
									"src": "7838:178:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "8197:74:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1494,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "8222:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1496,
																"indexExpression": {
																	"id": 1495,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1487,
																	"src": "8241:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8222:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1497,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1269,
																"src": "8251:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8222:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8215:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 1492,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "8215:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8215:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1491,
												"id": 1500,
												"nodeType": "Return",
												"src": "8208:55:5"
											}
										]
									},
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "8024:104:5",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "8143:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8159:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "8151:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8151:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8150:15:5"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "8189:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1489,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8189:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8188:8:5"
									},
									"scope": 2851,
									"src": "8134:137:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "8520:343:5",
										"statements": [
											{
												"assignments": [
													1511
												],
												"declarations": [
													{
														"constant": false,
														"id": 1511,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "8539:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "8531:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1510,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8531:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1515,
												"initialValue": {
													"baseExpression": {
														"id": 1512,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "8548:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1514,
													"indexExpression": {
														"id": 1513,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "8567:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8548:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8531:42:5"
											},
											{
												"assignments": [
													1517
												],
												"declarations": [
													{
														"constant": false,
														"id": 1517,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "8592:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "8584:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1516,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8584:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1518,
												"nodeType": "VariableDeclarationStatement",
												"src": "8584:17:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8686:42:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8701:16:5",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "8714:3:5"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "8701:9:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1507,
														"isOffset": false,
														"isSlot": false,
														"src": "8714:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1517,
														"isOffset": false,
														"isSlot": false,
														"src": "8701:9:5",
														"valueSize": 1
													}
												],
												"id": 1519,
												"nodeType": "InlineAssembly",
												"src": "8677:51:5"
											},
											{
												"expression": {
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1520,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1511,
														"src": "8738:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1521,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1511,
																		"src": "8748:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1522,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1277,
																		"src": "8757:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8748:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1524,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8747:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1525,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "8785:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1526,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "8798:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8785:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1528,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8784:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8747:63:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8738:72:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "8738:72:5"
											},
											{
												"expression": {
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1532,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "8821:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1534,
														"indexExpression": {
															"id": 1533,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "8840:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8821:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1535,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1511,
														"src": "8849:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8821:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "8821:34:5"
											}
										]
									},
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "8279:174:5",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "8468:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8484:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "8476:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8476:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "8498:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "8491:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1506,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8491:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8475:27:5"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8520:0:5"
									},
									"scope": 2851,
									"src": "8459:404:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2916
									],
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "9501:548:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1548,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "9819:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "9819:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1551,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "9896:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "9896:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9819:102:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1555,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1542,
															"src": "9973:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9988:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "9973:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9819:179:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1547,
												"id": 1559,
												"nodeType": "Return",
												"src": "9799:199:5"
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "9056:348:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "9419:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1544,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9477:8:5"
									},
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "9444:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "9437:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1541,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "9437:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9436:20:5"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "9495:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9495:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9494:6:5"
									},
									"scope": 2851,
									"src": "9410:639:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3031
									],
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "10381:31:5",
										"statements": [
											{
												"expression": {
													"id": 1568,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1324,
													"src": "10399:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1567,
												"id": 1569,
												"nodeType": "Return",
												"src": "10392:12:5"
											}
										]
									},
									"documentation": {
										"id": 1562,
										"nodeType": "StructuredDocumentation",
										"src": "10246:60:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10321:4:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1564,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10348:8:5"
									},
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10325:2:5"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "10366:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1565,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10366:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10365:15:5"
									},
									"scope": 2851,
									"src": "10312:100:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3037
									],
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "10559:33:5",
										"statements": [
											{
												"expression": {
													"id": 1578,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1326,
													"src": "10577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1577,
												"id": 1579,
												"nodeType": "Return",
												"src": "10570:14:5"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "10420:62:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10497:6:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1574,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10526:8:5"
									},
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10503:2:5"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "10544:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1575,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10544:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10543:15:5"
									},
									"scope": 2851,
									"src": "10488:104:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3045
									],
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "10786:230:5",
										"statements": [
											{
												"condition": {
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10801:17:5",
													"subExpression": {
														"arguments": [
															{
																"id": 1591,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1584,
																"src": "10810:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1590,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "10802:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10802:16:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1597,
												"nodeType": "IfStatement",
												"src": "10797:59:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1594,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2887,
															"src": "10827:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10827:29:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1596,
													"nodeType": "RevertStatement",
													"src": "10820:36:5"
												}
											},
											{
												"assignments": [
													1599
												],
												"declarations": [
													{
														"constant": false,
														"id": 1599,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "10883:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1623,
														"src": "10869:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1598,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10869:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1602,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1600,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "10893:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10893:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10869:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1605,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1599,
																		"src": "10927:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10921:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1603,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10921:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10921:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10921:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10946:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10921:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11006:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10921:87:5",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1614,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1599,
																		"src": "10974:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1616,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1584,
																				"src": "10993:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1615,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2850,
																			"src": "10983:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10983:18:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1612,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "10957:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "10957:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10957:45:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10950:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1610,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "10950:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10950:53:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1589,
												"id": 1622,
												"nodeType": "Return",
												"src": "10914:94:5"
											}
										]
									},
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "10600:92:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "10707:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1586,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10753:8:5"
									},
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10724:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "10716:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10716:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10715:17:5"
									},
									"returnParameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "10771:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1587,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10771:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10770:15:5"
									},
									"scope": 2851,
									"src": "10698:318:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "11334:28:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11352:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1629,
												"id": 1631,
												"nodeType": "Return",
												"src": "11345:9:5"
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "11024:238:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "11277:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11285:2:5"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "11319:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1627,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11319:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11318:15:5"
									},
									"scope": 2851,
									"src": "11268:94:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2959
									],
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "11786:71:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1647,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1636,
																			"src": "11839:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1646,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "11820:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11820:27:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11812:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1644,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11812:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11812:36:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11804:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1642,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11804:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11804:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1641,
												"id": 1651,
												"nodeType": "Return",
												"src": "11797:52:5"
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "11562:137:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "11714:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1638,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11759:8:5"
									},
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11730:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "11722:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11722:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11721:17:5"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "11777:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11777:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11776:9:5"
									},
									"scope": 2851,
									"src": "11705:152:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "12139:73:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1664,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1656,
																	"src": "12195:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1663,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "12176:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12176:27:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1662,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "12157:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2902_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12157:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2902_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 1661,
												"id": 1667,
												"nodeType": "Return",
												"src": "12150:54:5"
											}
										]
									},
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "11865:175:5",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "12055:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12076:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "12068:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12068:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12067:17:5"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "12116:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2902_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1659,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1658,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2902,
														"src": "12116:14:5"
													},
													"referencedDeclaration": 2902,
													"src": "12116:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2902_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12115:23:5"
									},
									"scope": 2851,
									"src": "12046:166:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "12399:70:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1679,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "12436:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1681,
															"indexExpression": {
																"id": 1680,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "12454:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12436:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1678,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "12417:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2902_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12417:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2902_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 1677,
												"id": 1683,
												"nodeType": "Return",
												"src": "12410:51:5"
											}
										]
									},
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "12220:82:5",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "12317:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12338:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "12330:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12330:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12329:15:5"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "12376:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2902_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1675,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1674,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2902,
														"src": "12376:14:5"
													},
													"referencedDeclaration": 2902,
													"src": "12376:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2902_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12375:23:5"
									},
									"scope": 2851,
									"src": "12308:161:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1706,
										"nodeType": "Block",
										"src": "12646:132:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1691,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "12661:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1693,
														"indexExpression": {
															"id": 1692,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "12679:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12661:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12689:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12661:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1705,
												"nodeType": "IfStatement",
												"src": "12657:114:5",
												"trueBody": {
													"id": 1704,
													"nodeType": "Block",
													"src": "12692:79:5",
													"statements": [
														{
															"expression": {
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1696,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1330,
																		"src": "12707:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1698,
																	"indexExpression": {
																		"id": 1697,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1688,
																		"src": "12725:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12707:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1700,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1688,
																			"src": "12753:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1699,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "12734:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12734:25:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12707:52:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1703,
															"nodeType": "ExpressionStatement",
															"src": "12707:52:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "12477:99:5",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 1707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "12591:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12622:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "12614:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12614:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12613:15:5"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12646:0:5"
									},
									"scope": 2851,
									"src": "12582:196:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "12936:1199:5",
										"statements": [
											{
												"assignments": [
													1716
												],
												"declarations": [
													{
														"constant": false,
														"id": 1716,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "12955:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1760,
														"src": "12947:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12947:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1718,
												"initialValue": {
													"id": 1717,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1710,
													"src": "12962:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12947:22:5"
											},
											{
												"id": 1756,
												"nodeType": "UncheckedBlock",
												"src": "12982:1097:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1719,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "13011:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13011:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1721,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1716,
																"src": "13030:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13011:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1755,
														"nodeType": "IfStatement",
														"src": "13007:1061:5",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1723,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1716,
																	"src": "13057:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1724,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "13064:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13057:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1754,
															"nodeType": "IfStatement",
															"src": "13053:1015:5",
															"trueBody": {
																"id": 1753,
																"nodeType": "Block",
																"src": "13079:989:5",
																"statements": [
																	{
																		"assignments": [
																			1727
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1727,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "13110:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1753,
																				"src": "13102:14:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1726,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13102:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1731,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1728,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1330,
																				"src": "13119:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1730,
																			"indexExpression": {
																				"id": 1729,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1716,
																				"src": "13137:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13119:23:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13102:40:5"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1732,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1727,
																					"src": "13208:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 1733,
																					"name": "_BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1285,
																					"src": "13217:15:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13208:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13236:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "13208:29:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1752,
																		"nodeType": "IfStatement",
																		"src": "13204:845:5",
																		"trueBody": {
																			"id": 1751,
																			"nodeType": "Block",
																			"src": "13239:810:5",
																			"statements": [
																				{
																					"body": {
																						"id": 1747,
																						"nodeType": "Block",
																						"src": "13893:93:5",
																						"statements": [
																							{
																								"expression": {
																									"id": 1745,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1740,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1727,
																										"src": "13924:6:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 1741,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1330,
																											"src": "13933:17:5",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 1744,
																										"indexExpression": {
																											"id": 1743,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "13951:6:5",
																											"subExpression": {
																												"id": 1742,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1716,
																												"src": "13953:4:5",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "13933:25:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "13924:34:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1746,
																								"nodeType": "ExpressionStatement",
																								"src": "13924:34:5"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1739,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1737,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1727,
																							"src": "13880:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1738,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13890:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "13880:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1748,
																					"nodeType": "WhileStatement",
																					"src": "13873:113:5"
																				},
																				{
																					"expression": {
																						"id": 1749,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1727,
																						"src": "14019:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 1714,
																					"id": 1750,
																					"nodeType": "Return",
																					"src": "14012:13:5"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1757,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2872,
														"src": "14096:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14096:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1759,
												"nodeType": "RevertStatement",
												"src": "14089:38:5"
											}
										]
									},
									"documentation": {
										"id": 1708,
										"nodeType": "StructuredDocumentation",
										"src": "12786:68:5",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "12869:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12896:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "12888:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12888:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12887:17:5"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "12927:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12927:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12926:9:5"
									},
									"scope": 2851,
									"src": "12860:1275:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "14333:267:5",
										"statements": [
											{
												"expression": {
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1770,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "14344:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2902_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2895,
														"src": "14344:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1777,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1764,
																		"src": "14377:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14369:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1775,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "14369:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14369:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14361:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1773,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14361:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14361:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14344:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1781,
												"nodeType": "ExpressionStatement",
												"src": "14344:41:5"
											},
											{
												"expression": {
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1782,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "14396:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2902_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2897,
														"src": "14396:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1787,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "14430:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1788,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "14440:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14430:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14423:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 1785,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "14423:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14423:41:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "14396:68:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "14396:68:5"
											},
											{
												"expression": {
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1793,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "14475:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2902_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1795,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2899,
														"src": "14475:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1796,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1764,
																"src": "14494:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1797,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "14503:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14494:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14522:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14494:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14475:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1802,
												"nodeType": "ExpressionStatement",
												"src": "14475:48:5"
											},
											{
												"expression": {
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1803,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "14534:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2902_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1805,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2901,
														"src": "14534:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1808,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "14563:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1809,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1296,
																	"src": "14573:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14563:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14556:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 1806,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "14556:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14556:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "14534:58:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "14534:58:5"
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "14143:85:5",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "14243:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "14270:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "14262:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14262:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14261:16:5"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "14322:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "14300:31:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2902_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1767,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1766,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2902,
														"src": "14300:14:5"
													},
													"referencedDeclaration": 2902,
													"src": "14300:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2902_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14299:33:5"
									},
									"scope": 2851,
									"src": "14234:366:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "14779:354:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14799:327:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14911:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "14924:5:5"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "14931:16:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14920:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14920:28:5"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "14911:5:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15042:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15055:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "15069:23:5"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "15094:9:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15094:11:5"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "15065:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15065:41:5"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "15108:5:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "15062:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15062:52:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15052:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15052:63:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15042:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1312,
														"isOffset": false,
														"isSlot": false,
														"src": "14931:16:5",
														"valueSize": 1
													},
													{
														"declaration": 1280,
														"isOffset": false,
														"isSlot": false,
														"src": "15069:23:5",
														"valueSize": 1
													},
													{
														"declaration": 1820,
														"isOffset": false,
														"isSlot": false,
														"src": "15108:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1818,
														"isOffset": false,
														"isSlot": false,
														"src": "14911:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1818,
														"isOffset": false,
														"isSlot": false,
														"src": "14924:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1818,
														"isOffset": false,
														"isSlot": false,
														"src": "15055:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1823,
														"isOffset": false,
														"isSlot": false,
														"src": "15042:6:5",
														"valueSize": 1
													}
												],
												"id": 1825,
												"nodeType": "InlineAssembly",
												"src": "14790:336:5"
											}
										]
									},
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "14608:69:5",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "14692:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14719:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "14711:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "14734:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "14726:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14726:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14710:30:5"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14771:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "14763:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14763:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14762:16:5"
									},
									"scope": 2851,
									"src": "14683:450:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "15321:238:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15407:145:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15485:56:5",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "15499:24:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "15528:8:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15538:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15525:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15525:15:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "15495:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15495:46:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15485:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1288,
														"isOffset": false,
														"isSlot": false,
														"src": "15499:24:5",
														"valueSize": 1
													},
													{
														"declaration": 1830,
														"isOffset": false,
														"isSlot": false,
														"src": "15528:8:5",
														"valueSize": 1
													},
													{
														"declaration": 1833,
														"isOffset": false,
														"isSlot": false,
														"src": "15485:6:5",
														"valueSize": 1
													}
												],
												"id": 1835,
												"nodeType": "InlineAssembly",
												"src": "15398:154:5"
											}
										]
									},
									"documentation": {
										"id": 1828,
										"nodeType": "StructuredDocumentation",
										"src": "15141:88:5",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 1837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "15244:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15273:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "15265:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15265:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15264:18:5"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15313:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "15305:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15305:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15304:16:5"
									},
									"scope": 2851,
									"src": "15235:324:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2999
									],
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "16314:330:5",
										"statements": [
											{
												"assignments": [
													1847
												],
												"declarations": [
													{
														"constant": false,
														"id": 1847,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16333:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1881,
														"src": "16325:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1846,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16325:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1851,
												"initialValue": {
													"arguments": [
														{
															"id": 1849,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "16349:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1848,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "16341:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16341:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16325:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1852,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2840,
															"src": "16374:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16374:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1854,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "16397:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16374:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1867,
												"nodeType": "IfStatement",
												"src": "16370:175:5",
												"trueBody": {
													"condition": {
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "16421:45:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 1857,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1847,
																	"src": "16439:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1858,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2840,
																		"src": "16446:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16446:19:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1856,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "16422:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16422:44:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1866,
													"nodeType": "IfStatement",
													"src": "16417:128:5",
													"trueBody": {
														"id": 1865,
														"nodeType": "Block",
														"src": "16468:77:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1862,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2857,
																		"src": "16494:33:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16494:35:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1864,
																"nodeType": "RevertStatement",
																"src": "16487:42:5"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1868,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "16557:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$1252_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 1870,
															"indexExpression": {
																"id": 1869,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1842,
																"src": "16573:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16557:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$1252_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 1871,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1251,
														"src": "16557:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1872,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "16590:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16557:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "16557:35:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1876,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "16617:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1877,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "16624:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1878,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "16628:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1875,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2934,
														"src": "16608:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16608:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1880,
												"nodeType": "EmitStatement",
												"src": "16603:33:5"
											}
										]
									},
									"documentation": {
										"id": 1838,
										"nodeType": "StructuredDocumentation",
										"src": "15758:472:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "16245:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1844,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16305:8:5"
									},
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16261:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "16253:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16253:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16273:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "16265:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16265:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16252:29:5"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16314:0:5"
									},
									"scope": 2851,
									"src": "16236:408:5",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3015
									],
									"body": {
										"id": 1904,
										"nodeType": "Block",
										"src": "16888:133:5",
										"statements": [
											{
												"condition": {
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16903:17:5",
													"subExpression": {
														"arguments": [
															{
																"id": 1892,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1885,
																"src": "16912:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1891,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "16904:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16904:16:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1898,
												"nodeType": "IfStatement",
												"src": "16899:64:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1895,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2860,
															"src": "16929:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16929:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1897,
													"nodeType": "RevertStatement",
													"src": "16922:41:5"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1899,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "16983:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$1252_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 1901,
														"indexExpression": {
															"id": 1900,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "16999:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16983:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$1252_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1251,
													"src": "16983:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1890,
												"id": 1903,
												"nodeType": "Return",
												"src": "16976:37:5"
											}
										]
									},
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "16652:145:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "16812:11:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1887,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16861:8:5"
									},
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16832:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "16824:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16823:17:5"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "16879:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16879:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16878:9:5"
									},
									"scope": 2851,
									"src": "16803:218:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3007
									],
									"body": {
										"id": 1930,
										"nodeType": "Block",
										"src": "17445:150:5",
										"statements": [
											{
												"expression": {
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1914,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "17456:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1918,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1915,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2840,
																	"src": "17475:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17475:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17456:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1919,
														"indexExpression": {
															"id": 1917,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "17496:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17456:49:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1920,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1910,
														"src": "17508:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17456:60:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1922,
												"nodeType": "ExpressionStatement",
												"src": "17456:60:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1924,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2840,
																"src": "17547:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17547:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1926,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "17568:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1927,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1910,
															"src": "17578:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1923,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2943,
														"src": "17532:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17532:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1929,
												"nodeType": "EmitStatement",
												"src": "17527:60:5"
											}
										]
									},
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "17029:326:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "17370:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1912,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17436:8:5"
									},
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17396:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "17388:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17388:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17411:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "17406:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1909,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17406:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17387:33:5"
									},
									"returnParameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17445:0:5"
									},
									"scope": 2851,
									"src": "17361:234:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3025
									],
									"body": {
										"id": 1948,
										"nodeType": "Block",
										"src": "17855:61:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1942,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "17873:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1944,
														"indexExpression": {
															"id": 1943,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "17892:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17873:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1946,
													"indexExpression": {
														"id": 1945,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "17899:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17873:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1941,
												"id": 1947,
												"nodeType": "Return",
												"src": "17866:42:5"
											}
										]
									},
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "17603:143:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17761:16:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1938,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17831:8:5"
									},
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17786:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "17778:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17778:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17801:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "17793:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17793:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17777:33:5"
									},
									"returnParameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "17849:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1939,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17849:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17848:6:5"
									},
									"scope": 2851,
									"src": "17752:164:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1974,
										"nodeType": "Block",
										"src": "18245:211:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1957,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "18276:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18276:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1959,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "18295:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18276:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1961,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "18319:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1962,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "18329:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18319:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "18276:66:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1965,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "18380:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1967,
																"indexExpression": {
																	"id": 1966,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "18398:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18380:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1968,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "18409:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18380:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18428:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "18380:49:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18276:153:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1956,
												"id": 1973,
												"nodeType": "Return",
												"src": "18256:173:5"
											}
										]
									},
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "17924:244:5",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 1975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "18183:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "18191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18191:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18190:17:5"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "18239:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1954,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18239:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18238:6:5"
									},
									"scope": 2851,
									"src": "18174:282:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1988,
										"nodeType": "Block",
										"src": "18727:497:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18747:470:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18859:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "18872:5:5"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "18879:16:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18868:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18868:28:5"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "18859:5:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19011:45:5",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "19028:9:5"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "19039:16:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19024:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19024:32:5"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "19011:9:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19140:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "19156:9:5"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "19167:5:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19153:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19153:20:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "19178:9:5"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "19189:15:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19175:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19175:30:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19150:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19150:56:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "19140:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1312,
														"isOffset": false,
														"isSlot": false,
														"src": "18879:16:5",
														"valueSize": 1
													},
													{
														"declaration": 1312,
														"isOffset": false,
														"isSlot": false,
														"src": "19039:16:5",
														"valueSize": 1
													},
													{
														"declaration": 1978,
														"isOffset": false,
														"isSlot": false,
														"src": "19189:15:5",
														"valueSize": 1
													},
													{
														"declaration": 1982,
														"isOffset": false,
														"isSlot": false,
														"src": "19011:9:5",
														"valueSize": 1
													},
													{
														"declaration": 1982,
														"isOffset": false,
														"isSlot": false,
														"src": "19028:9:5",
														"valueSize": 1
													},
													{
														"declaration": 1982,
														"isOffset": false,
														"isSlot": false,
														"src": "19156:9:5",
														"valueSize": 1
													},
													{
														"declaration": 1982,
														"isOffset": false,
														"isSlot": false,
														"src": "19178:9:5",
														"valueSize": 1
													},
													{
														"declaration": 1980,
														"isOffset": false,
														"isSlot": false,
														"src": "18859:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1980,
														"isOffset": false,
														"isSlot": false,
														"src": "18872:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1980,
														"isOffset": false,
														"isSlot": false,
														"src": "19167:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1985,
														"isOffset": false,
														"isSlot": false,
														"src": "19140:6:5",
														"valueSize": 1
													}
												],
												"id": 1987,
												"nodeType": "InlineAssembly",
												"src": "18738:479:5"
											}
										]
									},
									"documentation": {
										"id": 1976,
										"nodeType": "StructuredDocumentation",
										"src": "18464:95:5",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 1989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "18574:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18617:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "18609:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18609:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "18643:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18643:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "18675:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "18667:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18667:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18598:93:5"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18719:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "18714:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1984,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18714:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18713:13:5"
									},
									"scope": 2851,
									"src": "18565:659:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "19498:324:5",
										"statements": [
											{
												"assignments": [
													2001
												],
												"declarations": [
													{
														"constant": false,
														"id": 2001,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "19534:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 2007,
														"src": "19509:38:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$1252_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 2000,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1999,
																"name": "TokenApprovalRef",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1252,
																"src": "19509:16:5"
															},
															"referencedDeclaration": 1252,
															"src": "19509:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$1252_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2005,
												"initialValue": {
													"baseExpression": {
														"id": 2002,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "19550:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$1252_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 2004,
													"indexExpression": {
														"id": 2003,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1992,
														"src": "19566:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19550:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$1252_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19509:65:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19689:126:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19704:41:5",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "19727:18:5"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "19704:19:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19759:45:5",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "19784:19:5"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "19778:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19778:26:5"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "19759:15:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1997,
														"isOffset": false,
														"isSlot": false,
														"src": "19759:15:5",
														"valueSize": 1
													},
													{
														"declaration": 1995,
														"isOffset": false,
														"isSlot": false,
														"src": "19704:19:5",
														"valueSize": 1
													},
													{
														"declaration": 1995,
														"isOffset": false,
														"isSlot": false,
														"src": "19784:19:5",
														"valueSize": 1
													},
													{
														"declaration": 2001,
														"isOffset": false,
														"isSlot": true,
														"src": "19727:18:5",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2006,
												"nodeType": "InlineAssembly",
												"src": "19680:135:5"
											}
										]
									},
									"documentation": {
										"id": 1990,
										"nodeType": "StructuredDocumentation",
										"src": "19232:99:5",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "19346:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19381:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "19373:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19373:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19372:17:5"
									},
									"returnParameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "19447:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "19439:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19439:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "19476:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "19468:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19468:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19438:54:5"
									},
									"scope": 2851,
									"src": "19337:485:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2991
									],
									"body": {
										"id": 2152,
										"nodeType": "Block",
										"src": "20573:2694:5",
										"statements": [
											{
												"assignments": [
													2020
												],
												"declarations": [
													{
														"constant": false,
														"id": 2020,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "20592:19:5",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "20584:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2019,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20584:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2024,
												"initialValue": {
													"arguments": [
														{
															"id": 2022,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "20633:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2021,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "20614:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20614:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20584:57:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2029,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2020,
																		"src": "20674:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20666:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2027,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20666:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20666:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20658:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20658:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 2031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20658:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2032,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2011,
														"src": "20699:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20658:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2037,
												"nodeType": "IfStatement",
												"src": "20654:86:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2034,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2878,
															"src": "20712:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20712:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2036,
													"nodeType": "RevertStatement",
													"src": "20705:35:5"
												}
											},
											{
												"assignments": [
													2039,
													2041
												],
												"declarations": [
													{
														"constant": false,
														"id": 2039,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "20762:19:5",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "20754:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2038,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20754:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2041,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "20791:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2152,
														"src": "20783:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2040,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20783:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2045,
												"initialValue": {
													"arguments": [
														{
															"id": 2043,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "20837:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2042,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "20810:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20810:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20753:92:5"
											},
											{
												"condition": {
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "20944:69:5",
													"subExpression": {
														"arguments": [
															{
																"id": 2047,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2041,
																"src": "20970:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2048,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2011,
																"src": "20987:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2049,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2840,
																	"src": "20993:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20993:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2046,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1989,
															"src": "20945:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20945:68:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2063,
												"nodeType": "IfStatement",
												"src": "20940:180:5",
												"trueBody": {
													"condition": {
														"id": 2058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "21032:44:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 2054,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2011,
																	"src": "21050:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2055,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2840,
																		"src": "21056:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21056:19:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2053,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "21033:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21033:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2062,
													"nodeType": "IfStatement",
													"src": "21028:92:5",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2059,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2875,
																"src": "21085:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21085:35:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2061,
														"nodeType": "RevertStatement",
														"src": "21078:42:5"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2064,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2013,
														"src": "21137:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21151:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21143:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2065,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21143:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 2068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21143:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21137:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2073,
												"nodeType": "IfStatement",
												"src": "21133:52:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2070,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2884,
															"src": "21162:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21162:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2072,
													"nodeType": "RevertStatement",
													"src": "21155:30:5"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2075,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "21220:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2076,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "21226:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2077,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "21230:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21239:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2074,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2223,
														"src": "21198:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21198:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2080,
												"nodeType": "ExpressionStatement",
												"src": "21198:43:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21316:186:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21350:141:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "21453:19:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21474:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "21446:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21446:30:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21446:30:5"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "21334:15:5"
															},
															"nodeType": "YulIf",
															"src": "21331:160:5"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2041,
														"isOffset": false,
														"isSlot": false,
														"src": "21334:15:5",
														"valueSize": 1
													},
													{
														"declaration": 2039,
														"isOffset": false,
														"isSlot": false,
														"src": "21453:19:5",
														"valueSize": 1
													}
												],
												"id": 2081,
												"nodeType": "InlineAssembly",
												"src": "21307:195:5"
											},
											{
												"id": 2138,
												"nodeType": "UncheckedBlock",
												"src": "21774:1388:5",
												"statements": [
													{
														"expression": {
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "21869:26:5",
															"subExpression": {
																"baseExpression": {
																	"id": 2082,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "21871:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2084,
																"indexExpression": {
																	"id": 2083,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2011,
																	"src": "21890:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21871:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2086,
														"nodeType": "ExpressionStatement",
														"src": "21869:26:5"
													},
													{
														"expression": {
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "21938:24:5",
															"subExpression": {
																"baseExpression": {
																	"id": 2087,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "21940:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2089,
																"indexExpression": {
																	"id": 2088,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2013,
																	"src": "21959:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21940:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2091,
														"nodeType": "ExpressionStatement",
														"src": "21938:24:5"
													},
													{
														"expression": {
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2092,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "22233:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2094,
																"indexExpression": {
																	"id": 2093,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2015,
																	"src": "22251:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "22233:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2096,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2013,
																		"src": "22299:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2097,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "22320:25:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2099,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2011,
																					"src": "22363:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2100,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2013,
																					"src": "22369:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2101,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2020,
																					"src": "22373:19:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2098,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2830,
																				"src": "22348:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22348:45:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22320:73:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2095,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1827,
																	"src": "22262:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22262:146:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22233:175:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2106,
														"nodeType": "ExpressionStatement",
														"src": "22233:175:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2107,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2020,
																	"src": "22528:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2108,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "22550:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22528:47:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22579:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22528:52:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2137,
														"nodeType": "IfStatement",
														"src": "22524:627:5",
														"trueBody": {
															"id": 2136,
															"nodeType": "Block",
															"src": "22582:569:5",
															"statements": [
																{
																	"assignments": [
																		2113
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2113,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "22609:11:5",
																			"nodeType": "VariableDeclaration",
																			"scope": 2136,
																			"src": "22601:19:5",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2112,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22601:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2117,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2114,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2015,
																			"src": "22623:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22633:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22623:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22601:33:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 2118,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1330,
																				"src": "22756:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 2120,
																			"indexExpression": {
																				"id": 2119,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2113,
																				"src": "22774:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22756:30:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22790:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "22756:35:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2135,
																	"nodeType": "IfStatement",
																	"src": "22752:384:5",
																	"trueBody": {
																		"id": 2134,
																		"nodeType": "Block",
																		"src": "22793:343:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2123,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2113,
																						"src": "22879:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 2124,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1320,
																						"src": "22894:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22879:28:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2133,
																				"nodeType": "IfStatement",
																				"src": "22875:242:5",
																				"trueBody": {
																					"id": 2132,
																					"nodeType": "Block",
																					"src": "22909:208:5",
																					"statements": [
																						{
																							"expression": {
																								"id": 2130,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 2126,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1330,
																										"src": "23041:17:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 2128,
																									"indexExpression": {
																										"id": 2127,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2113,
																										"src": "23059:11:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "23041:30:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 2129,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2020,
																									"src": "23074:19:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "23041:52:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2131,
																							"nodeType": "ExpressionStatement",
																							"src": "23041:52:5"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2140,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "23188:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2141,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "23194:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2142,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "23198:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2139,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2925,
														"src": "23179:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23179:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2144,
												"nodeType": "EmitStatement",
												"src": "23174:32:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2146,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "23238:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2147,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "23244:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2148,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "23248:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23257:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2145,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2236,
														"src": "23217:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23217:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2151,
												"nodeType": "ExpressionStatement",
												"src": "23217:42:5"
											}
										]
									},
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "20021:415:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "20451:12:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2017,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20564:8:5"
									},
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20482:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "20474:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20474:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20505:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "20497:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20497:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "20518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20463:77:5"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20573:0:5"
									},
									"scope": 2851,
									"src": "20442:2825:5",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2981
									],
									"body": {
										"id": 2171,
										"nodeType": "Block",
										"src": "23498:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2165,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2156,
															"src": "23526:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2166,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "23532:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2167,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "23536:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23545:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2164,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2172,
															2210
														],
														"referencedDeclaration": 2210,
														"src": "23509:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23509:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2170,
												"nodeType": "ExpressionStatement",
												"src": "23509:39:5"
											}
										]
									},
									"documentation": {
										"id": 2154,
										"nodeType": "StructuredDocumentation",
										"src": "23275:82:5",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 2172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23372:16:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23489:8:5"
									},
									"parameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23407:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "23399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23399:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23430:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "23422:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23422:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23451:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "23443:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23443:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23388:77:5"
									},
									"returnParameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23498:0:5"
									},
									"scope": 2851,
									"src": "23363:193:5",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2971
									],
									"body": {
										"id": 2209,
										"nodeType": "Block",
										"src": "24318:243:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2186,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2175,
															"src": "24342:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2187,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2177,
															"src": "24348:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2179,
															"src": "24352:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2185,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2153,
														"src": "24329:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24329:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2190,
												"nodeType": "ExpressionStatement",
												"src": "24329:31:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2191,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2177,
																"src": "24375:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "24375:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "24375:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24393:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24375:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2208,
												"nodeType": "IfStatement",
												"src": "24371:183:5",
												"trueBody": {
													"condition": {
														"id": 2202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "24413:57:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 2197,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2175,
																	"src": "24445:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2198,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "24451:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2199,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2179,
																	"src": "24455:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2200,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2181,
																	"src": "24464:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2196,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "24414:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24414:56:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2207,
													"nodeType": "IfStatement",
													"src": "24409:145:5",
													"trueBody": {
														"id": 2206,
														"nodeType": "Block",
														"src": "24472:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2203,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2881,
																		"src": "24498:38:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24498:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2205,
																"nodeType": "RevertStatement",
																"src": "24491:47:5"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 2173,
										"nodeType": "StructuredDocumentation",
										"src": "23564:584:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 2210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24163:16:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2183,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24309:8:5"
									},
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24198:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "24190:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24190:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24221:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "24213:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24213:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24242:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "24234:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "24273:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "24260:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24260:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24179:106:5"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24318:0:5"
									},
									"scope": 2851,
									"src": "24154:407:5",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2222,
										"nodeType": "Block",
										"src": "25380:2:5",
										"statements": []
									},
									"documentation": {
										"id": 2211,
										"nodeType": "StructuredDocumentation",
										"src": "24569:648:5",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "25232:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25272:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "25264:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25264:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25295:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "25287:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25287:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "25316:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "25308:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25308:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "25347:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "25339:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25339:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25253:109:5"
									},
									"returnParameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25380:0:5"
									},
									"scope": 2851,
									"src": "25223:159:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2235,
										"nodeType": "Block",
										"src": "26203:2:5",
										"statements": []
									},
									"documentation": {
										"id": 2224,
										"nodeType": "StructuredDocumentation",
										"src": "25390:651:5",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "26056:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26095:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "26087:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26087:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26118:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "26110:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26110:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "26139:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "26131:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26131:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "26170:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "26162:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26162:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26076:109:5"
									},
									"returnParameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26203:0:5"
									},
									"scope": 2851,
									"src": "26047:158:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2290,
										"nodeType": "Block",
										"src": "26814:547:5",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 2271,
															"nodeType": "Block",
															"src": "26966:98:5",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 2269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2263,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2261,
																			"src": "26988:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 2265,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2241,
																							"src": "27023:2:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2264,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1246,
																						"src": "26998:24:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$1246_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 2266,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26998:28:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$1246",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 2267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1245,
																				"src": "26998:45:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 2268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "26998:54:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "26988:64:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 2249,
																	"id": 2270,
																	"nodeType": "Return",
																	"src": "26981:71:5"
																}
															]
														},
														"errorName": "",
														"id": 2272,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2262,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2261,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "26948:6:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 2272,
																	"src": "26941:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 2260,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "26941:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "26926:39:5"
														},
														"src": "26918:146:5"
													},
													{
														"block": {
															"id": 2287,
															"nodeType": "Block",
															"src": "27093:261:5",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2276,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2274,
																				"src": "27112:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "27112:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27129:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "27112:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 2285,
																		"nodeType": "Block",
																		"src": "27220:123:5",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "27248:80:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "27282:2:5",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "27286:6:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "27278:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27278:15:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "27301:6:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "27295:5:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27295:13:5"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "27271:6:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "27271:38:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "27271:38:5"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 2274,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "27286:6:5",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2274,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "27301:6:5",
																						"valueSize": 1
																					}
																				],
																				"id": 2284,
																				"nodeType": "InlineAssembly",
																				"src": "27239:89:5"
																			}
																		]
																	},
																	"id": 2286,
																	"nodeType": "IfStatement",
																	"src": "27108:235:5",
																	"trueBody": {
																		"id": 2283,
																		"nodeType": "Block",
																		"src": "27132:82:5",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2280,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2881,
																						"src": "27158:38:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 2281,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27158:40:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2282,
																				"nodeType": "RevertStatement",
																				"src": "27151:47:5"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 2288,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2275,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2274,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "27085:6:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 2288,
																	"src": "27072:19:5",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 2273,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "27072:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "27071:21:5"
														},
														"src": "27065:289:5"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2254,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2840,
																"src": "26875:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26875:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2256,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "26896:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2257,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "26902:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2258,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2245,
															"src": "26911:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2251,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "26854:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2250,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "26829:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$1246_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26829:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$1246",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 2253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1245,
														"src": "26829:45:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26829:88:5",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 2289,
												"nodeType": "TryStatement",
												"src": "26825:529:5"
											}
										]
									},
									"documentation": {
										"id": 2237,
										"nodeType": "StructuredDocumentation",
										"src": "26213:426:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 2291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "26654:30:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26703:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "26695:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26695:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26726:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "26718:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26718:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26747:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "26739:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "26778:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "26765:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2244,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26765:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26684:106:5"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "26808:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26808:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26807:6:5"
									},
									"scope": 2851,
									"src": "26645:716:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2386,
										"nodeType": "Block",
										"src": "27885:2904:5",
										"statements": [
											{
												"assignments": [
													2300
												],
												"declarations": [
													{
														"constant": false,
														"id": 2300,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "27904:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 2386,
														"src": "27896:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2299,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27896:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2302,
												"initialValue": {
													"id": 2301,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1320,
													"src": "27919:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27896:36:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2303,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2296,
														"src": "27947:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27959:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27947:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2309,
												"nodeType": "IfStatement",
												"src": "27943:44:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2306,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2869,
															"src": "27969:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27969:18:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2308,
													"nodeType": "RevertStatement",
													"src": "27962:25:5"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28030:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28022:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2311,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28022:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28022:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2315,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2294,
															"src": "28034:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2316,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2300,
															"src": "28038:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2317,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2296,
															"src": "28052:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2310,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2223,
														"src": "28000:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28000:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2319,
												"nodeType": "ExpressionStatement",
												"src": "28000:61:5"
											},
											{
												"id": 2375,
												"nodeType": "UncheckedBlock",
												"src": "28249:2462:5",
												"statements": [
													{
														"expression": {
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2320,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "28475:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2322,
																"indexExpression": {
																	"id": 2321,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2294,
																	"src": "28494:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28475:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2323,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2296,
																	"src": "28501:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2326,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2324,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28514:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 2325,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1263,
																							"src": "28519:21:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "28514:26:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2327,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "28513:28:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28544:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "28513:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2330,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "28512:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28501:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28475:71:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2333,
														"nodeType": "ExpressionStatement",
														"src": "28475:71:5"
													},
													{
														"expression": {
															"id": 2352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2334,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "28789:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2336,
																"indexExpression": {
																	"id": 2335,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "28807:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28789:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2338,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2294,
																		"src": "28860:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2340,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2296,
																					"src": "28902:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2339,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1837,
																				"src": "28881:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28881:30:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2345,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28937:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2344,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "28929:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2343,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "28929:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2346,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28929:10:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2347,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2294,
																					"src": "28941:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 2348,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28945:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2342,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2830,
																				"src": "28914:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28914:33:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28881:66:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2337,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1827,
																	"src": "28823:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28823:139:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28789:173:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2353,
														"nodeType": "ExpressionStatement",
														"src": "28789:173:5"
													},
													{
														"assignments": [
															2355
														],
														"declarations": [
															{
																"constant": false,
																"id": 2355,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "28987:8:5",
																"nodeType": "VariableDeclaration",
																"scope": 2375,
																"src": "28979:16:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2354,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28979:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2356,
														"nodeType": "VariableDeclarationStatement",
														"src": "28979:16:5"
													},
													{
														"assignments": [
															2358
														],
														"declarations": [
															{
																"constant": false,
																"id": 2358,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "29018:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 2375,
																"src": "29010:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2357,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29010:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2362,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2359,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "29024:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2360,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2296,
																"src": "29039:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29024:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29010:37:5"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "29423:1181:5",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "29540:37:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "29556:2:5"
																			},
																			{
																				"name": "_BITMASK_ADDRESS",
																				"nodeType": "YulIdentifier",
																				"src": "29560:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "29552:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29552:25:5"
																	},
																	"variableNames": [
																		{
																			"name": "toMasked",
																			"nodeType": "YulIdentifier",
																			"src": "29540:8:5"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29669:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29730:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "_TRANSFER_EVENT_SIGNATURE",
																				"nodeType": "YulIdentifier",
																				"src": "29789:25:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29851:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "toMasked",
																				"nodeType": "YulIdentifier",
																				"src": "29892:8:5"
																			},
																			{
																				"name": "startTokenId",
																				"nodeType": "YulIdentifier",
																				"src": "29932:12:5"
																			}
																		],
																		"functionName": {
																			"name": "log4",
																			"nodeType": "YulIdentifier",
																			"src": "29642:4:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29642:335:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "29642:335:5"
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "30419:170:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30516:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30519:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nodeType": "YulIdentifier",
																							"src": "30522:25:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30549:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nodeType": "YulIdentifier",
																							"src": "30552:8:5"
																						},
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30562:7:5"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nodeType": "YulIdentifier",
																						"src": "30511:4:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30511:59:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "30511:59:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "30335:7:5"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "30344:3:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "30332:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30332:16:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "30325:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30325:24:5"
																	},
																	"nodeType": "YulForLoop",
																	"post": {
																		"nodeType": "YulBlock",
																		"src": "30350:68:5",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "30373:26:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30388:7:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30397:1:5",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "30384:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30384:15:5"
																				},
																				"variableNames": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "30373:7:5"
																					}
																				]
																			}
																		]
																	},
																	"pre": {
																		"nodeType": "YulBlock",
																		"src": "30247:77:5",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "30270:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "startTokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30289:12:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30303:1:5",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "30285:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30285:20:5"
																				},
																				"variables": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulTypedName",
																						"src": "30274:7:5",
																						"type": ""
																					}
																				]
																			}
																		]
																	},
																	"src": "30243:346:5"
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1312,
																"isOffset": false,
																"isSlot": false,
																"src": "29560:16:5",
																"valueSize": 1
															},
															{
																"declaration": 1318,
																"isOffset": false,
																"isSlot": false,
																"src": "29789:25:5",
																"valueSize": 1
															},
															{
																"declaration": 1318,
																"isOffset": false,
																"isSlot": false,
																"src": "30522:25:5",
																"valueSize": 1
															},
															{
																"declaration": 2358,
																"isOffset": false,
																"isSlot": false,
																"src": "30344:3:5",
																"valueSize": 1
															},
															{
																"declaration": 2300,
																"isOffset": false,
																"isSlot": false,
																"src": "29932:12:5",
																"valueSize": 1
															},
															{
																"declaration": 2300,
																"isOffset": false,
																"isSlot": false,
																"src": "30289:12:5",
																"valueSize": 1
															},
															{
																"declaration": 2294,
																"isOffset": false,
																"isSlot": false,
																"src": "29556:2:5",
																"valueSize": 1
															},
															{
																"declaration": 2355,
																"isOffset": false,
																"isSlot": false,
																"src": "29540:8:5",
																"valueSize": 1
															},
															{
																"declaration": 2355,
																"isOffset": false,
																"isSlot": false,
																"src": "29892:8:5",
																"valueSize": 1
															},
															{
																"declaration": 2355,
																"isOffset": false,
																"isSlot": false,
																"src": "30552:8:5",
																"valueSize": 1
															}
														],
														"id": 2363,
														"nodeType": "InlineAssembly",
														"src": "29414:1190:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2364,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2355,
																"src": "30622:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30634:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30622:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2370,
														"nodeType": "IfStatement",
														"src": "30618:45:5",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2367,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2866,
																	"src": "30644:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30644:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2369,
															"nodeType": "RevertStatement",
															"src": "30637:26:5"
														}
													},
													{
														"expression": {
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2371,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "30680:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2372,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "30696:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30680:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2374,
														"nodeType": "ExpressionStatement",
														"src": "30680:19:5"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30750:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30742:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2377,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30742:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30742:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2381,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2294,
															"src": "30754:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2382,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2300,
															"src": "30758:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2383,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2296,
															"src": "30772:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2376,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2236,
														"src": "30721:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30721:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2385,
												"nodeType": "ExpressionStatement",
												"src": "30721:60:5"
											}
										]
									},
									"documentation": {
										"id": 2292,
										"nodeType": "StructuredDocumentation",
										"src": "27558:259:5",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 2387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "27832:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27846:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "27838:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27838:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "27858:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "27850:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27850:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27837:30:5"
									},
									"returnParameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27885:0:5"
									},
									"scope": 2851,
									"src": "27823:2966:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "31721:1406:5",
										"statements": [
											{
												"assignments": [
													2396
												],
												"declarations": [
													{
														"constant": false,
														"id": 2396,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "31740:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 2498,
														"src": "31732:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2395,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31732:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2398,
												"initialValue": {
													"id": 2397,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1320,
													"src": "31755:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31732:36:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2399,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2390,
														"src": "31783:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31797:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31789:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2400,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "31789:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 2403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31789:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31783:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2408,
												"nodeType": "IfStatement",
												"src": "31779:48:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2405,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2866,
															"src": "31808:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31808:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2407,
													"nodeType": "RevertStatement",
													"src": "31801:26:5"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2409,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2392,
														"src": "31842:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31854:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31842:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2415,
												"nodeType": "IfStatement",
												"src": "31838:44:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2412,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2869,
															"src": "31864:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31864:18:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2414,
													"nodeType": "RevertStatement",
													"src": "31857:25:5"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2416,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2392,
														"src": "31897:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2417,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "31908:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31897:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2422,
												"nodeType": "IfStatement",
												"src": "31893:89:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2419,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2890,
															"src": "31949:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31949:33:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2421,
													"nodeType": "RevertStatement",
													"src": "31942:40:5"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32025:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32017:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2424,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32017:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32017:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2428,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "32029:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2429,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2396,
															"src": "32033:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2430,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2392,
															"src": "32047:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2423,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2223,
														"src": "31995:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31995:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2432,
												"nodeType": "ExpressionStatement",
												"src": "31995:61:5"
											},
											{
												"id": 2487,
												"nodeType": "UncheckedBlock",
												"src": "32168:881:5",
												"statements": [
													{
														"expression": {
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2433,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "32394:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2435,
																"indexExpression": {
																	"id": 2434,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2390,
																	"src": "32413:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32394:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2436,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "32420:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2439,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2437,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32433:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 2438,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1263,
																							"src": "32438:21:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "32433:26:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2440,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "32432:28:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32463:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "32432:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2443,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32431:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32420:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32394:71:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2446,
														"nodeType": "ExpressionStatement",
														"src": "32394:71:5"
													},
													{
														"expression": {
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2447,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "32708:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2449,
																"indexExpression": {
																	"id": 2448,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "32726:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32708:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2451,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2390,
																		"src": "32779:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2453,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2392,
																					"src": "32821:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2452,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1837,
																				"src": "32800:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32800:30:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2458,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32856:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2457,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "32848:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2456,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "32848:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2459,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "32848:10:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2460,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2390,
																					"src": "32860:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 2461,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "32864:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2455,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2830,
																				"src": "32833:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32833:33:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32800:66:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2450,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1827,
																	"src": "32742:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32742:139:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32708:173:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2466,
														"nodeType": "ExpressionStatement",
														"src": "32708:173:5"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 2468,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "32923:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2469,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2396,
																			"src": "32937:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 2470,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2392,
																			"src": "32952:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32937:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32963:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32937:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32974:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32966:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2474,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "32966:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32966:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2478,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2390,
																	"src": "32978:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2467,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3056,
																"src": "32903:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32903:78:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2480,
														"nodeType": "EmitStatement",
														"src": "32898:83:5"
													},
													{
														"expression": {
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2481,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "32998:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2482,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "33014:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2483,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "33029:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33014:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32998:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2486,
														"nodeType": "ExpressionStatement",
														"src": "32998:39:5"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33088:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33080:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33080:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33080:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2493,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "33092:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2494,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2396,
															"src": "33096:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2495,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2392,
															"src": "33110:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2488,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2236,
														"src": "33059:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33059:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2497,
												"nodeType": "ExpressionStatement",
												"src": "33059:60:5"
											}
										]
									},
									"documentation": {
										"id": 2388,
										"nodeType": "StructuredDocumentation",
										"src": "30797:849:5",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "31661:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31682:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "31674:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31674:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "31694:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "31686:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31686:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31673:30:5"
									},
									"returnParameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31721:0:5"
									},
									"scope": 2851,
									"src": "31652:1475:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2560,
										"nodeType": "Block",
										"src": "33661:569:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2510,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2502,
															"src": "33678:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2511,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2504,
															"src": "33682:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2509,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2387,
														"src": "33672:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33672:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2513,
												"nodeType": "ExpressionStatement",
												"src": "33672:19:5"
											},
											{
												"id": 2559,
												"nodeType": "UncheckedBlock",
												"src": "33704:519:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 2514,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2502,
																		"src": "33733:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "33733:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "33733:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33751:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33733:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2558,
														"nodeType": "IfStatement",
														"src": "33729:483:5",
														"trueBody": {
															"id": 2557,
															"nodeType": "Block",
															"src": "33754:458:5",
															"statements": [
																{
																	"assignments": [
																		2520
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2520,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "33781:3:5",
																			"nodeType": "VariableDeclaration",
																			"scope": 2557,
																			"src": "33773:11:5",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2519,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33773:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2522,
																	"initialValue": {
																		"id": 2521,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1320,
																		"src": "33787:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33773:27:5"
																},
																{
																	"assignments": [
																		2524
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2524,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "33827:5:5",
																			"nodeType": "VariableDeclaration",
																			"scope": 2557,
																			"src": "33819:13:5",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2523,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33819:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2528,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2525,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2520,
																			"src": "33835:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2526,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2504,
																			"src": "33841:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33835:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33819:30:5"
																},
																{
																	"body": {
																		"id": 2545,
																		"nodeType": "Block",
																		"src": "33871:209:5",
																		"statements": [
																			{
																				"condition": {
																					"id": 2539,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "33898:63:5",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 2532,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "33938:1:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 2531,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "33930:7:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 2530,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "33930:7:5",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2533,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33930:10:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2534,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2502,
																								"src": "33942:2:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2536,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "33946:7:5",
																								"subExpression": {
																									"id": 2535,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2524,
																									"src": "33946:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2537,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2506,
																								"src": "33955:5:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 2529,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2291,
																							"src": "33899:30:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 2538,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "33899:62:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2544,
																				"nodeType": "IfStatement",
																				"src": "33894:167:5",
																				"trueBody": {
																					"id": 2543,
																					"nodeType": "Block",
																					"src": "33963:98:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 2540,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2881,
																									"src": "33997:38:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 2541,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33997:40:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2542,
																							"nodeType": "RevertStatement",
																							"src": "33990:47:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2546,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2524,
																			"src": "34088:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2547,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2520,
																			"src": "34096:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34088:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2549,
																	"nodeType": "DoWhileStatement",
																	"src": "33868:233:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2550,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1320,
																			"src": "34166:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2551,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2520,
																			"src": "34183:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34166:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2556,
																	"nodeType": "IfStatement",
																	"src": "34162:34:5",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2553,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "34188:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34188:8:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2555,
																		"nodeType": "ExpressionStatement",
																		"src": "34188:8:5"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "33135:400:5",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 2561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "33550:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33578:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "33570:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33570:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33599:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "33591:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33591:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "33631:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "33618:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2505,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33618:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33559:84:5"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33661:0:5"
									},
									"scope": 2851,
									"src": "33541:689:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2575,
										"nodeType": "Block",
										"src": "34380:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2570,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2564,
															"src": "34401:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2571,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2566,
															"src": "34405:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34415:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2569,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2561,
															2576
														],
														"referencedDeclaration": 2561,
														"src": "34391:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34391:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2574,
												"nodeType": "ExpressionStatement",
												"src": "34391:27:5"
											}
										]
									},
									"documentation": {
										"id": 2562,
										"nodeType": "StructuredDocumentation",
										"src": "34238:70:5",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 2576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "34323:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34341:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "34333:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34333:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "34353:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "34345:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34345:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34332:30:5"
									},
									"returnParameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34380:0:5"
									},
									"scope": 2851,
									"src": "34314:112:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2587,
										"nodeType": "Block",
										"src": "34742:40:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2583,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "34759:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34768:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2582,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2588,
															2740
														],
														"referencedDeclaration": 2740,
														"src": "34753:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 2585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34753:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2586,
												"nodeType": "ExpressionStatement",
												"src": "34753:21:5"
											}
										]
									},
									"documentation": {
										"id": 2577,
										"nodeType": "StructuredDocumentation",
										"src": "34623:64:5",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 2588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "34702:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34716:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "34708:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34707:17:5"
									},
									"returnParameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34742:0:5"
									},
									"scope": 2851,
									"src": "34693:89:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2739,
										"nodeType": "Block",
										"src": "35080:3012:5",
										"statements": [
											{
												"assignments": [
													2597
												],
												"declarations": [
													{
														"constant": false,
														"id": 2597,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "35099:19:5",
														"nodeType": "VariableDeclaration",
														"scope": 2739,
														"src": "35091:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2596,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35091:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2601,
												"initialValue": {
													"arguments": [
														{
															"id": 2599,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "35140:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2598,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "35121:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35121:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35091:57:5"
											},
											{
												"assignments": [
													2603
												],
												"declarations": [
													{
														"constant": false,
														"id": 2603,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "35169:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 2739,
														"src": "35161:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2602,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35161:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2611,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2608,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2597,
																	"src": "35192:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35184:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2606,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "35184:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35184:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "35176:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2604,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35176:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35176:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35161:52:5"
											},
											{
												"assignments": [
													2613,
													2615
												],
												"declarations": [
													{
														"constant": false,
														"id": 2613,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "35235:19:5",
														"nodeType": "VariableDeclaration",
														"scope": 2739,
														"src": "35227:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35227:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2615,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "35264:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2739,
														"src": "35256:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2614,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35256:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2619,
												"initialValue": {
													"arguments": [
														{
															"id": 2617,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "35310:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2616,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "35283:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 2618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35283:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35226:92:5"
											},
											{
												"condition": {
													"id": 2620,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2593,
													"src": "35335:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2640,
												"nodeType": "IfStatement",
												"src": "35331:316:5",
												"trueBody": {
													"id": 2639,
													"nodeType": "Block",
													"src": "35350:297:5",
													"statements": [
														{
															"condition": {
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "35455:69:5",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 2622,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2615,
																			"src": "35481:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2623,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2603,
																			"src": "35498:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2624,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2840,
																				"src": "35504:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 2625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35504:19:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2621,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1989,
																		"src": "35456:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35456:68:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2638,
															"nodeType": "IfStatement",
															"src": "35451:184:5",
															"trueBody": {
																"condition": {
																	"id": 2633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "35547:44:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 2629,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2603,
																				"src": "35565:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2630,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2840,
																					"src": "35571:17:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2631,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "35571:19:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2628,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1949,
																			"src": "35548:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35548:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 2637,
																"nodeType": "IfStatement",
																"src": "35543:92:5",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2634,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2875,
																			"src": "35600:33:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35600:35:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2636,
																	"nodeType": "RevertStatement",
																	"src": "35593:42:5"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2642,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "35681:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35695:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35687:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2643,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35687:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35687:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2647,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "35699:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35708:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2641,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2223,
														"src": "35659:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35659:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2650,
												"nodeType": "ExpressionStatement",
												"src": "35659:51:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "35785:186:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "35819:141:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "35922:19:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35943:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "35915:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35915:30:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "35915:30:5"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "35803:15:5"
															},
															"nodeType": "YulIf",
															"src": "35800:160:5"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2615,
														"isOffset": false,
														"isSlot": false,
														"src": "35803:15:5",
														"valueSize": 1
													},
													{
														"declaration": 2613,
														"isOffset": false,
														"isSlot": false,
														"src": "35922:19:5",
														"valueSize": 1
													}
												],
												"id": 2651,
												"nodeType": "InlineAssembly",
												"src": "35776:195:5"
											},
											{
												"id": 2715,
												"nodeType": "UncheckedBlock",
												"src": "36243:1576:5",
												"statements": [
													{
														"expression": {
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2652,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "36562:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2654,
																"indexExpression": {
																	"id": 2653,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2603,
																	"src": "36581:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36562:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 2655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36591:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 2656,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1266,
																				"src": "36596:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "36591:26:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2658,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "36590:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36621:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "36590:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36562:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2662,
														"nodeType": "ExpressionStatement",
														"src": "36562:60:5"
													},
													{
														"expression": {
															"id": 2682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2663,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "36860:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2665,
																"indexExpression": {
																	"id": 2664,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2591,
																	"src": "36878:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36860:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2667,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2603,
																		"src": "36926:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2670,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2668,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1285,
																						"src": "36950:15:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 2669,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1293,
																						"src": "36968:25:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "36950:43:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2671,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "36949:45:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2673,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2603,
																					"src": "37012:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2676,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "37026:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2675,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "37018:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2674,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "37018:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2677,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "37018:10:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2678,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2597,
																					"src": "37030:19:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2672,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2830,
																				"src": "36997:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36997:53:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36949:101:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2666,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1827,
																	"src": "36889:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36889:176:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36860:205:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2683,
														"nodeType": "ExpressionStatement",
														"src": "36860:205:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2684,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2597,
																	"src": "37185:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2685,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "37207:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37185:47:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37236:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37185:52:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2714,
														"nodeType": "IfStatement",
														"src": "37181:627:5",
														"trueBody": {
															"id": 2713,
															"nodeType": "Block",
															"src": "37239:569:5",
															"statements": [
																{
																	"assignments": [
																		2690
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2690,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "37266:11:5",
																			"nodeType": "VariableDeclaration",
																			"scope": 2713,
																			"src": "37258:19:5",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2689,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "37258:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2694,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2691,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2591,
																			"src": "37280:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37290:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "37280:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "37258:33:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 2695,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1330,
																				"src": "37413:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 2697,
																			"indexExpression": {
																				"id": 2696,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2690,
																				"src": "37431:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "37413:30:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37447:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "37413:35:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2712,
																	"nodeType": "IfStatement",
																	"src": "37409:384:5",
																	"trueBody": {
																		"id": 2711,
																		"nodeType": "Block",
																		"src": "37450:343:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2702,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2700,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2690,
																						"src": "37536:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 2701,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1320,
																						"src": "37551:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "37536:28:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2710,
																				"nodeType": "IfStatement",
																				"src": "37532:242:5",
																				"trueBody": {
																					"id": 2709,
																					"nodeType": "Block",
																					"src": "37566:208:5",
																					"statements": [
																						{
																							"expression": {
																								"id": 2707,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 2703,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1330,
																										"src": "37698:17:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 2705,
																									"indexExpression": {
																										"id": 2704,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2690,
																										"src": "37716:11:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "37698:30:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 2706,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2597,
																									"src": "37731:19:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "37698:52:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2708,
																							"nodeType": "ExpressionStatement",
																							"src": "37698:52:5"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2717,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "37845:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37859:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37851:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2718,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37851:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37851:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2722,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "37863:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2716,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2925,
														"src": "37836:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37836:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2724,
												"nodeType": "EmitStatement",
												"src": "37831:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2726,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "37903:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37917:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37909:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2727,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37909:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37909:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2731,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "37921:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37930:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2725,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2236,
														"src": "37882:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37882:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2734,
												"nodeType": "ExpressionStatement",
												"src": "37882:50:5"
											},
											{
												"id": 2738,
												"nodeType": "UncheckedBlock",
												"src": "38034:51:5",
												"statements": [
													{
														"expression": {
															"id": 2736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "38059:14:5",
															"subExpression": {
																"id": 2735,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1322,
																"src": "38059:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2737,
														"nodeType": "ExpressionStatement",
														"src": "38059:14:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2589,
										"nodeType": "StructuredDocumentation",
										"src": "34790:215:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "35020:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35034:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "35026:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35026:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "35048:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "35043:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2592,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35043:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35025:37:5"
									},
									"returnParameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35080:0:5"
									},
									"scope": 2851,
									"src": "35011:3081:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2783,
										"nodeType": "Block",
										"src": "38459:457:5",
										"statements": [
											{
												"assignments": [
													2749
												],
												"declarations": [
													{
														"constant": false,
														"id": 2749,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "38478:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 2783,
														"src": "38470:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2748,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38470:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2753,
												"initialValue": {
													"baseExpression": {
														"id": 2750,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1330,
														"src": "38487:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2752,
													"indexExpression": {
														"id": 2751,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2743,
														"src": "38505:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "38487:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38470:41:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2754,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2749,
														"src": "38526:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38536:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38526:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2760,
												"nodeType": "IfStatement",
												"src": "38522:61:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2757,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2893,
															"src": "38546:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38546:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2759,
													"nodeType": "RevertStatement",
													"src": "38539:44:5"
												}
											},
											{
												"assignments": [
													2762
												],
												"declarations": [
													{
														"constant": false,
														"id": 2762,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "38602:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2783,
														"src": "38594:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38594:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2763,
												"nodeType": "VariableDeclarationStatement",
												"src": "38594:23:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "38708:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "38723:28:5",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "38742:9:5"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "38723:15:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2745,
														"isOffset": false,
														"isSlot": false,
														"src": "38742:9:5",
														"valueSize": 1
													},
													{
														"declaration": 2762,
														"isOffset": false,
														"isSlot": false,
														"src": "38723:15:5",
														"valueSize": 1
													}
												],
												"id": 2764,
												"nodeType": "InlineAssembly",
												"src": "38699:63:5"
											},
											{
												"expression": {
													"id": 2775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2765,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2749,
														"src": "38772:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2766,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2749,
																		"src": "38782:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 2767,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1304,
																		"src": "38791:30:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38782:39:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2769,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38781:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2770,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "38826:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 2771,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1296,
																		"src": "38845:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38826:37:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2773,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38825:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "38781:83:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38772:92:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2776,
												"nodeType": "ExpressionStatement",
												"src": "38772:92:5"
											},
											{
												"expression": {
													"id": 2781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2777,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "38875:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2779,
														"indexExpression": {
															"id": 2778,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2743,
															"src": "38893:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38875:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2780,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2749,
														"src": "38902:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38875:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2782,
												"nodeType": "ExpressionStatement",
												"src": "38875:33:5"
											}
										]
									},
									"documentation": {
										"id": 2741,
										"nodeType": "StructuredDocumentation",
										"src": "38292:86:5",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 2784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "38393:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2743,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "38417:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "38409:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38409:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "38431:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "38424:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2744,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "38424:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38408:33:5"
									},
									"returnParameters": {
										"id": 2747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38459:0:5"
									},
									"scope": 2851,
									"src": "38384:532:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2796,
										"nodeType": "Block",
										"src": "39637:2:5",
										"statements": []
									},
									"documentation": {
										"id": 2785,
										"nodeType": "StructuredDocumentation",
										"src": "38924:562:5",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "39501:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39530:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "39522:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39522:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39553:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "39545:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39545:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "39573:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "39566:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2790,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39566:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39511:86:5"
									},
									"returnParameters": {
										"id": 2795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "39629:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2793,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39629:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39628:8:5"
									},
									"scope": 2851,
									"src": "39492:147:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2829,
										"nodeType": "Block",
										"src": "39935:167:5",
										"statements": [
											{
												"assignments": [
													2810
												],
												"declarations": [
													{
														"constant": false,
														"id": 2810,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "39953:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 2829,
														"src": "39946:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 2809,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "39946:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2817,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2813,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2804,
																"src": "39972:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 2814,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "39995:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39972:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2812,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "39965:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 2811,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "39965:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 2816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39965:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39946:68:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2821,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2800,
																		"src": "40051:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2822,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2802,
																		"src": "40057:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2823,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2810,
																		"src": "40061:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 2820,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2797,
																	"src": "40040:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 2824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40040:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 2819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40032:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2818,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "40032:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 2825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40032:40:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 2826,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "40076:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40032:62:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2808,
												"id": 2828,
												"nodeType": "Return",
												"src": "40025:69:5"
											}
										]
									},
									"documentation": {
										"id": 2798,
										"nodeType": "StructuredDocumentation",
										"src": "39647:138:5",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 2830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "39800:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39833:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "39825:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39825:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39856:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "39848:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39848:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "39877:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "39869:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39869:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39814:89:5"
									},
									"returnParameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "39926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39925:9:5"
									},
									"scope": 2851,
									"src": "39791:311:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2839,
										"nodeType": "Block",
										"src": "40551:36:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2836,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "40569:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "40569:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2835,
												"id": 2838,
												"nodeType": "Return",
												"src": "40562:17:5"
											}
										]
									},
									"documentation": {
										"id": 2831,
										"nodeType": "StructuredDocumentation",
										"src": "40299:177:5",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 2840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "40491:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40508:2:5"
									},
									"returnParameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "40542:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40542:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40541:9:5"
									},
									"scope": 2851,
									"src": "40482:105:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2849,
										"nodeType": "Block",
										"src": "40773:1661:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "40793:1634:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41162:31:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "41181:4:5",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "41175:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "41175:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41188:4:5",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "41171:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "41171:22:5"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "41166:1:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41274:4:5",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "41280:1:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41267:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "41267:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41267:15:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "41341:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "41352:1:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41355:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "41348:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "41348:12:5"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "41341:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41432:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41437:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41425:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "41425:14:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41425:14:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41530:14:5",
															"value": {
																"name": "str",
																"nodeType": "YulIdentifier",
																"src": "41541:3:5"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "41534:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "41793:397:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "41812:18:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "41823:3:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "41828:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "41819:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41819:11:5"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "41812:3:5"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "41976:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "41985:2:5",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "41993:4:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "41999:2:5",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "41989:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "41989:13:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "41981:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "41981:22:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "41968:7:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41968:36:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "41968:36:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "42075:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "42087:4:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42093:2:5",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "42083:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42083:13:5"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "42075:4:5"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "42166:9:5",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "42168:5:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "42160:4:5"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "42153:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42153:12:5"
																		},
																		"nodeType": "YulIf",
																		"src": "42150:25:5"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "41788:1:5",
																"type": "",
																"value": "1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "41790:2:5",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "41766:21:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "41768:17:5",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "41780:5:5"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "41772:4:5",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "41762:428:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "42206:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "42224:3:5"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42229:3:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "42220:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "42220:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "42210:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "42328:21:5",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42339:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42344:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "42335:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "42335:14:5"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "42328:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42404:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "42409:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "42397:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "42397:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "42397:19:5"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2846,
														"isOffset": false,
														"isSlot": false,
														"src": "41341:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2846,
														"isOffset": false,
														"isSlot": false,
														"src": "41432:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2846,
														"isOffset": false,
														"isSlot": false,
														"src": "41541:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2846,
														"isOffset": false,
														"isSlot": false,
														"src": "41812:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2846,
														"isOffset": false,
														"isSlot": false,
														"src": "41823:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2846,
														"isOffset": false,
														"isSlot": false,
														"src": "41976:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2846,
														"isOffset": false,
														"isSlot": false,
														"src": "42229:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2846,
														"isOffset": false,
														"isSlot": false,
														"src": "42328:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2846,
														"isOffset": false,
														"isSlot": false,
														"src": "42339:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2846,
														"isOffset": false,
														"isSlot": false,
														"src": "42404:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2843,
														"isOffset": false,
														"isSlot": false,
														"src": "41780:5:5",
														"valueSize": 1
													}
												],
												"id": 2848,
												"nodeType": "InlineAssembly",
												"src": "40784:1643:5"
											}
										]
									},
									"documentation": {
										"id": 2841,
										"nodeType": "StructuredDocumentation",
										"src": "40595:88:5",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 2850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "40698:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40716:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "40708:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40707:15:5"
									},
									"returnParameters": {
										"id": 2847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2846,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "40768:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "40754:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40754:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40753:19:5"
									},
									"scope": 2851,
									"src": "40689:1745:5",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2852,
							"src": "930:41507:5",
							"usedErrors": [
								2857,
								2860,
								2863,
								2866,
								2869,
								2872,
								2875,
								2878,
								2881,
								2884,
								2887,
								2890,
								2893
							]
						}
					],
					"src": "88:42351:5"
				},
				"id": 5
			},
			"contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							3057
						]
					},
					"id": 3058,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2853,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2854,
								"nodeType": "StructuredDocumentation",
								"src": "115:39:6",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 3057,
							"linearizedBaseContracts": [
								3057
							],
							"name": "IERC721A",
							"nameLocation": "166:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2855,
										"nodeType": "StructuredDocumentation",
										"src": "182:78:6",
										"text": " The caller must own the token or be an approved operator."
									},
									"id": 2857,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "272:33:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:2:6"
									},
									"src": "266:42:6"
								},
								{
									"documentation": {
										"id": 2858,
										"nodeType": "StructuredDocumentation",
										"src": "316:46:6",
										"text": " The token does not exist."
									},
									"id": 2860,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "374:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:2:6"
									},
									"src": "368:41:6"
								},
								{
									"documentation": {
										"id": 2861,
										"nodeType": "StructuredDocumentation",
										"src": "417:67:6",
										"text": " Cannot query the balance for the zero address."
									},
									"id": 2863,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "496:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:2:6"
									},
									"src": "490:35:6"
								},
								{
									"documentation": {
										"id": 2864,
										"nodeType": "StructuredDocumentation",
										"src": "533:53:6",
										"text": " Cannot mint to the zero address."
									},
									"id": 2866,
									"name": "MintToZeroAddress",
									"nameLocation": "598:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:6"
									},
									"src": "592:26:6"
								},
								{
									"documentation": {
										"id": 2867,
										"nodeType": "StructuredDocumentation",
										"src": "626:74:6",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"id": 2869,
									"name": "MintZeroQuantity",
									"nameLocation": "712:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "728:2:6"
									},
									"src": "706:25:6"
								},
								{
									"documentation": {
										"id": 2870,
										"nodeType": "StructuredDocumentation",
										"src": "739:46:6",
										"text": " The token does not exist."
									},
									"id": 2872,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "797:29:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "826:2:6"
									},
									"src": "791:38:6"
								},
								{
									"documentation": {
										"id": 2873,
										"nodeType": "StructuredDocumentation",
										"src": "837:78:6",
										"text": " The caller must own the token or be an approved operator."
									},
									"id": 2875,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "927:33:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:2:6"
									},
									"src": "921:42:6"
								},
								{
									"documentation": {
										"id": 2876,
										"nodeType": "StructuredDocumentation",
										"src": "971:55:6",
										"text": " The token must be owned by `from`."
									},
									"id": 2878,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1038:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1064:2:6"
									},
									"src": "1032:35:6"
								},
								{
									"documentation": {
										"id": 2879,
										"nodeType": "StructuredDocumentation",
										"src": "1075:119:6",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"id": 2881,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1206:38:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1244:2:6"
									},
									"src": "1200:47:6"
								},
								{
									"documentation": {
										"id": 2882,
										"nodeType": "StructuredDocumentation",
										"src": "1255:57:6",
										"text": " Cannot transfer to the zero address."
									},
									"id": 2884,
									"name": "TransferToZeroAddress",
									"nameLocation": "1324:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1345:2:6"
									},
									"src": "1318:30:6"
								},
								{
									"documentation": {
										"id": 2885,
										"nodeType": "StructuredDocumentation",
										"src": "1356:46:6",
										"text": " The token does not exist."
									},
									"id": 2887,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1414:27:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1441:2:6"
									},
									"src": "1408:36:6"
								},
								{
									"documentation": {
										"id": 2888,
										"nodeType": "StructuredDocumentation",
										"src": "1452:81:6",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"id": 2890,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1545:31:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1576:2:6"
									},
									"src": "1539:40:6"
								},
								{
									"documentation": {
										"id": 2891,
										"nodeType": "StructuredDocumentation",
										"src": "1587:85:6",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"id": 2893,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1684:35:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1719:2:6"
									},
									"src": "1678:44:6"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 2902,
									"members": [
										{
											"constant": false,
											"id": 2895,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1994:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 2902,
											"src": "1986:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2894,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1986:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2897,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2101:14:6",
											"nodeType": "VariableDeclaration",
											"scope": 2902,
											"src": "2094:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2896,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2094:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2899,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2178:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 2902,
											"src": "2173:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2898,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2173:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2901,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2291:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 2902,
											"src": "2284:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2900,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2284:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1922:14:6",
									"nodeType": "StructDefinition",
									"scope": 3057,
									"src": "1915:393:6",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2903,
										"nodeType": "StructuredDocumentation",
										"src": "2505:196:6",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 2908,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2716:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:6"
									},
									"returnParameters": {
										"id": 2907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "2753:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:9:6"
									},
									"scope": 3057,
									"src": "2707:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2909,
										"nodeType": "StructuredDocumentation",
										"src": "2955:348:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3318:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3343:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "3336:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2910,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3336:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3335:20:6"
									},
									"returnParameters": {
										"id": 2915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "3379:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2913,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3379:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3378:6:6"
									},
									"scope": 3057,
									"src": "3309:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2917,
										"nodeType": "StructuredDocumentation",
										"src": "3578:90:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 2925,
									"name": "Transfer",
									"nameLocation": "3680:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2919,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3705:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2925,
												"src": "3689:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2921,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3727:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2925,
												"src": "3711:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3711:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2923,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3747:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2925,
												"src": "3731:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3688:67:6"
									},
									"src": "3674:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2926,
										"nodeType": "StructuredDocumentation",
										"src": "3764:96:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 2934,
									"name": "Approval",
									"nameLocation": "3872:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2928,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3897:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "3881:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3881:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2930,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3920:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "3904:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2932,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3946:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "3930:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3880:74:6"
									},
									"src": "3866:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2935,
										"nodeType": "StructuredDocumentation",
										"src": "3963:127:6",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"id": 2943,
									"name": "ApprovalForAll",
									"nameLocation": "4102:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2937,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4133:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2943,
												"src": "4117:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4117:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2939,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4156:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2943,
												"src": "4140:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4140:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2941,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4171:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2943,
												"src": "4166:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2940,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4166:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4116:64:6"
									},
									"src": "4096:85:6"
								},
								{
									"documentation": {
										"id": 2944,
										"nodeType": "StructuredDocumentation",
										"src": "4189:76:6",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 2951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4280:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4298:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "4290:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:15:6"
									},
									"returnParameters": {
										"id": 2950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2949,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4336:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "4328:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4328:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4327:17:6"
									},
									"scope": 3057,
									"src": "4271:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2952,
										"nodeType": "StructuredDocumentation",
										"src": "4353:137:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 2959,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4505:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2954,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4521:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "4513:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4512:17:6"
									},
									"returnParameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4561:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "4553:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4553:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4552:15:6"
									},
									"scope": 3057,
									"src": "4496:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2960,
										"nodeType": "StructuredDocumentation",
										"src": "4576:727:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 2971,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5318:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2962,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5353:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "5345:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5345:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5376:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "5368:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5368:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2966,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5397:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "5389:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5389:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5430:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "5415:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2967,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5415:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5334:107:6"
									},
									"returnParameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5458:0:6"
									},
									"scope": 3057,
									"src": "5309:150:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2972,
										"nodeType": "StructuredDocumentation",
										"src": "5467:82:6",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 2981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5564:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5599:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "5591:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5591:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5622:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "5614:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5643:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "5635:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5635:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5580:77:6"
									},
									"returnParameters": {
										"id": 2980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5674:0:6"
									},
									"scope": 3057,
									"src": "5555:120:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2982,
										"nodeType": "StructuredDocumentation",
										"src": "5683:527:6",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6225:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2984,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6256:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2991,
												"src": "6248:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6248:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2986,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6279:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2991,
												"src": "6271:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6271:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2988,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6300:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2991,
												"src": "6292:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6292:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6237:77:6"
									},
									"returnParameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6331:0:6"
									},
									"scope": 3057,
									"src": "6216:116:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2992,
										"nodeType": "StructuredDocumentation",
										"src": "6340:472:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6827:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6843:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "6835:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6835:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2996,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6855:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "6847:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6847:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6834:29:6"
									},
									"returnParameters": {
										"id": 2998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6880:0:6"
									},
									"scope": 3057,
									"src": "6818:63:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3000,
										"nodeType": "StructuredDocumentation",
										"src": "6889:326:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 3007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7230:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7256:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 3007,
												"src": "7248:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7248:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3004,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7271:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 3007,
												"src": "7266:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3003,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7266:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7247:34:6"
									},
									"returnParameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7290:0:6"
									},
									"scope": 3057,
									"src": "7221:70:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3008,
										"nodeType": "StructuredDocumentation",
										"src": "7299:145:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 3015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7459:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3010,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7479:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 3015,
												"src": "7471:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7470:17:6"
									},
									"returnParameters": {
										"id": 3014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3013,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7519:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 3015,
												"src": "7511:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7510:18:6"
									},
									"scope": 3057,
									"src": "7450:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3016,
										"nodeType": "StructuredDocumentation",
										"src": "7537:143:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 3025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7695:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3018,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7720:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "7712:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7735:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "7727:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7711:33:6"
									},
									"returnParameters": {
										"id": 3024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "7768:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3022,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7768:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7767:6:6"
									},
									"scope": 3057,
									"src": "7686:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3026,
										"nodeType": "StructuredDocumentation",
										"src": "7971:60:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 3031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8046:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8050:2:6"
									},
									"returnParameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "8076:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3028,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8076:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8075:15:6"
									},
									"scope": 3057,
									"src": "8037:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3032,
										"nodeType": "StructuredDocumentation",
										"src": "8099:62:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 3037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8176:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8182:2:6"
									},
									"returnParameters": {
										"id": 3036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3037,
												"src": "8208:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3034,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8208:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8207:15:6"
									},
									"scope": 3057,
									"src": "8167:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3038,
										"nodeType": "StructuredDocumentation",
										"src": "8231:92:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 3045,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8338:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3040,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8355:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 3045,
												"src": "8347:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8347:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8346:17:6"
									},
									"returnParameters": {
										"id": 3044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3045,
												"src": "8387:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3042,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8387:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8386:15:6"
									},
									"scope": 3057,
									"src": "8329:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3046,
										"nodeType": "StructuredDocumentation",
										"src": "8595:273:6",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"id": 3056,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8880:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3048,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8916:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "8900:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8900:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3050,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8937:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "8929:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8929:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3052,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8964:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "8948:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8948:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3054,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8986:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "8970:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8970:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8899:90:6"
									},
									"src": "8874:116:6"
								}
							],
							"scope": 3058,
							"src": "156:8837:6",
							"usedErrors": [
								2857,
								2860,
								2863,
								2866,
								2869,
								2872,
								2875,
								2878,
								2881,
								2884,
								2887,
								2890,
								2893
							]
						}
					],
					"src": "88:8907:6"
				},
				"id": 6
			},
			"contracts/fourtwo.sol": {
				"ast": {
					"absolutePath": "contracts/fourtwo.sol",
					"exportedSymbols": {
						"Context": [
							1228
						],
						"ERC721A": [
							2851
						],
						"ERC721A__IERC721Receiver": [
							1246
						],
						"IERC721A": [
							3057
						],
						"MathUpgradeable": [
							1039
						],
						"Ownable": [
							1152
						],
						"ReentrancyGuard": [
							1206
						],
						"StringsUpgradeable": [
							174
						],
						"fourtwo": [
							3465
						]
					},
					"id": 3466,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3059,
							"literals": [
								"solidity",
								">",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:30:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3060,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3466,
							"sourceUnit": 1153,
							"src": "67:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 3061,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3466,
							"sourceUnit": 1207,
							"src": "121:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
							"id": 3062,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3466,
							"sourceUnit": 175,
							"src": "185:74:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ERC721A.sol",
							"file": "./ERC721A.sol",
							"id": 3063,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3466,
							"sourceUnit": 2852,
							"src": "261:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3064,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1152,
										"src": "310:7:7"
									},
									"id": 3065,
									"nodeType": "InheritanceSpecifier",
									"src": "310:7:7"
								},
								{
									"baseName": {
										"id": 3066,
										"name": "ERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2851,
										"src": "319:7:7"
									},
									"id": 3067,
									"nodeType": "InheritanceSpecifier",
									"src": "319:7:7"
								},
								{
									"baseName": {
										"id": 3068,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1206,
										"src": "328:15:7"
									},
									"id": 3069,
									"nodeType": "InheritanceSpecifier",
									"src": "328:15:7"
								}
							],
							"canonicalName": "fourtwo",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3465,
							"linearizedBaseContracts": [
								3465,
								1206,
								2851,
								3057,
								1152,
								1228
							],
							"name": "fourtwo",
							"nameLocation": "299:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 3072,
									"libraryName": {
										"id": 3070,
										"name": "StringsUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 174,
										"src": "357:18:7"
									},
									"nodeType": "UsingForDirective",
									"src": "351:38:7",
									"typeName": {
										"id": 3071,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "381:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 3074,
									"mutability": "mutable",
									"name": "baseURI",
									"nameLocation": "406:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 3465,
									"src": "399:14:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3073,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "399:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "c6682862",
									"id": 3077,
									"mutability": "mutable",
									"name": "baseExtension",
									"nameLocation": "432:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 3465,
									"src": "418:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3075,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "418:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2e6a736f6e",
										"id": 3076,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "448:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
											"typeString": "literal_string \".json\""
										},
										"value": ".json"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "13faede6",
									"id": 3080,
									"mutability": "mutable",
									"name": "cost",
									"nameLocation": "477:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 3465,
									"src": "462:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3078,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "462:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3030",
										"id": 3079,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "484:10:7",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0.00"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 3083,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "514:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 3465,
									"src": "499:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3081,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "499:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343230",
										"id": 3082,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "526:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_420_by_1",
											"typeString": "int_const 420"
										},
										"value": "420"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b3807b1d",
									"id": 3086,
									"mutability": "mutable",
									"name": "AllowlistLimit",
									"nameLocation": "549:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 3465,
									"src": "534:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3084,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "534:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 3085,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "566:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 3089,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "586:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 3465,
									"src": "574:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 3087,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "574:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 3088,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "595:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "674c02aa",
									"id": 3092,
									"mutability": "mutable",
									"name": "onlyAllowlisted",
									"nameLocation": "617:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 3465,
									"src": "605:35:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 3090,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "605:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 3091,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "635:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a7cd52cb",
									"id": 3096,
									"mutability": "mutable",
									"name": "allowlist",
									"nameLocation": "677:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 3465,
									"src": "645:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3095,
										"keyType": {
											"id": 3093,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "653:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "645:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 3094,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "664:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18cae269",
									"id": 3100,
									"mutability": "mutable",
									"name": "addressMintedBalance",
									"nameLocation": "726:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 3465,
									"src": "691:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3099,
										"keyType": {
											"id": 3097,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "699:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "691:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3098,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "710:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3113,
										"nodeType": "Block",
										"src": "828:37:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3110,
															"name": "_initBaseURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3102,
															"src": "846:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3109,
														"name": "setBaseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3288,
														"src": "835:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 3111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "835:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3112,
												"nodeType": "ExpressionStatement",
												"src": "835:24:7"
											}
										]
									},
									"id": 3114,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "343432323030",
													"id": 3105,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "811:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d12afde0867472cf27fd4ae4788b24556727f835cfb8219a2b5f45daac20d97a",
														"typeString": "literal_string \"442200\""
													},
													"value": "442200"
												},
												{
													"hexValue": "494d49",
													"id": 3106,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "821:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0b9b03ae8b6143aa8db42338c171286eb1052bd16b00913c03ecd2b13cbf0806",
														"typeString": "literal_string \"IMI\""
													},
													"value": "IMI"
												}
											],
											"id": 3107,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3104,
												"name": "ERC721A",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2851,
												"src": "803:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "803:24:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "_initBaseURI",
												"nameLocation": "785:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 3114,
												"src": "771:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3101,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "771:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:38:7"
									},
									"returnParameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "828:0:7"
									},
									"scope": 3465,
									"src": "753:112:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1633
									],
									"body": {
										"id": 3122,
										"nodeType": "Block",
										"src": "961:27:7",
										"statements": [
											{
												"expression": {
													"id": 3120,
													"name": "baseURI",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3074,
													"src": "975:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 3119,
												"id": 3121,
												"nodeType": "Return",
												"src": "968:14:7"
											}
										]
									},
									"id": 3123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "895:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3116,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "928:8:7"
									},
									"parameters": {
										"id": 3115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "903:2:7"
									},
									"returnParameters": {
										"id": 3119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "946:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "946:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:15:7"
									},
									"scope": 3465,
									"src": "886:102:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3221,
										"nodeType": "Block",
										"src": "1059:985:7",
										"statements": [
											{
												"assignments": [
													3129
												],
												"declarations": [
													{
														"constant": false,
														"id": 3129,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "1074:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 3221,
														"src": "1066:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3128,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1066:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3132,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3130,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "1083:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 3131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1083:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1066:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1134:7:7",
															"subExpression": {
																"id": 3134,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3089,
																"src": "1135:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "574f414820686f6c6420757020746865206d696e74206973206e6f7420796574206c6976652c2061206c6974746c6520746f6f206561726c792074686572652e2e2e206f72206c6174653f205472616e736d697373696f6e20456e64696e67",
															"id": 3136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1143:97:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_59d04762fffc15004f9c80d7b6292c6e0fd9d298a8f76aac81112340e7ec504a",
																"typeString": "literal_string \"WOAH hold up the mint is not yet live, a little too early there... or late? Transmission Ending\""
															},
															"value": "WOAH hold up the mint is not yet live, a little too early there... or late? Transmission Ending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_59d04762fffc15004f9c80d7b6292c6e0fd9d298a8f76aac81112340e7ec504a",
																"typeString": "literal_string \"WOAH hold up the mint is not yet live, a little too early there... or late? Transmission Ending\""
															}
														],
														"id": 3133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1126:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1126:115:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3138,
												"nodeType": "ExpressionStatement",
												"src": "1126:115:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3140,
																"name": "_mintAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3125,
																"src": "1256:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1270:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1256:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d757374206d696e74206174206c656173742031206e66742c2030206973206e6f7420616c6c6f7765642e205472616e736d697373696f6e20456e64696e67",
															"id": 3143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48fda742698573100e179ae1b13bb17b7308f3fb873a40e607485d8ba281db03",
																"typeString": "literal_string \"must mint at least 1 nft, 0 is not allowed. Transmission Ending\""
															},
															"value": "must mint at least 1 nft, 0 is not allowed. Transmission Ending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48fda742698573100e179ae1b13bb17b7308f3fb873a40e607485d8ba281db03",
																"typeString": "literal_string \"must mint at least 1 nft, 0 is not allowed. Transmission Ending\""
															}
														],
														"id": 3139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1248:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:91:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3145,
												"nodeType": "ExpressionStatement",
												"src": "1248:91:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3147,
																	"name": "supply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3129,
																	"src": "1354:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 3148,
																	"name": "_mintAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3125,
																	"src": "1363:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1354:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 3150,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3083,
																"src": "1378:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1354:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c6f6f6b73206c696b652077652061726520706f70756c6172206d617820737570706c7920686173206265656e2072656163686564",
															"id": 3152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1389:55:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97431681bf783971e6935af241e6bf6a0d8509ed0533483cd521a055744277a0",
																"typeString": "literal_string \"looks like we are popular max supply has been reached\""
															},
															"value": "looks like we are popular max supply has been reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97431681bf783971e6935af241e6bf6a0d8509ed0533483cd521a055744277a0",
																"typeString": "literal_string \"looks like we are popular max supply has been reached\""
															}
														],
														"id": 3146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1346:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1346:99:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3154,
												"nodeType": "ExpressionStatement",
												"src": "1346:99:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3155,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1464:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1464:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3157,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "1478:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 3158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1478:7:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1464:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3207,
												"nodeType": "IfStatement",
												"src": "1460:482:7",
												"trueBody": {
													"id": 3206,
													"nodeType": "Block",
													"src": "1487:455:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3161,
																			"name": "_mintAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3125,
																			"src": "1538:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 3162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1553:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1538:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "6f6e6c79203120617420612074696d65203a2920",
																		"id": 3164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1556:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_db7e8433bc66fe3dc25da0449b83dec916181efd3b63d1a0329faf71b04911a0",
																			"typeString": "literal_string \"only 1 at a time :) \""
																		},
																		"value": "only 1 at a time :) "
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_db7e8433bc66fe3dc25da0449b83dec916181efd3b63d1a0329faf71b04911a0",
																			"typeString": "literal_string \"only 1 at a time :) \""
																		}
																	],
																	"id": 3160,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1530:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1530:49:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3166,
															"nodeType": "ExpressionStatement",
															"src": "1530:49:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3167,
																	"name": "onlyAllowlisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3092,
																	"src": "1593:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 3168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1612:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1593:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3195,
															"nodeType": "IfStatement",
															"src": "1590:272:7",
															"trueBody": {
																"id": 3194,
																"nodeType": "Block",
																"src": "1618:244:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"id": 3172,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "1655:3:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 3173,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "1655:10:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 3171,
																						"name": "isAllowlisted",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3234,
																						"src": "1641:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 3174,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1641:25:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4e6f7420416c6c6f776c6973746564",
																					"id": 3175,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1668:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_bcbf221e1d785dfc11083f52adc69389d8ebd7c45bac276ecfbd15edf753070b",
																						"typeString": "literal_string \"Not Allowlisted\""
																					},
																					"value": "Not Allowlisted"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_bcbf221e1d785dfc11083f52adc69389d8ebd7c45bac276ecfbd15edf753070b",
																						"typeString": "literal_string \"Not Allowlisted\""
																					}
																				],
																				"id": 3170,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "1633:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 3176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1633:53:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3177,
																		"nodeType": "ExpressionStatement",
																		"src": "1633:53:7"
																	},
																	{
																		"assignments": [
																			3179
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3179,
																				"mutability": "mutable",
																				"name": "ownerMintedCount",
																				"nameLocation": "1709:16:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 3194,
																				"src": "1701:24:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 3178,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1701:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3184,
																		"initialValue": {
																			"baseExpression": {
																				"id": 3180,
																				"name": "addressMintedBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3100,
																				"src": "1728:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 3183,
																			"indexExpression": {
																				"expression": {
																					"id": 3181,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1749:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 3182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1749:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1728:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1701:59:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3190,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3188,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3186,
																							"name": "ownerMintedCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3179,
																							"src": "1783:16:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"id": 3187,
																							"name": "_mintAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3125,
																							"src": "1802:11:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1783:30:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 3189,
																						"name": "AllowlistLimit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3086,
																						"src": "1817:14:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1783:48:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416c7265616479206d696e746564",
																					"id": 3191,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1833:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59",
																						"typeString": "literal_string \"Already minted\""
																					},
																					"value": "Already minted"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59",
																						"typeString": "literal_string \"Already minted\""
																					}
																				],
																				"id": 3185,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "1775:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 3192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1775:75:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3193,
																		"nodeType": "ExpressionStatement",
																		"src": "1775:75:7"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 3197,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1880:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "1880:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3199,
																				"name": "cost",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3080,
																				"src": "1893:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3200,
																				"name": "_mintAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3125,
																				"src": "1900:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1893:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1880:31:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "436f737420646f65736e2774206d61746368",
																		"id": 3203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1913:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2a8b16c5698f793fadcf69c1a4b70bc053d8668181e11d673c774abfb93d1253",
																			"typeString": "literal_string \"Cost doesn't match\""
																		},
																		"value": "Cost doesn't match"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2a8b16c5698f793fadcf69c1a4b70bc053d8668181e11d673c774abfb93d1253",
																			"typeString": "literal_string \"Cost doesn't match\""
																		}
																	],
																	"id": 3196,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1872:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1872:62:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3205,
															"nodeType": "ExpressionStatement",
															"src": "1872:62:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3209,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1960:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1960:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3211,
															"name": "_mintAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3125,
															"src": "1972:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3208,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2561,
															2576
														],
														"referencedDeclaration": 2576,
														"src": "1950:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1950:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3213,
												"nodeType": "ExpressionStatement",
												"src": "1950:34:7"
											},
											{
												"expression": {
													"id": 3219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3214,
															"name": "addressMintedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3100,
															"src": "1991:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3217,
														"indexExpression": {
															"expression": {
																"id": 3215,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2012:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2012:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1991:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 3218,
														"name": "_mintAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3125,
														"src": "2027:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1991:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3220,
												"nodeType": "ExpressionStatement",
												"src": "1991:47:7"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 3222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1018:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "_mintAmount",
												"nameLocation": "1031:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 3222,
												"src": "1023:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1023:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1022:21:7"
									},
									"returnParameters": {
										"id": 3127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1059:0:7"
									},
									"scope": 3465,
									"src": "1009:1035:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3233,
										"nodeType": "Block",
										"src": "2119:36:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3229,
														"name": "allowlist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3096,
														"src": "2133:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3231,
													"indexExpression": {
														"id": 3230,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3224,
														"src": "2143:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2133:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3228,
												"id": 3232,
												"nodeType": "Return",
												"src": "2126:23:7"
											}
										]
									},
									"functionSelector": "05a3b809",
									"id": 3234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAllowlisted",
									"nameLocation": "2063:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3224,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2085:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "2077:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2076:15:7"
									},
									"returnParameters": {
										"id": 3228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "2113:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2113:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:6:7"
									},
									"scope": 3465,
									"src": "2054:101:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1624
									],
									"body": {
										"id": 3275,
										"nodeType": "Block",
										"src": "2277:309:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3244,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3236,
																	"src": "2308:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3243,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1975,
																"src": "2300:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 3245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2300:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 3246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2325:49:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 3242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2284:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2284:97:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3248,
												"nodeType": "ExpressionStatement",
												"src": "2284:97:7"
											},
											{
												"assignments": [
													3250
												],
												"declarations": [
													{
														"constant": false,
														"id": 3250,
														"mutability": "mutable",
														"name": "currentBaseURI",
														"nameLocation": "2406:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 3275,
														"src": "2392:28:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 3249,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2392:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3253,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3251,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3123
														],
														"referencedDeclaration": 3123,
														"src": "2423:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 3252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2423:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2392:41:7"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 3256,
																		"name": "currentBaseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3250,
																		"src": "2453:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2447:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 3254,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2447:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 3257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2447:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 3258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2447:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2478:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2447:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 3272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2578:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 3273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2447:133:7",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3265,
																		"name": "currentBaseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3250,
																		"src": "2515:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 3266,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3236,
																				"src": "2531:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 3267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 57,
																			"src": "2531:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 3268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2531:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 3269,
																		"name": "baseExtension",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3077,
																		"src": "2551:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	],
																	"expression": {
																		"id": 3263,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "2498:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 3264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "2498:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 3270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2498:67:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 3262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2491:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 3261,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "2491:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 3271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2491:75:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3241,
												"id": 3274,
												"nodeType": "Return",
												"src": "2440:140:7"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 3276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2170:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3238,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2236:8:7"
									},
									"parameters": {
										"id": 3237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3236,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2187:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 3276,
												"src": "2179:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2178:17:7"
									},
									"returnParameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3276,
												"src": "2259:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3239,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2259:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2258:15:7"
									},
									"scope": 3465,
									"src": "2161:425:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3287,
										"nodeType": "Block",
										"src": "2660:34:7",
										"statements": [
											{
												"expression": {
													"id": 3285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3283,
														"name": "baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3074,
														"src": "2667:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3284,
														"name": "_newBaseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3278,
														"src": "2677:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2667:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3286,
												"nodeType": "ExpressionStatement",
												"src": "2667:21:7"
											}
										]
									},
									"functionSelector": "55f804b3",
									"id": 3288,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3281,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3280,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1071,
												"src": "2650:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2650:9:7"
										}
									],
									"name": "setBaseURI",
									"nameLocation": "2605:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3278,
												"mutability": "mutable",
												"name": "_newBaseURI",
												"nameLocation": "2630:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 3288,
												"src": "2616:25:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3277,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2616:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:27:7"
									},
									"returnParameters": {
										"id": 3282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2660:0:7"
									},
									"scope": 3465,
									"src": "2596:98:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3299,
										"nodeType": "Block",
										"src": "2776:46:7",
										"statements": [
											{
												"expression": {
													"id": 3297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3295,
														"name": "baseExtension",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3077,
														"src": "2783:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3296,
														"name": "_newBaseExtension",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3290,
														"src": "2799:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2783:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3298,
												"nodeType": "ExpressionStatement",
												"src": "2783:33:7"
											}
										]
									},
									"functionSelector": "da3ef23f",
									"id": 3300,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3293,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3292,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1071,
												"src": "2766:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2766:9:7"
										}
									],
									"name": "setBaseExtension",
									"nameLocation": "2709:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3290,
												"mutability": "mutable",
												"name": "_newBaseExtension",
												"nameLocation": "2740:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "2726:31:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2726:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2725:33:7"
									},
									"returnParameters": {
										"id": 3294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2776:0:7"
									},
									"scope": 3465,
									"src": "2700:122:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3311,
										"nodeType": "Block",
										"src": "2875:28:7",
										"statements": [
											{
												"expression": {
													"id": 3309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3307,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3089,
														"src": "2882:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3308,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3302,
														"src": "2891:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2882:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3310,
												"nodeType": "ExpressionStatement",
												"src": "2882:15:7"
											}
										]
									},
									"functionSelector": "02329a29",
									"id": 3312,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3305,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3304,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1071,
												"src": "2865:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2865:9:7"
										}
									],
									"name": "pause",
									"nameLocation": "2837:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3302,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "2848:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 3312,
												"src": "2843:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3301,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2843:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2842:13:7"
									},
									"returnParameters": {
										"id": 3306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2875:0:7"
									},
									"scope": 3465,
									"src": "2828:75:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3323,
										"nodeType": "Block",
										"src": "2969:37:7",
										"statements": [
											{
												"expression": {
													"id": 3321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3319,
														"name": "onlyAllowlisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3092,
														"src": "2976:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3320,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3314,
														"src": "2994:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2976:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3322,
												"nodeType": "ExpressionStatement",
												"src": "2976:24:7"
											}
										]
									},
									"functionSelector": "17dc10c4",
									"id": 3324,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3316,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1071,
												"src": "2959:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2959:9:7"
										}
									],
									"name": "setOnlyAllowlisted",
									"nameLocation": "2920:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3314,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "2944:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 3324,
												"src": "2939:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2939:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2938:13:7"
									},
									"returnParameters": {
										"id": 3318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2969:0:7"
									},
									"scope": 3465,
									"src": "2911:95:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3353,
										"nodeType": "Block",
										"src": "3085:106:7",
										"statements": [
											{
												"body": {
													"id": 3351,
													"nodeType": "Block",
													"src": "3139:47:7",
													"statements": [
														{
															"expression": {
																"id": 3349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3343,
																		"name": "allowlist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3096,
																		"src": "3148:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3347,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 3344,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3327,
																			"src": "3158:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 3346,
																		"indexExpression": {
																			"id": 3345,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3333,
																			"src": "3168:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3158:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3148:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 3348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3174:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3148:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3350,
															"nodeType": "ExpressionStatement",
															"src": "3148:30:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3336,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3333,
														"src": "3112:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3337,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3327,
															"src": "3116:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 3338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3116:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3112:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3352,
												"initializationExpression": {
													"assignments": [
														3333
													],
													"declarations": [
														{
															"constant": false,
															"id": 3333,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3105:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 3352,
															"src": "3097:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3332,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3097:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3335,
													"initialValue": {
														"hexValue": "30",
														"id": 3334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3109:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3097:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 3341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3134:3:7",
														"subExpression": {
															"id": 3340,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3333,
															"src": "3134:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3342,
													"nodeType": "ExpressionStatement",
													"src": "3134:3:7"
												},
												"nodeType": "ForStatement",
												"src": "3092:94:7"
											}
										]
									},
									"functionSelector": "5b9e3ccf",
									"id": 3354,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3330,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3329,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1071,
												"src": "3075:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3075:9:7"
										}
									],
									"name": "allowlistUsers",
									"nameLocation": "3021:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3327,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "3055:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 3354,
												"src": "3036:28:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3325,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3036:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3326,
													"nodeType": "ArrayTypeName",
													"src": "3036:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3035:30:7"
									},
									"returnParameters": {
										"id": 3331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3085:0:7"
									},
									"scope": 3465,
									"src": "3012:179:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3383,
										"nodeType": "Block",
										"src": "3280:107:7",
										"statements": [
											{
												"body": {
													"id": 3381,
													"nodeType": "Block",
													"src": "3334:48:7",
													"statements": [
														{
															"expression": {
																"id": 3379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3373,
																		"name": "allowlist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3096,
																		"src": "3343:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3377,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 3374,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3357,
																			"src": "3353:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 3376,
																		"indexExpression": {
																			"id": 3375,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3363,
																			"src": "3363:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3353:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3343:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 3378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3369:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3343:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3380,
															"nodeType": "ExpressionStatement",
															"src": "3343:31:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3366,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3363,
														"src": "3307:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3367,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3357,
															"src": "3311:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 3368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3311:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3382,
												"initializationExpression": {
													"assignments": [
														3363
													],
													"declarations": [
														{
															"constant": false,
															"id": 3363,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3300:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 3382,
															"src": "3292:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3362,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3292:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3365,
													"initialValue": {
														"hexValue": "30",
														"id": 3364,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3304:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3292:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 3371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3329:3:7",
														"subExpression": {
															"id": 3370,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3363,
															"src": "3329:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3372,
													"nodeType": "ExpressionStatement",
													"src": "3329:3:7"
												},
												"nodeType": "ForStatement",
												"src": "3287:95:7"
											}
										]
									},
									"functionSelector": "142b0fbe",
									"id": 3384,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3360,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3359,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1071,
												"src": "3270:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3270:9:7"
										}
									],
									"name": "removeUsersFromAllowlist",
									"nameLocation": "3206:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3357,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "3250:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 3384,
												"src": "3231:28:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3355,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3231:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3356,
													"nodeType": "ArrayTypeName",
													"src": "3231:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3230:30:7"
									},
									"returnParameters": {
										"id": 3361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3280:0:7"
									},
									"scope": 3465,
									"src": "3197:190:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3444,
										"nodeType": "Block",
										"src": "3479:375:7",
										"statements": [
											{
												"assignments": [
													3393
												],
												"declarations": [
													{
														"constant": false,
														"id": 3393,
														"mutability": "mutable",
														"name": "supplyCurrent",
														"nameLocation": "3498:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 3444,
														"src": "3490:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3392,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3490:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3396,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3394,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "3514:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 3395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3514:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3490:37:7"
											},
											{
												"assignments": [
													3401
												],
												"declarations": [
													{
														"constant": false,
														"id": 3401,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "3555:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 3444,
														"src": "3538:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3399,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3538:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3400,
															"nodeType": "ArrayTypeName",
															"src": "3538:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3409,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3406,
																	"name": "tokenOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3386,
																	"src": "3588:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3405,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1448,
																"src": "3578:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 3407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3578:21:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3564:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3402,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3568:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3403,
															"nodeType": "ArrayTypeName",
															"src": "3568:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 3408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3564:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3538:62:7"
											},
											{
												"assignments": [
													3411
												],
												"declarations": [
													{
														"constant": false,
														"id": 3411,
														"mutability": "mutable",
														"name": "counter",
														"nameLocation": "3619:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 3444,
														"src": "3611:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3410,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3611:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3413,
												"initialValue": {
													"hexValue": "30",
													"id": 3412,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3629:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3611:19:7"
											},
											{
												"body": {
													"id": 3440,
													"nodeType": "Block",
													"src": "3685:138:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3425,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3415,
																			"src": "3712:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3424,
																		"name": "ownerOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "3704:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 3426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3704:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3427,
																	"name": "tokenOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3386,
																	"src": "3718:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3704:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3439,
															"nodeType": "IfStatement",
															"src": "3700:112:7",
															"trueBody": {
																"id": 3438,
																"nodeType": "Block",
																"src": "3730:82:7",
																"statements": [
																	{
																		"expression": {
																			"id": 3433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3429,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3401,
																					"src": "3749:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 3431,
																				"indexExpression": {
																					"id": 3430,
																					"name": "counter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3411,
																					"src": "3756:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3749:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3432,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3415,
																				"src": "3767:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3749:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3434,
																		"nodeType": "ExpressionStatement",
																		"src": "3749:19:7"
																	},
																	{
																		"expression": {
																			"id": 3436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "3787:9:7",
																			"subExpression": {
																				"id": 3435,
																				"name": "counter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3411,
																				"src": "3787:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3437,
																		"nodeType": "ExpressionStatement",
																		"src": "3787:9:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3418,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3415,
														"src": "3661:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3419,
														"name": "supplyCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3393,
														"src": "3665:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3661:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3441,
												"initializationExpression": {
													"assignments": [
														3415
													],
													"declarations": [
														{
															"constant": false,
															"id": 3415,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3654:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 3441,
															"src": "3646:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3414,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3646:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3417,
													"initialValue": {
														"hexValue": "30",
														"id": 3416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3658:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3646:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 3422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3680:3:7",
														"subExpression": {
															"id": 3421,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3415,
															"src": "3680:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3423,
													"nodeType": "ExpressionStatement",
													"src": "3680:3:7"
												},
												"nodeType": "ForStatement",
												"src": "3641:182:7"
											},
											{
												"expression": {
													"id": 3442,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3401,
													"src": "3840:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 3391,
												"id": 3443,
												"nodeType": "Return",
												"src": "3833:13:7"
											}
										]
									},
									"functionSelector": "ca8a7d5e",
									"id": 3445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOfTokenIds",
									"nameLocation": "3402:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3386,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "3426:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3445,
												"src": "3418:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3418:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3417:20:7"
									},
									"returnParameters": {
										"id": 3391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3445,
												"src": "3461:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3388,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3461:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3389,
													"nodeType": "ArrayTypeName",
													"src": "3461:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3460:18:7"
									},
									"scope": 3465,
									"src": "3393:461:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3463,
										"nodeType": "Block",
										"src": "3906:61:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3458,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3947:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_fourtwo_$3465",
																			"typeString": "contract fourtwo"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_fourtwo_$3465",
																			"typeString": "contract fourtwo"
																		}
																	],
																	"id": 3457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3939:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3456,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3939:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 3459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3939:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3939:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3452,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "3921:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3921:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3913:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3450,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3913:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3913:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3913:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3913:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3462,
												"nodeType": "ExpressionStatement",
												"src": "3913:48:7"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 3464,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3448,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3447,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1071,
												"src": "3896:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3896:9:7"
										}
									],
									"name": "withdraw",
									"nameLocation": "3870:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3878:2:7"
									},
									"returnParameters": {
										"id": 3449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3906:0:7"
									},
									"scope": 3465,
									"src": "3861:106:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3466,
							"src": "290:3684:7",
							"usedErrors": [
								2857,
								2860,
								2863,
								2866,
								2869,
								2872,
								2875,
								2878,
								2881,
								2884,
								2887,
								2890,
								2893
							]
						}
					],
					"src": "33:3941:7"
				},
				"id": 7
			}
		}
	}
}