{
	"id": "60e8c88f4b5921777253a10ebcebefe3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v4.2.2\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport './IERC721A.sol';\r\nimport '@openzeppelin/contracts/utils/Address.sol';\r\nimport '@openzeppelin/contracts/utils/Context.sol';\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\n\r\n/**\r\n * @dev Interface of ERC721 token receiver.\r\n */\r\ninterface ERC721A__IERC721Receiver {\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\n/**\r\n * @title ERC721A\r\n *\r\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\r\n * Non-Fungible Token Standard, including the Metadata extension.\r\n * Optimized for lower gas during batch mints.\r\n *\r\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\r\n * starting from `_startTokenId()`.\r\n *\r\n * Assumptions:\r\n *\r\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\r\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\r\n */\r\ncontract ERC721A is IERC721A {\r\n    // Reference type for token approval.\r\n    struct TokenApprovalRef {\r\n        address value;\r\n    }\r\n\r\n    // =============================================================\r\n    //                           CONSTANTS\r\n    // =============================================================\r\n\r\n    // Mask of an entry in packed address data.\r\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\r\n\r\n    // The bit position of `numberMinted` in packed address data.\r\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\r\n\r\n    // The bit position of `numberBurned` in packed address data.\r\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\r\n\r\n    // The bit position of `aux` in packed address data.\r\n    uint256 private constant _BITPOS_AUX = 192;\r\n\r\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\r\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\r\n\r\n    // The bit position of `startTimestamp` in packed ownership.\r\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\r\n\r\n    // The bit mask of the `burned` bit in packed ownership.\r\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\r\n\r\n    // The bit position of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\r\n\r\n    // The bit mask of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\r\n\r\n    // The bit position of `extraData` in packed ownership.\r\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\r\n\r\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\r\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\r\n\r\n    // The mask of the lower 160 bits for addresses.\r\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\r\n\r\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\r\n    // This limit is to prevent overflows on the address data entries.\r\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\r\n    // is required to cause an overflow, which is unrealistic.\r\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\r\n\r\n    // The `Transfer` event signature is given by:\r\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\r\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\r\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\r\n\r\n    // =============================================================\r\n    //                            STORAGE\r\n    // =============================================================\r\n\r\n    // The next token ID to be minted.\r\n    uint256 private _currentIndex;\r\n\r\n    // The number of tokens burned.\r\n    uint256 private _burnCounter;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to ownership details\r\n    // An empty struct value does not necessarily mean the token is unowned.\r\n    // See {_packedOwnershipOf} implementation for details.\r\n    //\r\n    // Bits Layout:\r\n    // - [0..159]   `addr`\r\n    // - [160..223] `startTimestamp`\r\n    // - [224]      `burned`\r\n    // - [225]      `nextInitialized`\r\n    // - [232..255] `extraData`\r\n    mapping(uint256 => uint256) private _packedOwnerships;\r\n\r\n    // Mapping owner address to address data.\r\n    //\r\n    // Bits Layout:\r\n    // - [0..63]    `balance`\r\n    // - [64..127]  `numberMinted`\r\n    // - [128..191] `numberBurned`\r\n    // - [192..255] `aux`\r\n    mapping(address => uint256) private _packedAddressData;\r\n\r\n    // Mapping from token ID to approved address.\r\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    // =============================================================\r\n    //                          CONSTRUCTOR\r\n    // =============================================================\r\n\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _currentIndex = _startTokenId();\r\n    }\r\n\r\n    // =============================================================\r\n    //                   TOKEN COUNTING OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the starting token ID.\r\n     * To change the starting token ID, please override this function.\r\n     */\r\n    function _startTokenId() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the next token ID to be minted.\r\n     */\r\n    function _nextTokenId() internal view virtual returns (uint256) {\r\n        return _currentIndex;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens in existence.\r\n     * Burned tokens will reduce the count.\r\n     * To get the total number of tokens minted, please see {_totalMinted}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        // Counter underflow is impossible as _burnCounter cannot be incremented\r\n        // more than `_currentIndex - _startTokenId()` times.\r\n        unchecked {\r\n            return _currentIndex - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens minted in the contract.\r\n     */\r\n    function _totalMinted() internal view virtual returns (uint256) {\r\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\r\n        // and it is initialized to `_startTokenId()`.\r\n        unchecked {\r\n            return _currentIndex - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens burned.\r\n     */\r\n    function _totalBurned() internal view virtual returns (uint256) {\r\n        return _burnCounter;\r\n    }\r\n\r\n    // =============================================================\r\n    //                    ADDRESS DATA OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in `owner`'s account.\r\n     */\r\n    function balanceOf(address owner) public view virtual override returns (uint256) {\r\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\r\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens minted by `owner`.\r\n     */\r\n    function _numberMinted(address owner) internal view returns (uint256) {\r\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens burned by or on behalf of `owner`.\r\n     */\r\n    function _numberBurned(address owner) internal view returns (uint256) {\r\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     */\r\n    function _getAux(address owner) internal view returns (uint64) {\r\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\r\n    }\r\n\r\n    /**\r\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     * If there are multiple variables, please pack them into a uint64.\r\n     */\r\n    function _setAux(address owner, uint64 aux) internal virtual {\r\n        uint256 packed = _packedAddressData[owner];\r\n        uint256 auxCasted;\r\n        // Cast `aux` with assembly to avoid redundant masking.\r\n        assembly {\r\n            auxCasted := aux\r\n        }\r\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\r\n        _packedAddressData[owner] = packed;\r\n    }\r\n\r\n    // =============================================================\r\n    //                            IERC165\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        // The interface IDs are constants representing the first 4 bytes\r\n        // of the XOR of all function selectors in the interface.\r\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\r\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\r\n        return\r\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\r\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\r\n    }\r\n\r\n    // =============================================================\r\n    //                        IERC721Metadata\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, it can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return '';\r\n    }\r\n\r\n    // =============================================================\r\n    //                     OWNERSHIPS OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r\n        return address(uint160(_packedOwnershipOf(tokenId)));\r\n    }\r\n\r\n    /**\r\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\r\n     * It gradually moves to O(1) as tokens get transferred around over time.\r\n     */\r\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\r\n     */\r\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnerships[index]);\r\n    }\r\n\r\n    /**\r\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\r\n     */\r\n    function _initializeOwnershipAt(uint256 index) internal virtual {\r\n        if (_packedOwnerships[index] == 0) {\r\n            _packedOwnerships[index] = _packedOwnershipOf(index);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the packed ownership data of `tokenId`.\r\n     */\r\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\r\n        uint256 curr = tokenId;\r\n\r\n        unchecked {\r\n            if (_startTokenId() <= curr)\r\n                if (curr < _currentIndex) {\r\n                    uint256 packed = _packedOwnerships[curr];\r\n                    // If not burned.\r\n                    if (packed & _BITMASK_BURNED == 0) {\r\n                        // Invariant:\r\n                        // There will always be an initialized ownership slot\r\n                        // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\r\n                        // before an unintialized ownership slot\r\n                        // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\r\n                        // Hence, `curr` will not underflow.\r\n                        //\r\n                        // We can directly compare the packed value.\r\n                        // If the address is zero, packed will be zero.\r\n                        while (packed == 0) {\r\n                            packed = _packedOwnerships[--curr];\r\n                        }\r\n                        return packed;\r\n                    }\r\n                }\r\n        }\r\n        revert OwnerQueryForNonexistentToken();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\r\n     */\r\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\r\n        ownership.addr = address(uint160(packed));\r\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\r\n        ownership.burned = packed & _BITMASK_BURNED != 0;\r\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\r\n    }\r\n\r\n    /**\r\n     * @dev Packs ownership data into a single uint256.\r\n     */\r\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\r\n        assembly {\r\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            owner := and(owner, _BITMASK_ADDRESS)\r\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\r\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\r\n     */\r\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\r\n        // For branchless setting of the `nextInitialized` flag.\r\n        assembly {\r\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\r\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                      APPROVAL OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the\r\n     * zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) public virtual override {\r\n        address owner = ownerOf(tokenId);\r\n\r\n        if (_msgSenderERC721A() != owner)\r\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\r\n                revert ApprovalCallerNotOwnerNorApproved();\r\n            }\r\n\r\n        _tokenApprovals[tokenId].value = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\r\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\r\n\r\n        return _tokenApprovals[tokenId].value;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom}\r\n     * for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\r\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted. See {_mint}.\r\n     */\r\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\r\n        return\r\n            _startTokenId() <= tokenId &&\r\n            tokenId < _currentIndex && // If within bounds,\r\n            _packedOwnerships[tokenId] & _BITMASK_BURNED == 0; // and not burned.\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\r\n     */\r\n    function _isSenderApprovedOrOwner(\r\n        address approvedAddress,\r\n        address owner,\r\n        address msgSender\r\n    ) private pure returns (bool result) {\r\n        assembly {\r\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            owner := and(owner, _BITMASK_ADDRESS)\r\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\r\n            // `msgSender == owner || msgSender == approvedAddress`.\r\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\r\n     */\r\n    function _getApprovedSlotAndAddress(uint256 tokenId)\r\n        private\r\n        view\r\n        returns (uint256 approvedAddressSlot, address approvedAddress)\r\n    {\r\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\r\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\r\n        assembly {\r\n            approvedAddressSlot := tokenApproval.slot\r\n            approvedAddress := sload(approvedAddressSlot)\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                      TRANSFER OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token\r\n     * by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\r\n\r\n        // The nested ifs save around 20+ gas over a compound boolean condition.\r\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\r\n\r\n        if (to == address(0)) revert TransferToZeroAddress();\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\r\n        unchecked {\r\n            // We can directly increment and decrement the balances.\r\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\r\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\r\n\r\n            // Updates:\r\n            // - `address` to the next owner.\r\n            // - `startTimestamp` to the timestamp of transfering.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `true`.\r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                to,\r\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, tokenId);\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        safeTransferFrom(from, to, tokenId, '');\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token\r\n     * by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement\r\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public virtual override {\r\n        transferFrom(from, to, tokenId);\r\n        if (to.code.length != 0)\r\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before a set of serially-ordered token IDs\r\n     * are about to be transferred. This includes minting.\r\n     * And also called before burning one token.\r\n     *\r\n     * `startTokenId` - the first token ID to be transferred.\r\n     * `quantity` - the amount to be transferred.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after a set of serially-ordered token IDs\r\n     * have been transferred. This includes minting.\r\n     * And also called after one token has been burned.\r\n     *\r\n     * `startTokenId` - the first token ID to be transferred.\r\n     * `quantity` - the amount to be transferred.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` has been minted for `to`.\r\n     * - When `to` is zero, `tokenId` has been burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\r\n     *\r\n     * `from` - Previous owner of the given token ID.\r\n     * `to` - Target address that will receive the token.\r\n     * `tokenId` - Token ID to be transferred.\r\n     * `_data` - Optional data to send along with the call.\r\n     *\r\n     * Returns whether the call correctly returned the expected magic value.\r\n     */\r\n    function _checkContractOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\r\n            bytes4 retval\r\n        ) {\r\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\r\n        } catch (bytes memory reason) {\r\n            if (reason.length == 0) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            } else {\r\n                assembly {\r\n                    revert(add(32, reason), mload(reason))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                        MINT OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event for each mint.\r\n     */\r\n    function _mint(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\r\n        // `tokenId` has a maximum limit of 2**256.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\r\n\r\n            // Updates:\r\n            // - `address` to the owner.\r\n            // - `startTimestamp` to the timestamp of minting.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `quantity == 1`.\r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            uint256 toMasked;\r\n            uint256 end = startTokenId + quantity;\r\n\r\n            // Use assembly to loop and emit the `Transfer` event for gas savings.\r\n            // The duplicated `log4` removes an extra check and reduces stack juggling.\r\n            // The assembly, together with the surrounding Solidity code, have been\r\n            // delicately arranged to nudge the compiler into producing optimized opcodes.\r\n            assembly {\r\n                // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n                toMasked := and(to, _BITMASK_ADDRESS)\r\n                // Emit the `Transfer` event.\r\n                log4(\r\n                    0, // Start of data (0, since no data).\r\n                    0, // End of data (0, since no data).\r\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\r\n                    0, // `address(0)`.\r\n                    toMasked, // `to`.\r\n                    startTokenId // `tokenId`.\r\n                )\r\n\r\n                for {\r\n                    let tokenId := add(startTokenId, 1)\r\n                } iszero(eq(tokenId, end)) {\r\n                    tokenId := add(tokenId, 1)\r\n                } {\r\n                    // Emit the `Transfer` event. Similar to above.\r\n                    log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId)\r\n                }\r\n            }\r\n            if (toMasked == 0) revert MintToZeroAddress();\r\n\r\n            _currentIndex = end;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * This function is intended for efficient minting only during contract creation.\r\n     *\r\n     * It emits only one {ConsecutiveTransfer} as defined in\r\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\r\n     * instead of a sequence of {Transfer} event(s).\r\n     *\r\n     * Calling this function outside of contract creation WILL make your contract\r\n     * non-compliant with the ERC721 standard.\r\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\r\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {ConsecutiveTransfer} event.\r\n     */\r\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (to == address(0)) revert MintToZeroAddress();\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\r\n\r\n            // Updates:\r\n            // - `address` to the owner.\r\n            // - `startTimestamp` to the timestamp of minting.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `quantity == 1`.\r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\r\n\r\n            _currentIndex = startTokenId + quantity;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement\r\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * See {_mint}.\r\n     *\r\n     * Emits a {Transfer} event for each mint.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal virtual {\r\n        _mint(to, quantity);\r\n\r\n        unchecked {\r\n            if (to.code.length != 0) {\r\n                uint256 end = _currentIndex;\r\n                uint256 index = end - quantity;\r\n                do {\r\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\r\n                        revert TransferToNonERC721ReceiverImplementer();\r\n                    }\r\n                } while (index < end);\r\n                // Reentrancy protection.\r\n                if (_currentIndex != end) revert();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\r\n     */\r\n    function _safeMint(address to, uint256 quantity) internal virtual {\r\n        _safeMint(to, quantity, '');\r\n    }\r\n\r\n    // =============================================================\r\n    //                        BURN OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Equivalent to `_burn(tokenId, false)`.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        _burn(tokenId, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        address from = address(uint160(prevOwnershipPacked));\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\r\n\r\n        if (approvalCheck) {\r\n            // The nested ifs save around 20+ gas over a compound boolean condition.\r\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\r\n        }\r\n\r\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance -= 1`.\r\n            // - `numberBurned += 1`.\r\n            //\r\n            // We can directly decrement the balance, and increment the number burned.\r\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\r\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\r\n\r\n            // Updates:\r\n            // - `address` to the last owner.\r\n            // - `startTimestamp` to the timestamp of burning.\r\n            // - `burned` to `true`.\r\n            // - `nextInitialized` to `true`.\r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                from,\r\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, address(0), tokenId);\r\n        _afterTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\r\n        unchecked {\r\n            _burnCounter++;\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                     EXTRA DATA OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Directly sets the extra data for the ownership data `index`.\r\n     */\r\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\r\n        uint256 packed = _packedOwnerships[index];\r\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\r\n        uint256 extraDataCasted;\r\n        // Cast `extraData` with assembly to avoid redundant masking.\r\n        assembly {\r\n            extraDataCasted := extraData\r\n        }\r\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\r\n        _packedOwnerships[index] = packed;\r\n    }\r\n\r\n    /**\r\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\r\n     * Intended to be overridden by the cosumer contract.\r\n     *\r\n     * `previousExtraData` - the value of `extraData` before transfer.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _extraData(\r\n        address from,\r\n        address to,\r\n        uint24 previousExtraData\r\n    ) internal view virtual returns (uint24) {}\r\n\r\n    /**\r\n     * @dev Returns the next extra data for the packed ownership data.\r\n     * The returned result is shifted into position.\r\n     */\r\n    function _nextExtraData(\r\n        address from,\r\n        address to,\r\n        uint256 prevOwnershipPacked\r\n    ) private view returns (uint256) {\r\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\r\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\r\n    }\r\n\r\n    // =============================================================\r\n    //                       OTHER OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the message sender (defaults to `msg.sender`).\r\n     *\r\n     * If you are writing GSN compatible contracts, you need to override this function.\r\n     */\r\n    function _msgSenderERC721A() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a uint256 to its ASCII string decimal representation.\r\n     */\r\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\r\n        assembly {\r\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit),\r\n            // but we allocate 0x80 bytes to keep the free memory pointer 32-byte word aligned.\r\n            // We will need 1 32-byte word to store the length,\r\n            // and 3 32-byte words to store a maximum of 78 digits. Total: 0x20 + 3 * 0x20 = 0x80.\r\n            str := add(mload(0x40), 0x80)\r\n            // Update the free memory pointer to allocate.\r\n            mstore(0x40, str)\r\n\r\n            // Cache the end of the memory to calculate the length later.\r\n            let end := str\r\n\r\n            // We write the string from rightmost digit to leftmost digit.\r\n            // The following is essentially a do-while loop that also handles the zero case.\r\n            // prettier-ignore\r\n            for { let temp := value } 1 {} {\r\n                str := sub(str, 1)\r\n                // Write the character to the pointer.\r\n                // The ASCII index of the '0' character is 48.\r\n                mstore8(str, add(48, mod(temp, 10)))\r\n                // Keep dividing `temp` until zero.\r\n                temp := div(temp, 10)\r\n                // prettier-ignore\r\n                if iszero(temp) { break }\r\n            }\r\n\r\n            let length := sub(end, str)\r\n            // Move the pointer 32 bytes leftwards to make room for the length.\r\n            str := sub(str, 0x20)\r\n            // Store the length.\r\n            mstore(str, length)\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v4.2.2\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev Interface of ERC721A.\r\n */\r\ninterface IERC721A {\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error ApprovalCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error ApprovalQueryForNonexistentToken();\r\n\r\n    /**\r\n     * Cannot query the balance for the zero address.\r\n     */\r\n    error BalanceQueryForZeroAddress();\r\n\r\n    /**\r\n     * Cannot mint to the zero address.\r\n     */\r\n    error MintToZeroAddress();\r\n\r\n    /**\r\n     * The quantity of tokens minted must be more than zero.\r\n     */\r\n    error MintZeroQuantity();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error OwnerQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error TransferCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token must be owned by `from`.\r\n     */\r\n    error TransferFromIncorrectOwner();\r\n\r\n    /**\r\n     * Cannot safely transfer to a contract that does not implement the\r\n     * ERC721Receiver interface.\r\n     */\r\n    error TransferToNonERC721ReceiverImplementer();\r\n\r\n    /**\r\n     * Cannot transfer to the zero address.\r\n     */\r\n    error TransferToZeroAddress();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error URIQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\r\n     */\r\n    error MintERC2309QuantityExceedsLimit();\r\n\r\n    /**\r\n     * The `extraData` cannot be set on an unintialized ownership slot.\r\n     */\r\n    error OwnershipNotInitializedForExtraData();\r\n\r\n    // =============================================================\r\n    //                            STRUCTS\r\n    // =============================================================\r\n\r\n    struct TokenOwnership {\r\n        // The address of the owner.\r\n        address addr;\r\n        // Stores the start time of ownership with minimal overhead for tokenomics.\r\n        uint64 startTimestamp;\r\n        // Whether the token has been burned.\r\n        bool burned;\r\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\r\n        uint24 extraData;\r\n    }\r\n\r\n    // =============================================================\r\n    //                         TOKEN COUNTERS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens in existence.\r\n     * Burned tokens will reduce the count.\r\n     * To get the total number of tokens minted, please see {_totalMinted}.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    // =============================================================\r\n    //                            IERC165\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n\r\n    // =============================================================\r\n    //                            IERC721\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables\r\n     * (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in `owner`'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\r\n     * checking first that contract recipients are aware of the ERC721 protocol\r\n     * to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move\r\n     * this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement\r\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\r\n     * whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token\r\n     * by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the\r\n     * zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom}\r\n     * for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    // =============================================================\r\n    //                        IERC721Metadata\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n\r\n    // =============================================================\r\n    //                           IERC2309\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\r\n     * (inclusive) is transferred from `from` to `to`, as defined in the\r\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\r\n     *\r\n     * See {_mintERC2309} for more details.\r\n     */\r\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204bbfd4273bcb6e2aafa0a16dc95c02e028ffe3253c6c762cb45076c0508acb9764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204bbfd4273bcb6e2aafa0a16dc95c02e028ffe3253c6c762cb45076c0508acb9764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xBF 0xD4 0x27 EXTCODESIZE 0xCB PUSH15 0x2AAFA0A16DC95C02E028FFE3253C6C PUSH23 0x2CB45076C0508ACB9764736F6C63430008070033000000 ",
							"sourceMap": "194:8111:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204bbfd4273bcb6e2aafa0a16dc95c02e028ffe3253c6c762cb45076c0508acb9764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xBF 0xD4 0x27 EXTCODESIZE 0xCB PUSH15 0x2AAFA0A16DC95C02E028FFE3253C6C PUSH23 0x2CB45076C0508ACB9764736F6C63430008070033000000 ",
							"sourceMap": "194:8111:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204bbfd4273bcb6e2aafa0a16dc95c02e028ffe3253c6c762cb45076c0508acb9764736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220841227ceec917adeb05ff8c6dc5d18499b87316fa81ffa997ae136a1e874b02064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220841227ceec917adeb05ff8c6dc5d18499b87316fa81ffa997ae136a1e874b02064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SLT 0x27 0xCE 0xEC SWAP2 PUSH27 0xDEB05FF8C6DC5D18499B87316FA81FFA997AE136A1E874B0206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "161:2235:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;161:2235:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220841227ceec917adeb05ff8c6dc5d18499b87316fa81ffa997ae136a1e874b02064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SLT 0x27 0xCE 0xEC SWAP2 PUSH27 0xDEB05FF8C6DC5D18499B87316FA81FFA997AE136A1E874B0206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "161:2235:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220841227ceec917adeb05ff8c6dc5d18499b87316fa81ffa997ae136a1e874b02064736f6c63430008070033",
									".code": [
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC721A.sol\":1089:42112  contract ERC721A is IERC721A {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC721A.sol\":5201:5359  constructor(string memory name_, string memory symbol_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC721A.sol\":5268:5281  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"contracts/ERC721A.sol\":5268:5273  _name */\n  0x02\n  swap1\n    /* \"contracts/ERC721A.sol\":5268:5281  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/ERC721A.sol\":5292:5309  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"contracts/ERC721A.sol\":5292:5299  _symbol */\n  0x03\n  swap1\n    /* \"contracts/ERC721A.sol\":5292:5309  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"contracts/ERC721A.sol\":5751:5758  uint256 */\n  0x00\n    /* \"contracts/ERC721A.sol\":5320:5351  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"contracts/ERC721A.sol\":1089:42112  contract ERC721A is IERC721A {\r... */\n  jump(tag_24)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_16\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_19)\ntag_16:\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_19)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_19\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\n  pop\n  tag_20\n  swap3\n  swap2\n  pop\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_22)\n    /* \"#utility.yul\":14:899   */\ntag_25:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_27:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_32\n  tag_30\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_33:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_34:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_37:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_39:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_40:\n    /* \"#utility.yul\":1222:1283   */\n  tag_41\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_25\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_42:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_43\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_25\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_14:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_45:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_46:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_30:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_24:\n    /* \"contracts/ERC721A.sol\":1089:42112  contract ERC721A is IERC721A {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC721A.sol\":1089:42112  contract ERC721A is IERC721A {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC721A.sol\":9526:10165  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":5027:5041   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5020:5042   */\n      iszero\n        /* \"#utility.yul\":5002:5043   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4990:4992   */\n      0x20\n        /* \"#utility.yul\":4975:4993   */\n      add\n        /* \"contracts/ERC721A.sol\":9526:10165  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":10428:10528  function name() public view virtual override returns (string memory) {\r... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":16911:17129  function getApproved(uint256 tokenId) public view virtual override returns (address) {\r... */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4325:4357   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4307:4358   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4295:4297   */\n      0x20\n        /* \"#utility.yul\":4280:4298   */\n      add\n        /* \"contracts/ERC721A.sol\":16911:17129  function getApproved(uint256 tokenId) public view virtual override returns (address) {\r... */\n      tag_24\n        /* \"#utility.yul\":4161:4364   */\n      jump\n        /* \"contracts/ERC721A.sol\":16352:16752  function approve(address to, uint256 tokenId) public virtual override {\r... */\n    tag_6:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/ERC721A.sol\":6179:6502  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_7:\n        /* \"contracts/ERC721A.sol\":6453:6465  _burnCounter */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":6240:6247  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":6437:6450  _currentIndex */\n      sload\n        /* \"contracts/ERC721A.sol\":6437:6465  _currentIndex - _burnCounter */\n      sub\n        /* \"contracts/ERC721A.sol\":6179:6502  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":5424:5449   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5412:5414   */\n      0x20\n        /* \"#utility.yul\":5397:5415   */\n      add\n        /* \"contracts/ERC721A.sol\":6179:6502  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_24\n        /* \"#utility.yul\":5278:5455   */\n      jump\n        /* \"contracts/ERC721A.sol\":20550:23367  function transferFrom(\r... */\n    tag_8:\n      tag_36\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":23463:23648  function safeTransferFrom(\r... */\n    tag_9:\n      tag_36\n      tag_49\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":11821:11973  function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r... */\n    tag_10:\n      tag_30\n      tag_52\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":7363:7596  function balanceOf(address owner) public view virtual override returns (uint256) {\r... */\n    tag_11:\n      tag_40\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":10604:10708  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_12:\n      tag_26\n      tag_61\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17469:17703  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_13:\n      tag_36\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":24246:24645  function safeTransferFrom(\r... */\n    tag_14:\n      tag_36\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":10814:11132  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r... */\n    tag_15:\n      tag_26\n      tag_72\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17860:18024  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r... */\n    tag_16:\n      tag_20\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":17981:18006  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":17957:17961  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":17981:18006  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17981:17999  _operatorApprovals */\n      0x07\n        /* \"contracts/ERC721A.sol\":17981:18006  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC721A.sol\":17981:18016  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":17860:18024  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r... */\n      jump\n        /* \"contracts/ERC721A.sol\":9526:10165  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n    tag_23:\n        /* \"contracts/ERC721A.sol\":9611:9615  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":9935:9960  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"contracts/ERC721A.sol\":9935:10037  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r... */\n      tag_81\n      jumpi\n      pop\n      shl(0xe0, 0x80ac58cd)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":10012:10037  interfaceId == 0x80ac58cd */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":9935:10037  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r... */\n    tag_81:\n        /* \"contracts/ERC721A.sol\":9935:10114  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r... */\n      dup1\n      tag_82\n      jumpi\n      pop\n      shl(0xe0, 0x5b5e139f)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":10089:10114  interfaceId == 0x5b5e139f */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":9935:10114  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r... */\n    tag_82:\n        /* \"contracts/ERC721A.sol\":9915:10114  return\r... */\n      swap3\n        /* \"contracts/ERC721A.sol\":9526:10165  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10428:10528  function name() public view virtual override returns (string memory) {\r... */\n    tag_27:\n        /* \"contracts/ERC721A.sol\":10482:10495  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10515:10520  _name */\n      0x02\n        /* \"contracts/ERC721A.sol\":10508:10520  return _name */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_88\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_87)\n    tag_88:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_89:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_89\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":10428:10528  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":16911:17129  function getApproved(uint256 tokenId) public view virtual override returns (address) {\r... */\n    tag_33:\n        /* \"contracts/ERC721A.sol\":16987:16994  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":17012:17028  _exists(tokenId) */\n      tag_91\n        /* \"contracts/ERC721A.sol\":17020:17027  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":17012:17019  _exists */\n      tag_92\n        /* \"contracts/ERC721A.sol\":17012:17028  _exists(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/ERC721A.sol\":17007:17071  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_93\n      jumpi\n        /* \"contracts/ERC721A.sol\":17037:17071  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":17007:17071  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_93:\n      pop\n        /* \"contracts/ERC721A.sol\":17091:17115  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17091:17106  _tokenApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":17091:17115  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":17091:17121  _tokenApprovals[tokenId].value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":16911:17129  function getApproved(uint256 tokenId) public view virtual override returns (address) {\r... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":16352:16752  function approve(address to, uint256 tokenId) public virtual override {\r... */\n    tag_39:\n        /* \"contracts/ERC721A.sol\":16433:16446  address owner */\n      0x00\n        /* \"contracts/ERC721A.sol\":16449:16465  ownerOf(tokenId) */\n      tag_95\n        /* \"contracts/ERC721A.sol\":16457:16464  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":16449:16456  ownerOf */\n      tag_53\n        /* \"contracts/ERC721A.sol\":16449:16465  ownerOf(tokenId) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/ERC721A.sol\":16433:16465  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":16482:16510  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":16478:16653  if (_msgSenderERC721A() != owner)\r... */\n      tag_101\n      jumpi\n        /* \"contracts/ERC721A.sol\":16530:16574  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_99\n        /* \"contracts/ERC721A.sol\":16547:16552  owner */\n      dup2\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17860:18024  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r... */\n      tag_76\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":16530:16574  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_99:\n        /* \"contracts/ERC721A.sol\":16525:16653  if (!isApprovedForAll(owner, _msgSenderERC721A())) {\r... */\n      tag_101\n      jumpi\n        /* \"contracts/ERC721A.sol\":16602:16637  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":16525:16653  if (!isApprovedForAll(owner, _msgSenderERC721A())) {\r... */\n    tag_101:\n        /* \"contracts/ERC721A.sol\":16665:16689  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":16665:16680  _tokenApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":16665:16689  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC721A.sol\":16665:16700  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC721A.sol\":16716:16744  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"contracts/ERC721A.sol\":16665:16689  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"contracts/ERC721A.sol\":16716:16744  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"contracts/ERC721A.sol\":16422:16752  {\r... */\n      pop\n        /* \"contracts/ERC721A.sol\":16352:16752  function approve(address to, uint256 tokenId) public virtual override {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":20550:23367  function transferFrom(\r... */\n    tag_47:\n        /* \"contracts/ERC721A.sol\":20684:20711  uint256 prevOwnershipPacked */\n      0x00\n        /* \"contracts/ERC721A.sol\":20714:20741  _packedOwnershipOf(tokenId) */\n      tag_106\n        /* \"contracts/ERC721A.sol\":20733:20740  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":20714:20732  _packedOwnershipOf */\n      tag_107\n        /* \"contracts/ERC721A.sol\":20714:20741  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/ERC721A.sol\":20684:20741  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":20799:20803  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":20758:20803  address(uint160(prevOwnershipPacked)) != from */\n      and\n        /* \"contracts/ERC721A.sol\":20774:20793  prevOwnershipPacked */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":20758:20803  address(uint160(prevOwnershipPacked)) != from */\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":20754:20840  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_108\n      jumpi\n        /* \"contracts/ERC721A.sol\":20812:20840  TransferFromIncorrectOwner() */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":20754:20840  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_108:\n        /* \"contracts/ERC721A.sol\":20854:20881  uint256 approvedAddressSlot */\n      0x00\n        /* \"contracts/ERC721A.sol\":19658:19682  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":19658:19673  _tokenApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":19658:19682  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":19886:19912  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":19283:19313  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":18976:19004  and(owner, _BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"contracts/ERC721A.sol\":19261:19281  eq(msgSender, owner) */\n      swap1\n      swap2\n      eq\n        /* \"contracts/ERC721A.sol\":19258:19314  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"contracts/ERC721A.sol\":21040:21220  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r... */\n      tag_117\n      jumpi\n        /* \"contracts/ERC721A.sol\":21133:21176  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_115\n        /* \"contracts/ERC721A.sol\":21150:21154  from */\n      dup7\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17860:18024  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r... */\n      tag_76\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":21133:21176  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_115:\n        /* \"contracts/ERC721A.sol\":21128:21220  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_117\n      jumpi\n        /* \"contracts/ERC721A.sol\":21185:21220  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":21128:21220  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":21237:21253  to == address(0) */\n      dup6\n      and\n        /* \"contracts/ERC721A.sol\":21233:21285  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_118\n      jumpi\n        /* \"contracts/ERC721A.sol\":21262:21285  TransferToZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":21233:21285  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_118:\n        /* \"contracts/ERC721A.sol\":21434:21449  approvedAddress */\n      dup1\n        /* \"contracts/ERC721A.sol\":21431:21591  if approvedAddress {\r... */\n      iszero\n      tag_121\n      jumpi\n        /* \"contracts/ERC721A.sol\":21574:21575  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":21553:21572  approvedAddressSlot */\n      dup3\n        /* \"contracts/ERC721A.sol\":21546:21576  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"contracts/ERC721A.sol\":21431:21591  if approvedAddress {\r... */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":21971:21995  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":21971:21989  _packedAddressData */\n      0x05\n        /* \"contracts/ERC721A.sol\":21971:21995  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC721A.sol\":21969:21995  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":22040:22062  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":22038:22062  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":15210:15221  timestamp() */\n      timestamp\n        /* \"contracts/ERC721A.sol\":15185:15208  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"contracts/ERC721A.sol\":15181:15222  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"contracts/ERC721A.sol\":15168:15231  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"contracts/ERC721A.sol\":22333:22359  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":22333:22350  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":22333:22359  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":22333:22508  _packedOwnerships[tokenId] = _packOwnershipData(\r... */\n      sstore\n      shl(0xe1, 0x01)\n        /* \"contracts/ERC721A.sol\":22628:22675  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup4\n      and\n        /* \"contracts/ERC721A.sol\":22624:23251  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r... */\n      tag_126\n      jumpi\n        /* \"contracts/ERC721A.sol\":22733:22734  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":22723:22734  tokenId + 1 */\n      dup5\n      add\n        /* \"contracts/ERC721A.sol\":22701:22720  uint256 nextTokenId */\n      0x00\n        /* \"contracts/ERC721A.sol\":22856:22886  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":22856:22873  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":22856:22886  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":22852:23236  if (_packedOwnerships[nextTokenId] == 0) {\r... */\n      tag_128\n      jumpi\n        /* \"contracts/ERC721A.sol\":22994:23007  _currentIndex */\n      sload(0x00)\n        /* \"contracts/ERC721A.sol\":22979:22990  nextTokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":22979:23007  nextTokenId != _currentIndex */\n      eq\n        /* \"contracts/ERC721A.sol\":22975:23217  if (nextTokenId != _currentIndex) {\r... */\n      tag_128\n      jumpi\n        /* \"contracts/ERC721A.sol\":23141:23171  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":23141:23158  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":23141:23171  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":23141:23193  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":22975:23217  if (nextTokenId != _currentIndex) {\r... */\n    tag_128:\n        /* \"contracts/ERC721A.sol\":22682:23251  {\r... */\n      pop\n        /* \"contracts/ERC721A.sol\":22624:23251  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r... */\n    tag_126:\n        /* \"contracts/ERC721A.sol\":23298:23305  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":23294:23296  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":23279:23306  Transfer(from, to, tokenId) */\n      and\n        /* \"contracts/ERC721A.sol\":23288:23292  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":23279:23306  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC721A.sol\":20673:23367  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":20550:23367  function transferFrom(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":23463:23648  function safeTransferFrom(\r... */\n    tag_50:\n        /* \"contracts/ERC721A.sol\":23601:23640  safeTransferFrom(from, to, tokenId, '') */\n      tag_132\n        /* \"contracts/ERC721A.sol\":23618:23622  from */\n      dup4\n        /* \"contracts/ERC721A.sol\":23624:23626  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":23628:23635  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":23601:23640  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721A.sol\":23601:23617  safeTransferFrom */\n      tag_70\n        /* \"contracts/ERC721A.sol\":23601:23640  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_132:\n        /* \"contracts/ERC721A.sol\":23463:23648  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":11821:11973  function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r... */\n    tag_53:\n        /* \"contracts/ERC721A.sol\":11893:11900  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":11936:11963  _packedOwnershipOf(tokenId) */\n      tag_82\n        /* \"contracts/ERC721A.sol\":11955:11962  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":11936:11954  _packedOwnershipOf */\n      tag_107\n        /* \"contracts/ERC721A.sol\":11936:11963  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":7363:7596  function balanceOf(address owner) public view virtual override returns (uint256) {\r... */\n    tag_58:\n        /* \"contracts/ERC721A.sol\":7435:7442  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":7459:7478  owner == address(0) */\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":7455:7515  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_136\n      jumpi\n        /* \"contracts/ERC721A.sol\":7487:7515  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":7455:7515  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_136:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":7533:7558  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":7533:7551  _packedAddressData */\n      0x05\n        /* \"contracts/ERC721A.sol\":7533:7558  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":1522:1535  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"contracts/ERC721A.sol\":7533:7588  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":7363:7596  function balanceOf(address owner) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10604:10708  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_61:\n        /* \"contracts/ERC721A.sol\":10660:10673  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10693:10700  _symbol */\n      0x03\n        /* \"contracts/ERC721A.sol\":10686:10700  return _symbol */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17469:17703  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_66:\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17564:17603  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17564:17582  _operatorApprovals */\n      0x07\n        /* \"contracts/ERC721A.sol\":17564:17603  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":17564:17613  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":17564:17624  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC721A.sol\":17640:17695  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":5002:5043   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17564:17613  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      swap2\n        /* \"contracts/ERC721A.sol\":17640:17695  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":4975:4993   */\n      add\n        /* \"contracts/ERC721A.sol\":17640:17695  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC721A.sol\":17469:17703  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":24246:24645  function safeTransferFrom(\r... */\n    tag_70:\n        /* \"contracts/ERC721A.sol\":24413:24444  transferFrom(from, to, tokenId) */\n      tag_148\n        /* \"contracts/ERC721A.sol\":24426:24430  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":24432:24434  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":24436:24443  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":24413:24425  transferFrom */\n      tag_47\n        /* \"contracts/ERC721A.sol\":24413:24444  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":24459:24473  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"contracts/ERC721A.sol\":24459:24478  to.code.length != 0 */\n      iszero\n        /* \"contracts/ERC721A.sol\":24455:24638  if (to.code.length != 0)\r... */\n      tag_152\n      jumpi\n        /* \"contracts/ERC721A.sol\":24498:24554  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_150\n        /* \"contracts/ERC721A.sol\":24529:24533  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":24535:24537  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":24539:24546  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":24548:24553  _data */\n      dup5\n        /* \"contracts/ERC721A.sol\":24498:24528  _checkContractOnERC721Received */\n      tag_151\n        /* \"contracts/ERC721A.sol\":24498:24554  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/ERC721A.sol\":24493:24638  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r... */\n      tag_152\n      jumpi\n        /* \"contracts/ERC721A.sol\":24582:24622  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":24493:24638  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r... */\n    tag_152:\n        /* \"contracts/ERC721A.sol\":24246:24645  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10814:11132  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r... */\n    tag_73:\n        /* \"contracts/ERC721A.sol\":10887:10900  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10918:10934  _exists(tokenId) */\n      tag_154\n        /* \"contracts/ERC721A.sol\":10926:10933  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":10918:10925  _exists */\n      tag_92\n        /* \"contracts/ERC721A.sol\":10918:10934  _exists(tokenId) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/ERC721A.sol\":10913:10972  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_155\n      jumpi\n        /* \"contracts/ERC721A.sol\":10943:10972  URIQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe4, 0x0a14c4b5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":10913:10972  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_155:\n        /* \"contracts/ERC721A.sol\":10985:11006  string memory baseURI */\n      0x00\n        /* \"contracts/ERC721A.sol\":11009:11019  _baseURI() */\n      tag_156\n        /* \"contracts/ERC721A.sol\":11461:11470  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"contracts/ERC721A.sol\":11384:11478  function _baseURI() internal view virtual returns (string memory) {\r... */\n      jump\n        /* \"contracts/ERC721A.sol\":11009:11019  _baseURI() */\n    tag_156:\n        /* \"contracts/ERC721A.sol\":10985:11019  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":11043:11050  baseURI */\n      dup1\n        /* \"contracts/ERC721A.sol\":11037:11058  bytes(baseURI).length */\n      mload\n        /* \"contracts/ERC721A.sol\":11062:11063  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":11037:11063  bytes(baseURI).length != 0 */\n      eq\n      iszero\n        /* \"contracts/ERC721A.sol\":11037:11124  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_158\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_159)\n    tag_158:\n        /* \"contracts/ERC721A.sol\":11090:11097  baseURI */\n      dup1\n        /* \"contracts/ERC721A.sol\":11099:11117  _toString(tokenId) */\n      tag_160\n        /* \"contracts/ERC721A.sol\":11109:11116  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":11099:11108  _toString */\n      tag_161\n        /* \"contracts/ERC721A.sol\":11099:11117  _toString(tokenId) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/ERC721A.sol\":11073:11118  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_162\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC721A.sol\":11037:11124  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_159:\n        /* \"contracts/ERC721A.sol\":11030:11124  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"contracts/ERC721A.sol\":10814:11132  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":18282:18564  function _exists(uint256 tokenId) internal view virtual returns (bool) {\r... */\n    tag_92:\n        /* \"contracts/ERC721A.sol\":18347:18351  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":18437:18450  _currentIndex */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":18427:18434  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":18427:18450  tokenId < _currentIndex */\n      lt\n        /* \"contracts/ERC721A.sol\":18384:18537  _startTokenId() <= tokenId &&\r... */\n      dup1\n      iszero\n      tag_82\n      jumpi\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":18488:18514  _packedOwnerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":18488:18505  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":18488:18514  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"contracts/ERC721A.sol\":18488:18532  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"contracts/ERC721A.sol\":18488:18537  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n        /* \"contracts/ERC721A.sol\":18282:18564  function _exists(uint256 tokenId) internal view virtual returns (bool) {\r... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":12976:14251  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\r... */\n    tag_107:\n        /* \"contracts/ERC721A.sol\":13043:13050  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":13078:13085  tokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":13180:13193  _currentIndex */\n      sload(0x00)\n        /* \"contracts/ERC721A.sol\":13173:13177  curr */\n      dup2\n        /* \"contracts/ERC721A.sol\":13173:13193  curr < _currentIndex */\n      lt\n        /* \"contracts/ERC721A.sol\":13169:14184  if (curr < _currentIndex) {\r... */\n      iszero\n      tag_174\n      jumpi\n        /* \"contracts/ERC721A.sol\":13218:13232  uint256 packed */\n      0x00\n        /* \"contracts/ERC721A.sol\":13235:13258  _packedOwnerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":13235:13252  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":13235:13258  _packedOwnerships[curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"contracts/ERC721A.sol\":13324:13348  packed & _BITMASK_BURNED */\n      dup2\n      and\n        /* \"contracts/ERC721A.sol\":13320:14165  if (packed & _BITMASK_BURNED == 0) {\r... */\n      tag_175\n      jumpi\n        /* \"contracts/ERC721A.sol\":13989:14102  while (packed == 0) {\r... */\n    tag_176:\n        /* \"contracts/ERC721A.sol\":13996:14007  packed == 0 */\n      dup1\n        /* \"contracts/ERC721A.sol\":13989:14102  while (packed == 0) {\r... */\n      tag_159\n      jumpi\n      pop\n      not(0x00)\n        /* \"contracts/ERC721A.sol\":14067:14073  --curr */\n      add\n        /* \"contracts/ERC721A.sol\":14049:14074  _packedOwnerships[--curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":14049:14066  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":14049:14074  _packedOwnerships[--curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":13989:14102  while (packed == 0) {\r... */\n      jump(tag_176)\n        /* \"contracts/ERC721A.sol\":13320:14165  if (packed & _BITMASK_BURNED == 0) {\r... */\n    tag_175:\n        /* \"contracts/ERC721A.sol\":13195:14184  {\r... */\n      pop\n        /* \"contracts/ERC721A.sol\":13169:14184  if (curr < _currentIndex) {\r... */\n    tag_174:\n        /* \"contracts/ERC721A.sol\":14212:14243  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":26729:27445  function _checkContractOnERC721Received(\r... */\n    tag_151:\n        /* \"contracts/ERC721A.sol\":26913:27001  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":26892:26896  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":26913:26958  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"contracts/ERC721A.sol\":26913:27001  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_188\n      swap1\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ERC721A.sol\":26980:26984  from */\n      dup10\n      swap1\n        /* \"contracts/ERC721A.sol\":26986:26993  tokenId */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":26995:27000  _data */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":26913:27001  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_189\n      jump\t// in\n    tag_188:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_191\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_192\n      swap2\n      dup2\n      add\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      0x01\n    tag_191:\n        /* \"contracts/ERC721A.sol\":26909:27438  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\r... */\n      tag_194\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_199\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_198)\n    tag_199:\n      0x60\n      swap2\n      pop\n    tag_198:\n      pop\n        /* \"contracts/ERC721A.sol\":27196:27209  reason.length */\n      dup1\n      mload\n        /* \"contracts/ERC721A.sol\":27192:27427  if (reason.length == 0) {\r... */\n      tag_200\n      jumpi\n        /* \"contracts/ERC721A.sol\":27242:27282  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":27192:27427  if (reason.length == 0) {\r... */\n    tag_200:\n        /* \"contracts/ERC721A.sol\":27385:27391  reason */\n      dup1\n        /* \"contracts/ERC721A.sol\":27379:27392  mload(reason) */\n      mload\n        /* \"contracts/ERC721A.sol\":27370:27376  reason */\n      dup2\n        /* \"contracts/ERC721A.sol\":27366:27368  32 */\n      0x20\n        /* \"contracts/ERC721A.sol\":27362:27377  add(32, reason) */\n      add\n        /* \"contracts/ERC721A.sol\":27355:27393  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/ERC721A.sol\":26909:27438  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\r... */\n    tag_194:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":27072:27136  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":26729:27445  function _checkContractOnERC721Received(\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":40527:42109  function _toString(uint256 value) internal pure virtual returns (string memory str) {\r... */\n    tag_161:\n        /* \"contracts/ERC721A.sol\":41011:41015  0x40 */\n      0x40\n        /* \"contracts/ERC721A.sol\":41005:41016  mload(0x40) */\n      dup1\n      mload\n        /* \"contracts/ERC721A.sol\":41018:41022  0x80 */\n      0x80\n        /* \"contracts/ERC721A.sol\":41001:41023  add(mload(0x40), 0x80) */\n      add\n        /* \"contracts/ERC721A.sol\":41097:41114  mstore(0x40, str) */\n      swap1\n      dup2\n      swap1\n      mstore\n        /* \"contracts/ERC721A.sol\":41001:41023  add(mload(0x40), 0x80) */\n      dup1\n        /* \"contracts/ERC721A.sol\":41455:41460  value */\n      dup3\n        /* \"contracts/ERC721A.sol\":41437:41865  for { let temp := value } 1 {} {\r... */\n    tag_205:\n        /* \"contracts/ERC721A.sol\":41503:41504  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":41498:41501  str */\n      dup4\n        /* \"contracts/ERC721A.sol\":41494:41505  sub(str, 1) */\n      sub\n        /* \"contracts/ERC721A.sol\":41487:41505  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"contracts/ERC721A.sol\":41674:41676  10 */\n      0x0a\n        /* \"contracts/ERC721A.sol\":41668:41672  temp */\n      dup2\n        /* \"contracts/ERC721A.sol\":41664:41677  mod(temp, 10) */\n      mod\n        /* \"contracts/ERC721A.sol\":41660:41662  48 */\n      0x30\n        /* \"contracts/ERC721A.sol\":41656:41678  add(48, mod(temp, 10)) */\n      add\n        /* \"contracts/ERC721A.sol\":41651:41654  str */\n      dup4\n        /* \"contracts/ERC721A.sol\":41643:41679  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"contracts/ERC721A.sol\":41768:41770  10 */\n      0x0a\n        /* \"contracts/ERC721A.sol\":41758:41771  div(temp, 10) */\n      swap1\n      div\n      dup1\n        /* \"contracts/ERC721A.sol\":41825:41850  if iszero(temp) { break } */\n      tag_208\n      jumpi\n        /* \"contracts/ERC721A.sol\":41843:41848  break */\n      jump(tag_207)\n        /* \"contracts/ERC721A.sol\":41825:41850  if iszero(temp) { break } */\n    tag_208:\n        /* \"contracts/ERC721A.sol\":41437:41865  for { let temp := value } 1 {} {\r... */\n      jump(tag_205)\n    tag_207:\n      pop\n        /* \"contracts/ERC721A.sol\":41895:41908  sub(end, str) */\n      dup2\n      swap1\n      sub\n      not(0x1f)\n        /* \"contracts/ERC721A.sol\":42010:42024  sub(str, 0x20) */\n      swap1\n      swap2\n      add\n        /* \"contracts/ERC721A.sol\":42072:42091  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":42010:42024  sub(str, 0x20) */\n      swap2\n        /* \"contracts/ERC721A.sol\":40527:42109  function _toString(uint256 value) internal pure virtual returns (string memory str) {\r... */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_211:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_213:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_57:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_215:\n        /* \"#utility.yul\":343:372   */\n      tag_159\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_211\n      jump\t// in\n        /* \"#utility.yul\":383:643   */\n    tag_77:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_218:\n        /* \"#utility.yul\":551:580   */\n      tag_219\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_211\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_220\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_211\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_46:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_222:\n        /* \"#utility.yul\":833:862   */\n      tag_223\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_211\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_224\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_211\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:2119   */\n    tag_69:\n        /* \"#utility.yul\":1076:1082   */\n      0x00\n        /* \"#utility.yul\":1084:1090   */\n      dup1\n        /* \"#utility.yul\":1092:1098   */\n      0x00\n        /* \"#utility.yul\":1100:1106   */\n      dup1\n        /* \"#utility.yul\":1153:1156   */\n      0x80\n        /* \"#utility.yul\":1141:1150   */\n      dup6\n        /* \"#utility.yul\":1132:1139   */\n      dup8\n        /* \"#utility.yul\":1128:1151   */\n      sub\n        /* \"#utility.yul\":1124:1157   */\n      slt\n        /* \"#utility.yul\":1121:1174   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":1170:1171   */\n      0x00\n        /* \"#utility.yul\":1167:1168   */\n      dup1\n        /* \"#utility.yul\":1160:1172   */\n      revert\n        /* \"#utility.yul\":1121:1174   */\n    tag_226:\n        /* \"#utility.yul\":1193:1222   */\n      tag_227\n        /* \"#utility.yul\":1212:1221   */\n      dup6\n        /* \"#utility.yul\":1193:1222   */\n      tag_211\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1183:1222   */\n      swap4\n      pop\n        /* \"#utility.yul\":1241:1279   */\n      tag_228\n        /* \"#utility.yul\":1275:1277   */\n      0x20\n        /* \"#utility.yul\":1264:1273   */\n      dup7\n        /* \"#utility.yul\":1260:1278   */\n      add\n        /* \"#utility.yul\":1241:1279   */\n      tag_211\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1231:1279   */\n      swap3\n      pop\n        /* \"#utility.yul\":1326:1328   */\n      0x40\n        /* \"#utility.yul\":1315:1324   */\n      dup6\n        /* \"#utility.yul\":1311:1329   */\n      add\n        /* \"#utility.yul\":1298:1330   */\n      calldataload\n        /* \"#utility.yul\":1288:1330   */\n      swap2\n      pop\n        /* \"#utility.yul\":1381:1383   */\n      0x60\n        /* \"#utility.yul\":1370:1379   */\n      dup6\n        /* \"#utility.yul\":1366:1384   */\n      add\n        /* \"#utility.yul\":1353:1385   */\n      calldataload\n        /* \"#utility.yul\":1404:1422   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1445:1447   */\n      dup1\n        /* \"#utility.yul\":1437:1443   */\n      dup3\n        /* \"#utility.yul\":1434:1448   */\n      gt\n        /* \"#utility.yul\":1431:1465   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":1461:1462   */\n      0x00\n        /* \"#utility.yul\":1458:1459   */\n      dup1\n        /* \"#utility.yul\":1451:1463   */\n      revert\n        /* \"#utility.yul\":1431:1465   */\n    tag_229:\n        /* \"#utility.yul\":1499:1505   */\n      dup2\n        /* \"#utility.yul\":1488:1497   */\n      dup8\n        /* \"#utility.yul\":1484:1506   */\n      add\n        /* \"#utility.yul\":1474:1506   */\n      swap2\n      pop\n        /* \"#utility.yul\":1544:1551   */\n      dup8\n        /* \"#utility.yul\":1537:1541   */\n      0x1f\n        /* \"#utility.yul\":1533:1535   */\n      dup4\n        /* \"#utility.yul\":1529:1542   */\n      add\n        /* \"#utility.yul\":1525:1552   */\n      slt\n        /* \"#utility.yul\":1515:1570   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":1566:1567   */\n      0x00\n        /* \"#utility.yul\":1563:1564   */\n      dup1\n        /* \"#utility.yul\":1556:1568   */\n      revert\n        /* \"#utility.yul\":1515:1570   */\n    tag_230:\n        /* \"#utility.yul\":1602:1604   */\n      dup2\n        /* \"#utility.yul\":1589:1605   */\n      calldataload\n        /* \"#utility.yul\":1624:1626   */\n      dup2\n        /* \"#utility.yul\":1620:1622   */\n      dup2\n        /* \"#utility.yul\":1617:1627   */\n      gt\n        /* \"#utility.yul\":1614:1650   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":1630:1648   */\n      tag_232\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1705:1707   */\n      0x40\n        /* \"#utility.yul\":1699:1708   */\n      mload\n        /* \"#utility.yul\":1673:1675   */\n      0x1f\n        /* \"#utility.yul\":1759:1772   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1755:1777   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1779:1781   */\n      0x3f\n        /* \"#utility.yul\":1751:1782   */\n      add\n        /* \"#utility.yul\":1747:1787   */\n      and\n        /* \"#utility.yul\":1735:1788   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1803:1821   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1823:1845   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1800:1846   */\n      or\n        /* \"#utility.yul\":1797:1869   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":1849:1867   */\n      tag_235\n      tag_233\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1889:1899   */\n      dup2\n        /* \"#utility.yul\":1885:1887   */\n      0x40\n        /* \"#utility.yul\":1878:1900   */\n      mstore\n        /* \"#utility.yul\":1924:1926   */\n      dup3\n        /* \"#utility.yul\":1916:1922   */\n      dup2\n        /* \"#utility.yul\":1909:1927   */\n      mstore\n        /* \"#utility.yul\":1964:1971   */\n      dup11\n        /* \"#utility.yul\":1959:1961   */\n      0x20\n        /* \"#utility.yul\":1954:1956   */\n      dup5\n        /* \"#utility.yul\":1950:1952   */\n      dup8\n        /* \"#utility.yul\":1946:1957   */\n      add\n        /* \"#utility.yul\":1942:1962   */\n      add\n        /* \"#utility.yul\":1939:1972   */\n      gt\n        /* \"#utility.yul\":1936:1989   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":1985:1986   */\n      0x00\n        /* \"#utility.yul\":1982:1983   */\n      dup1\n        /* \"#utility.yul\":1975:1987   */\n      revert\n        /* \"#utility.yul\":1936:1989   */\n    tag_236:\n        /* \"#utility.yul\":2041:2043   */\n      dup3\n        /* \"#utility.yul\":2036:2038   */\n      0x20\n        /* \"#utility.yul\":2032:2034   */\n      dup7\n        /* \"#utility.yul\":2028:2039   */\n      add\n        /* \"#utility.yul\":2023:2025   */\n      0x20\n        /* \"#utility.yul\":2015:2021   */\n      dup4\n        /* \"#utility.yul\":2011:2026   */\n      add\n        /* \"#utility.yul\":1998:2044   */\n      calldatacopy\n        /* \"#utility.yul\":2086:2087   */\n      0x00\n        /* \"#utility.yul\":2081:2083   */\n      0x20\n        /* \"#utility.yul\":2076:2078   */\n      dup5\n        /* \"#utility.yul\":2068:2074   */\n      dup4\n        /* \"#utility.yul\":2064:2079   */\n      add\n        /* \"#utility.yul\":2060:2084   */\n      add\n        /* \"#utility.yul\":2053:2088   */\n      mstore\n        /* \"#utility.yul\":2107:2113   */\n      dup1\n        /* \"#utility.yul\":2097:2113   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:2119   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2124:2471   */\n    tag_65:\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2197:2203   */\n      dup1\n        /* \"#utility.yul\":2250:2252   */\n      0x40\n        /* \"#utility.yul\":2238:2247   */\n      dup4\n        /* \"#utility.yul\":2229:2236   */\n      dup6\n        /* \"#utility.yul\":2225:2248   */\n      sub\n        /* \"#utility.yul\":2221:2253   */\n      slt\n        /* \"#utility.yul\":2218:2270   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2263:2264   */\n      dup1\n        /* \"#utility.yul\":2256:2268   */\n      revert\n        /* \"#utility.yul\":2218:2270   */\n    tag_238:\n        /* \"#utility.yul\":2289:2318   */\n      tag_239\n        /* \"#utility.yul\":2308:2317   */\n      dup4\n        /* \"#utility.yul\":2289:2318   */\n      tag_211\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2279:2318   */\n      swap2\n      pop\n        /* \"#utility.yul\":2368:2370   */\n      0x20\n        /* \"#utility.yul\":2357:2366   */\n      dup4\n        /* \"#utility.yul\":2353:2371   */\n      add\n        /* \"#utility.yul\":2340:2372   */\n      calldataload\n        /* \"#utility.yul\":2415:2420   */\n      dup1\n        /* \"#utility.yul\":2408:2421   */\n      iszero\n        /* \"#utility.yul\":2401:2422   */\n      iszero\n        /* \"#utility.yul\":2394:2399   */\n      dup2\n        /* \"#utility.yul\":2391:2423   */\n      eq\n        /* \"#utility.yul\":2381:2441   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":2437:2438   */\n      0x00\n        /* \"#utility.yul\":2434:2435   */\n      dup1\n        /* \"#utility.yul\":2427:2439   */\n      revert\n        /* \"#utility.yul\":2381:2441   */\n    tag_240:\n        /* \"#utility.yul\":2460:2465   */\n      dup1\n        /* \"#utility.yul\":2450:2465   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2124:2471   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2476:2730   */\n    tag_38:\n        /* \"#utility.yul\":2544:2550   */\n      0x00\n        /* \"#utility.yul\":2552:2558   */\n      dup1\n        /* \"#utility.yul\":2605:2607   */\n      0x40\n        /* \"#utility.yul\":2593:2602   */\n      dup4\n        /* \"#utility.yul\":2584:2591   */\n      dup6\n        /* \"#utility.yul\":2580:2603   */\n      sub\n        /* \"#utility.yul\":2576:2608   */\n      slt\n        /* \"#utility.yul\":2573:2625   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":2621:2622   */\n      0x00\n        /* \"#utility.yul\":2618:2619   */\n      dup1\n        /* \"#utility.yul\":2611:2623   */\n      revert\n        /* \"#utility.yul\":2573:2625   */\n    tag_242:\n        /* \"#utility.yul\":2644:2673   */\n      tag_243\n        /* \"#utility.yul\":2663:2672   */\n      dup4\n        /* \"#utility.yul\":2644:2673   */\n      tag_211\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2634:2673   */\n      swap5\n        /* \"#utility.yul\":2720:2722   */\n      0x20\n        /* \"#utility.yul\":2705:2723   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2692:2724   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2476:2730   */\n      jump\t// out\n        /* \"#utility.yul\":2735:2980   */\n    tag_22:\n        /* \"#utility.yul\":2793:2799   */\n      0x00\n        /* \"#utility.yul\":2846:2848   */\n      0x20\n        /* \"#utility.yul\":2834:2843   */\n      dup3\n        /* \"#utility.yul\":2825:2832   */\n      dup5\n        /* \"#utility.yul\":2821:2844   */\n      sub\n        /* \"#utility.yul\":2817:2849   */\n      slt\n        /* \"#utility.yul\":2814:2866   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":2862:2863   */\n      0x00\n        /* \"#utility.yul\":2859:2860   */\n      dup1\n        /* \"#utility.yul\":2852:2864   */\n      revert\n        /* \"#utility.yul\":2814:2866   */\n    tag_245:\n        /* \"#utility.yul\":2901:2910   */\n      dup2\n        /* \"#utility.yul\":2888:2911   */\n      calldataload\n        /* \"#utility.yul\":2920:2950   */\n      tag_159\n        /* \"#utility.yul\":2944:2949   */\n      dup2\n        /* \"#utility.yul\":2920:2950   */\n      tag_247\n      jump\t// in\n        /* \"#utility.yul\":2985:3234   */\n    tag_193:\n        /* \"#utility.yul\":3054:3060   */\n      0x00\n        /* \"#utility.yul\":3107:3109   */\n      0x20\n        /* \"#utility.yul\":3095:3104   */\n      dup3\n        /* \"#utility.yul\":3086:3093   */\n      dup5\n        /* \"#utility.yul\":3082:3105   */\n      sub\n        /* \"#utility.yul\":3078:3110   */\n      slt\n        /* \"#utility.yul\":3075:3127   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":3123:3124   */\n      0x00\n        /* \"#utility.yul\":3120:3121   */\n      dup1\n        /* \"#utility.yul\":3113:3125   */\n      revert\n        /* \"#utility.yul\":3075:3127   */\n    tag_249:\n        /* \"#utility.yul\":3155:3164   */\n      dup2\n        /* \"#utility.yul\":3149:3165   */\n      mload\n        /* \"#utility.yul\":3174:3204   */\n      tag_159\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3174:3204   */\n      tag_247\n      jump\t// in\n        /* \"#utility.yul\":3239:3419   */\n    tag_32:\n        /* \"#utility.yul\":3298:3304   */\n      0x00\n        /* \"#utility.yul\":3351:3353   */\n      0x20\n        /* \"#utility.yul\":3339:3348   */\n      dup3\n        /* \"#utility.yul\":3330:3337   */\n      dup5\n        /* \"#utility.yul\":3326:3349   */\n      sub\n        /* \"#utility.yul\":3322:3354   */\n      slt\n        /* \"#utility.yul\":3319:3371   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":3367:3368   */\n      0x00\n        /* \"#utility.yul\":3364:3365   */\n      dup1\n        /* \"#utility.yul\":3357:3369   */\n      revert\n        /* \"#utility.yul\":3319:3371   */\n    tag_252:\n      pop\n        /* \"#utility.yul\":3390:3413   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3239:3419   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3424:3681   */\n    tag_253:\n        /* \"#utility.yul\":3465:3468   */\n      0x00\n        /* \"#utility.yul\":3503:3508   */\n      dup2\n        /* \"#utility.yul\":3497:3509   */\n      mload\n        /* \"#utility.yul\":3530:3536   */\n      dup1\n        /* \"#utility.yul\":3525:3528   */\n      dup5\n        /* \"#utility.yul\":3518:3537   */\n      mstore\n        /* \"#utility.yul\":3546:3609   */\n      tag_255\n        /* \"#utility.yul\":3602:3608   */\n      dup2\n        /* \"#utility.yul\":3595:3599   */\n      0x20\n        /* \"#utility.yul\":3590:3593   */\n      dup7\n        /* \"#utility.yul\":3586:3600   */\n      add\n        /* \"#utility.yul\":3579:3583   */\n      0x20\n        /* \"#utility.yul\":3572:3577   */\n      dup7\n        /* \"#utility.yul\":3568:3584   */\n      add\n        /* \"#utility.yul\":3546:3609   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3663:3665   */\n      0x1f\n        /* \"#utility.yul\":3642:3657   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3638:3667   */\n      and\n        /* \"#utility.yul\":3629:3668   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3670:3674   */\n      0x20\n        /* \"#utility.yul\":3625:3675   */\n      add\n      swap3\n        /* \"#utility.yul\":3424:3681   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3686:4156   */\n    tag_163:\n        /* \"#utility.yul\":3865:3868   */\n      0x00\n        /* \"#utility.yul\":3903:3909   */\n      dup4\n        /* \"#utility.yul\":3897:3910   */\n      mload\n        /* \"#utility.yul\":3919:3972   */\n      tag_258\n        /* \"#utility.yul\":3965:3971   */\n      dup2\n        /* \"#utility.yul\":3960:3963   */\n      dup5\n        /* \"#utility.yul\":3953:3957   */\n      0x20\n        /* \"#utility.yul\":3945:3951   */\n      dup9\n        /* \"#utility.yul\":3941:3958   */\n      add\n        /* \"#utility.yul\":3919:3972   */\n      tag_256\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4035:4048   */\n      dup4\n      mload\n        /* \"#utility.yul\":3994:4010   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":4057:4114   */\n      tag_259\n        /* \"#utility.yul\":4035:4048   */\n      dup2\n        /* \"#utility.yul\":3994:4010   */\n      dup4\n        /* \"#utility.yul\":4091:4095   */\n      0x20\n        /* \"#utility.yul\":4079:4096   */\n      dup9\n      add\n        /* \"#utility.yul\":4057:4114   */\n      tag_256\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4130:4150   */\n      add\n      swap5\n        /* \"#utility.yul\":3686:4156   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4369:4857   */\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4638:4653   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":4620:4654   */\n      dup3\n      mstore\n        /* \"#utility.yul\":4690:4705   */\n      dup5\n      and\n        /* \"#utility.yul\":4685:4687   */\n      0x20\n        /* \"#utility.yul\":4670:4688   */\n      dup3\n      add\n        /* \"#utility.yul\":4663:4706   */\n      mstore\n        /* \"#utility.yul\":4737:4739   */\n      0x40\n        /* \"#utility.yul\":4722:4740   */\n      dup2\n      add\n        /* \"#utility.yul\":4715:4749   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4785:4788   */\n      0x80\n        /* \"#utility.yul\":4780:4782   */\n      0x60\n        /* \"#utility.yul\":4765:4783   */\n      dup3\n      add\n        /* \"#utility.yul\":4758:4789   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4563:4567   */\n      0x00\n      swap1\n        /* \"#utility.yul\":4806:4851   */\n      tag_262\n      swap1\n        /* \"#utility.yul\":4831:4850   */\n      dup4\n      add\n        /* \"#utility.yul\":4823:4829   */\n      dup5\n        /* \"#utility.yul\":4806:4851   */\n      tag_253\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":4798:4851   */\n      swap7\n        /* \"#utility.yul\":4369:4857   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5054:5273   */\n    tag_29:\n        /* \"#utility.yul\":5203:5205   */\n      0x20\n        /* \"#utility.yul\":5192:5201   */\n      dup2\n        /* \"#utility.yul\":5185:5206   */\n      mstore\n        /* \"#utility.yul\":5166:5170   */\n      0x00\n        /* \"#utility.yul\":5223:5267   */\n      tag_159\n        /* \"#utility.yul\":5263:5265   */\n      0x20\n        /* \"#utility.yul\":5252:5261   */\n      dup4\n        /* \"#utility.yul\":5248:5266   */\n      add\n        /* \"#utility.yul\":5240:5246   */\n      dup5\n        /* \"#utility.yul\":5223:5267   */\n      tag_253\n      jump\t// in\n        /* \"#utility.yul\":5460:5718   */\n    tag_256:\n        /* \"#utility.yul\":5532:5533   */\n      0x00\n        /* \"#utility.yul\":5542:5655   */\n    tag_268:\n        /* \"#utility.yul\":5556:5562   */\n      dup4\n        /* \"#utility.yul\":5553:5554   */\n      dup2\n        /* \"#utility.yul\":5550:5563   */\n      lt\n        /* \"#utility.yul\":5542:5655   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":5632:5643   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5626:5644   */\n      mload\n        /* \"#utility.yul\":5613:5624   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":5606:5645   */\n      mstore\n        /* \"#utility.yul\":5578:5580   */\n      0x20\n        /* \"#utility.yul\":5571:5581   */\n      add\n        /* \"#utility.yul\":5542:5655   */\n      jump(tag_268)\n    tag_270:\n        /* \"#utility.yul\":5673:5679   */\n      dup4\n        /* \"#utility.yul\":5670:5671   */\n      dup2\n        /* \"#utility.yul\":5667:5680   */\n      gt\n        /* \"#utility.yul\":5664:5712   */\n      iszero\n      tag_152\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":5708:5709   */\n      0x00\n        /* \"#utility.yul\":5690:5706   */\n      swap2\n      add\n        /* \"#utility.yul\":5683:5710   */\n      mstore\n        /* \"#utility.yul\":5460:5718   */\n      jump\t// out\n        /* \"#utility.yul\":5723:6103   */\n    tag_85:\n        /* \"#utility.yul\":5802:5803   */\n      0x01\n        /* \"#utility.yul\":5798:5810   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5845:5857   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5866:5927   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":5920:5924   */\n      0x7f\n        /* \"#utility.yul\":5912:5918   */\n      dup3\n        /* \"#utility.yul\":5908:5925   */\n      and\n        /* \"#utility.yul\":5898:5925   */\n      swap2\n      pop\n        /* \"#utility.yul\":5866:5927   */\n    tag_273:\n        /* \"#utility.yul\":5973:5975   */\n      0x20\n        /* \"#utility.yul\":5965:5971   */\n      dup3\n        /* \"#utility.yul\":5962:5976   */\n      lt\n        /* \"#utility.yul\":5942:5960   */\n      dup2\n        /* \"#utility.yul\":5939:5977   */\n      eq\n        /* \"#utility.yul\":5936:6097   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":6019:6029   */\n      0x4e487b71\n        /* \"#utility.yul\":6014:6017   */\n      0xe0\n        /* \"#utility.yul\":6010:6030   */\n      shl\n        /* \"#utility.yul\":6007:6008   */\n      0x00\n        /* \"#utility.yul\":6000:6031   */\n      mstore\n        /* \"#utility.yul\":6054:6058   */\n      0x22\n        /* \"#utility.yul\":6051:6052   */\n      0x04\n        /* \"#utility.yul\":6044:6059   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":5936:6097   */\n    tag_274:\n      pop\n        /* \"#utility.yul\":5723:6103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6108:6235   */\n    tag_233:\n        /* \"#utility.yul\":6169:6179   */\n      0x4e487b71\n        /* \"#utility.yul\":6164:6167   */\n      0xe0\n        /* \"#utility.yul\":6160:6180   */\n      shl\n        /* \"#utility.yul\":6157:6158   */\n      0x00\n        /* \"#utility.yul\":6150:6181   */\n      mstore\n        /* \"#utility.yul\":6200:6204   */\n      0x41\n        /* \"#utility.yul\":6197:6198   */\n      0x04\n        /* \"#utility.yul\":6190:6205   */\n      mstore\n        /* \"#utility.yul\":6224:6228   */\n      0x24\n        /* \"#utility.yul\":6221:6222   */\n      0x00\n        /* \"#utility.yul\":6214:6229   */\n      revert\n        /* \"#utility.yul\":6240:6371   */\n    tag_247:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":6314:6346   */\n      dup2\n      and\n        /* \"#utility.yul\":6304:6347   */\n      dup2\n      eq\n        /* \"#utility.yul\":6294:6365   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":6361:6362   */\n      0x00\n        /* \"#utility.yul\":6358:6359   */\n      dup1\n        /* \"#utility.yul\":6351:6363   */\n      revert\n        /* \"#utility.yul\":6294:6365   */\n    tag_277:\n        /* \"#utility.yul\":6240:6371   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200724ed5c4f4339f9517ba7bfe9ba7865470ee7b602f0e642f3f82f3a1232000064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_683": {
									"entryPoint": null,
									"id": 683,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_692": {
									"entryPoint": null,
									"id": 692,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:5"
															},
															"nodeType": "YulIf",
															"src": "88:55:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:5"
															},
															"nodeType": "YulIf",
															"src": "221:36:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:5"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:5"
															},
															"nodeType": "YulIf",
															"src": "404:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:5"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:5"
															},
															"nodeType": "YulIf",
															"src": "566:53:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:5"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:5"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:5",
																"statements": []
															},
															"src": "647:133:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:5"
															},
															"nodeType": "YulIf",
															"src": "789:80:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:5",
														"type": ""
													}
												],
												"src": "14:885:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:5"
															},
															"nodeType": "YulIf",
															"src": "1032:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:5"
															},
															"nodeType": "YulIf",
															"src": "1169:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:5"
															},
															"nodeType": "YulIf",
															"src": "1342:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:5",
														"type": ""
													}
												],
												"src": "904:562:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:5"
															},
															"nodeType": "YulIf",
															"src": "1614:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:5"
															},
															"nodeType": "YulIf",
															"src": "1684:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:5",
														"type": ""
													}
												],
												"src": "1471:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000f7e38038062000f7e8339810160408190526200003491620001c9565b8151620000499060029060208501906200006c565b5080516200005f9060039060208401906200006c565b5050600080555062000286565b8280546200007a9062000233565b90600052602060002090601f0160209004810192826200009e5760008555620000e9565b82601f10620000b957805160ff1916838001178555620000e9565b82800160010185558215620000e9579182015b82811115620000e9578251825591602001919060010190620000cc565b50620000f7929150620000fb565b5090565b5b80821115620000f75760008155600101620000fc565b600082601f8301126200012457600080fd5b81516001600160401b038082111562000141576200014162000270565b604051601f8301601f19908116603f011681019082821181831017156200016c576200016c62000270565b816040528381526020925086838588010111156200018957600080fd5b600091505b83821015620001ad57858201830151818301840152908201906200018e565b83821115620001bf5760008385830101525b9695505050505050565b60008060408385031215620001dd57600080fd5b82516001600160401b0380821115620001f557600080fd5b620002038683870162000112565b935060208501519150808211156200021a57600080fd5b50620002298582860162000112565b9150509250929050565b600181811c908216806200024857607f821691505b602082108114156200026a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610ce880620002966000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d6578063b88d4fde146101e9578063c87b56dd146101fc578063e985e9c51461020f57600080fd5b80636352211e146101a857806370a08231146101bb57806395d89b41146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806318160ddd1461016c57806323b872dd1461018257806342842e0e1461019557600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610b1e565b61024b565b60405190151581526020015b60405180910390f35b61011f61029d565b60405161010e9190610c09565b61013f61013a366004610b58565b61032f565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610af4565b610373565b005b600154600054035b60405190815260200161010e565b61016a6101903660046109a0565b610413565b61016a6101a33660046109a0565b6105a4565b61013f6101b6366004610b58565b6105c4565b6101746101c9366004610952565b6105cf565b61011f61061e565b61016a6101e4366004610ab8565b61062d565b61016a6101f73660046109dc565b610699565b61011f61020a366004610b58565b6106e3565b61010261021d36600461096d565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061027c57506380ac58cd60e01b6001600160e01b03198316145b806102975750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600280546102ac90610c48565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610c48565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061033a82610775565b610357576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061037e826105c4565b9050336001600160a01b038216146103b75761039a813361021d565b6103b7576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061041e8261079c565b9050836001600160a01b0316816001600160a01b0316146104515760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761049e57610481863361021d565b61049e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166104c557604051633a954ecd60e21b815260040160405180910390fd5b80156104d057600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040902055600160e11b831661055b57600184016000818152600460205260409020546105595760005481146105595760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6105bf83838360405180602001604052806000815250610699565b505050565b60006102978261079c565b60006001600160a01b0382166105f8576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546102ac90610c48565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106a4848484610413565b6001600160a01b0383163b156106dd576106c0848484846107fd565b6106dd576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606106ee82610775565b61070b57604051630a14c4b560e41b815260040160405180910390fd5b600061072260408051602081019091526000815290565b9050805160001415610743576040518060200160405280600081525061076e565b8061074d846108f4565b60405160200161075e929190610b9d565b6040516020818303038152906040525b9392505050565b6000805482108015610297575050600090815260046020526040902054600160e01b161590565b6000816000548110156107e457600081815260046020526040902054600160e01b81166107e2575b8061076e5750600019016000818152600460205260409020546107c4565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610832903390899088908890600401610bcc565b602060405180830381600087803b15801561084c57600080fd5b505af192505050801561087c575060408051601f3d908101601f1916820190925261087991810190610b3b565b60015b6108d7573d8080156108aa576040519150601f19603f3d011682016040523d82523d6000602084013e6108af565b606091505b5080516108cf576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080019081905280825b600183039250600a81066030018353600a90048061091f57610924565b610902565b50819003601f19909101908152919050565b80356001600160a01b038116811461094d57600080fd5b919050565b60006020828403121561096457600080fd5b61076e82610936565b6000806040838503121561098057600080fd5b61098983610936565b915061099760208401610936565b90509250929050565b6000806000606084860312156109b557600080fd5b6109be84610936565b92506109cc60208501610936565b9150604084013590509250925092565b600080600080608085870312156109f257600080fd5b6109fb85610936565b9350610a0960208601610936565b925060408501359150606085013567ffffffffffffffff80821115610a2d57600080fd5b818701915087601f830112610a4157600080fd5b813581811115610a5357610a53610c83565b604051601f8201601f19908116603f01168101908382118183101715610a7b57610a7b610c83565b816040528281528a6020848701011115610a9457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610acb57600080fd5b610ad483610936565b915060208301358015158114610ae957600080fd5b809150509250929050565b60008060408385031215610b0757600080fd5b610b1083610936565b946020939093013593505050565b600060208284031215610b3057600080fd5b813561076e81610c99565b600060208284031215610b4d57600080fd5b815161076e81610c99565b600060208284031215610b6a57600080fd5b5035919050565b60008151808452610b89816020860160208601610c1c565b601f01601f19169290920160200192915050565b60008351610baf818460208801610c1c565b835190830190610bc3818360208801610c1c565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610bff90830184610b71565b9695505050505050565b60208152600061076e6020830184610b71565b60005b83811015610c37578181015183820152602001610c1f565b838111156106dd5750506000910152565b600181811c90821680610c5c57607f821691505b60208210811415610c7d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610caf57600080fd5b5056fea26469706673582212200724ed5c4f4339f9517ba7bfe9ba7865470ee7b602f0e642f3f82f3a1232000064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xF7E CODESIZE SUB DUP1 PUSH3 0xF7E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C9 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x6C JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x6C JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SSTORE POP PUSH3 0x286 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7A SWAP1 PUSH3 0x233 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xCC JUMP JUMPDEST POP PUSH3 0xF7 SWAP3 SWAP2 POP PUSH3 0xFB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xFC JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x141 JUMPI PUSH3 0x141 PUSH3 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x16C JUMPI PUSH3 0x16C PUSH3 0x270 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1AD JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18E JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BF JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x203 DUP7 DUP4 DUP8 ADD PUSH3 0x112 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x229 DUP6 DUP3 DUP7 ADD PUSH3 0x112 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x248 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x26A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xCE8 DUP1 PUSH3 0x296 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x11F PUSH2 0x61E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x27C JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x297 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC48 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xC48 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A DUP3 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x5C4 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x3B7 JUMPI PUSH2 0x39A DUP2 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E DUP3 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x49E JUMPI PUSH2 0x481 DUP7 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP4 AND PUSH2 0x55B JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x559 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x559 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5BF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x699 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297 DUP3 PUSH2 0x79C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC48 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6A4 DUP5 DUP5 DUP5 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x6DD JUMPI PUSH2 0x6C0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x6DD JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6EE DUP3 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x722 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x76E JUMP JUMPDEST DUP1 PUSH2 0x74D DUP5 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x75E SWAP3 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x297 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH2 0x7E2 JUMPI JUMPDEST DUP1 PUSH2 0x76E JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7C4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x832 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x87C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x879 SWAP2 DUP2 ADD SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x8D7 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x8CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 ADD SWAP1 DUP2 SWAP1 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x91F JUMPI PUSH2 0x924 JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76E DUP3 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x989 DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP2 POP PUSH2 0x997 PUSH1 0x20 DUP5 ADD PUSH2 0x936 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9BE DUP5 PUSH2 0x936 JUMP JUMPDEST SWAP3 POP PUSH2 0x9CC PUSH1 0x20 DUP6 ADD PUSH2 0x936 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FB DUP6 PUSH2 0x936 JUMP JUMPDEST SWAP4 POP PUSH2 0xA09 PUSH1 0x20 DUP7 ADD PUSH2 0x936 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xA53 JUMPI PUSH2 0xA53 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xA7B JUMPI PUSH2 0xA7B PUSH2 0xC83 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xA94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAD4 DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB10 DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x76E DUP2 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x76E DUP2 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xB89 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xBAF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC1C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xBC3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC1C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xBFF SWAP1 DUP4 ADD DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x76E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC37 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC1F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6DD JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC5C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC7D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0x24 0xED 0x5C 0x4F NUMBER CODECOPY 0xF9 MLOAD PUSH28 0xA7BFE9BA7865470EE7B602F0E642F3F82F3A1232000064736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1089:41023:3:-:0;;;5201:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5268:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;5292:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;5751:7:3;5320:31;;-1:-1:-1;1089:41023:3;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1089:41023:3;;;-1:-1:-1;1089:41023:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:5;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:5;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:5;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:5:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:5;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;1089:41023:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1553": {
									"entryPoint": null,
									"id": 1553,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_950": {
									"entryPoint": null,
									"id": 950,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1540": {
									"entryPoint": null,
									"id": 1540,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1608": {
									"entryPoint": 2045,
									"id": 1608,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1292": {
									"entryPoint": 1909,
									"id": 1292,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_2114": {
									"entryPoint": null,
									"id": 2114,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_1325": {
									"entryPoint": null,
									"id": 1325,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_1306": {
									"entryPoint": null,
									"id": 1306,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_2157": {
									"entryPoint": null,
									"id": 2157,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2147": {
									"entryPoint": null,
									"id": 2147,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_1144": {
									"entryPoint": null,
									"id": 1144,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_1078": {
									"entryPoint": 1948,
									"id": 1078,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_692": {
									"entryPoint": null,
									"id": 692,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_2167": {
									"entryPoint": 2292,
									"id": 2167,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_1199": {
									"entryPoint": 883,
									"id": 1199,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_765": {
									"entryPoint": 1487,
									"id": 765,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1222": {
									"entryPoint": 815,
									"id": 1222,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1266": {
									"entryPoint": null,
									"id": 1266,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_888": {
									"entryPoint": 669,
									"id": 888,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_970": {
									"entryPoint": 1476,
									"id": 970,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1489": {
									"entryPoint": 1444,
									"id": 1489,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1527": {
									"entryPoint": 1689,
									"id": 1527,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1248": {
									"entryPoint": 1581,
									"id": 1248,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_878": {
									"entryPoint": 587,
									"id": 878,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_898": {
									"entryPoint": 1566,
									"id": 898,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_941": {
									"entryPoint": 1763,
									"id": 941,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_717": {
									"entryPoint": null,
									"id": 717,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1470": {
									"entryPoint": 1043,
									"id": 1470,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 2875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 2929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2973,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3020,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3100,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 3203,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6373:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:5"
															},
															"nodeType": "YulIf",
															"src": "111:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:5"
															},
															"nodeType": "YulIf",
															"src": "272:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:5",
														"type": ""
													}
												],
												"src": "192:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:5"
															},
															"nodeType": "YulIf",
															"src": "480:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:5",
														"type": ""
													}
												],
												"src": "383:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:5"
															},
															"nodeType": "YulIf",
															"src": "762:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:5",
														"type": ""
													}
												],
												"src": "648:328:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1111:1008:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1158:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1170:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1160:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1160:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1160:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1132:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1141:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1128:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1128:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1153:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1124:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:33:5"
															},
															"nodeType": "YulIf",
															"src": "1121:53:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1183:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1193:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1183:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1231:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1264:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1275:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1260:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1260:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1241:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1241:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1288:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1315:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1326:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1298:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1298:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1288:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1339:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1370:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1381:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1366:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1366:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1353:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:32:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1343:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1394:28:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1404:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1398:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1437:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1434:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1434:14:5"
															},
															"nodeType": "YulIf",
															"src": "1431:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1474:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1488:9:5"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1499:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1484:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:22:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1478:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1554:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1563:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1566:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1556:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1556:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1556:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1533:2:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1537:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1529:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1529:13:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1544:7:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1525:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:35:5"
															},
															"nodeType": "YulIf",
															"src": "1515:55:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1579:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1589:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:16:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1583:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1628:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1630:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1630:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1630:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1620:2:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1624:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1617:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:10:5"
															},
															"nodeType": "YulIf",
															"src": "1614:36:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1659:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1673:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:7:5"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1663:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1685:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1705:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1699:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1699:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1689:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1717:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1739:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1763:2:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1767:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1759:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1759:13:5"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1774:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1755:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1755:22:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1779:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1751:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1751:31:5"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1784:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1747:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1747:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1735:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1735:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1721:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1847:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1849:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1849:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1849:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1806:10:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1818:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1803:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1803:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1826:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1838:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1823:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1823:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1800:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:46:5"
															},
															"nodeType": "YulIf",
															"src": "1797:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1885:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1889:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1878:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1878:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1916:6:5"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1924:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1909:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1909:18:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1909:18:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1973:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1982:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1985:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1975:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1975:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1975:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1950:2:5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1954:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1946:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1946:11:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1959:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1942:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1942:20:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1964:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1939:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1939:33:5"
															},
															"nodeType": "YulIf",
															"src": "1936:53:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2015:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2023:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2011:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2011:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2032:2:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2036:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:11:5"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2041:2:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1998:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1998:46:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2068:6:5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2076:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2064:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2064:15:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2081:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2060:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2060:24:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2086:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2053:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2053:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2053:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2097:16:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2107:6:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2097:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1053:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1064:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1076:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1084:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1092:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1100:6:5",
														"type": ""
													}
												],
												"src": "981:1138:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2254:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2263:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2266:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2256:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2256:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2256:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2229:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2238:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2225:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2250:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2221:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:32:5"
															},
															"nodeType": "YulIf",
															"src": "2218:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2279:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2308:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2289:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2327:45:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2357:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2368:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2340:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2340:32:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2331:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2425:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2434:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2427:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2427:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2427:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2394:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2415:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2408:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2408:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2401:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2401:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2391:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2391:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2384:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2384:40:5"
															},
															"nodeType": "YulIf",
															"src": "2381:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2450:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2460:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2166:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2177:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2189:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2197:6:5",
														"type": ""
													}
												],
												"src": "2124:347:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2563:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2609:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2618:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2621:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2611:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2611:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2611:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2584:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2593:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2580:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2605:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2576:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2576:32:5"
															},
															"nodeType": "YulIf",
															"src": "2573:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2634:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2663:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2644:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2634:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2682:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2709:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2720:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2705:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2705:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2692:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2692:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2521:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2532:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2544:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2552:6:5",
														"type": ""
													}
												],
												"src": "2476:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:176:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2850:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2859:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2862:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2852:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2852:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2852:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2825:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2834:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2821:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2821:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2846:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2817:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:32:5"
															},
															"nodeType": "YulIf",
															"src": "2814:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2875:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2901:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2888:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2888:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2879:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2944:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2920:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2920:30:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2959:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2969:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2959:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2770:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2781:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2793:6:5",
														"type": ""
													}
												],
												"src": "2735:245:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:169:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3111:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3120:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3123:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3113:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3113:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3113:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:32:5"
															},
															"nodeType": "YulIf",
															"src": "3075:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3136:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3155:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3149:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3140:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3174:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3174:30:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3213:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3223:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3213:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3031:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3042:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3054:6:5",
														"type": ""
													}
												],
												"src": "2985:249:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3309:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3355:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3364:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3367:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3357:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3357:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3357:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3330:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3339:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3326:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3326:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3351:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3322:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3322:32:5"
															},
															"nodeType": "YulIf",
															"src": "3319:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3380:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3403:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3390:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3390:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3380:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3275:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3286:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3298:6:5",
														"type": ""
													}
												],
												"src": "3239:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3473:208:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3483:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3503:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3497:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:12:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3487:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3525:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3530:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3518:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3518:19:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3572:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3568:16:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3590:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3595:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3586:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3586:14:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3602:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3546:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:63:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3546:63:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3618:57:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3633:3:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3646:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3654:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3642:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3642:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3663:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3659:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3659:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3638:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3638:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3629:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3629:39:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3625:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3625:50:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3618:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3450:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3457:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3465:3:5",
														"type": ""
													}
												],
												"src": "3424:257:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3873:283:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3883:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3903:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3897:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3897:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3887:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3945:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3953:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3941:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3941:17:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3960:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3965:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3919:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:53:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3919:53:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3981:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3998:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4003:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3994:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3994:16:5"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "3985:5:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4019:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4041:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4035:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4035:13:5"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "4023:8:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4083:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4091:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4079:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4079:17:5"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4098:5:5"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4105:8:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4057:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4057:57:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4123:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4134:5:5"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4141:8:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4130:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:20:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4123:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3841:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3846:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3854:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3865:3:5",
														"type": ""
													}
												],
												"src": "3686:470:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4262:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4272:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4284:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4295:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4280:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4280:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4272:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4314:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4329:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4345:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4350:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4341:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4341:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4354:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4337:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4337:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4325:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4325:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4307:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4307:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4307:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4231:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4242:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4253:4:5",
														"type": ""
													}
												],
												"src": "4161:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4572:285:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4582:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4600:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4605:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4596:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4596:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4609:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4592:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4592:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4586:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4627:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4642:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4650:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4620:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4620:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4620:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4674:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4685:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4670:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4670:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4694:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4702:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4690:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4690:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4663:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4663:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4726:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4737:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4722:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4722:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4742:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4715:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4715:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4715:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4769:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4780:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4765:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4765:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4785:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4758:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4758:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4758:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4798:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4823:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4835:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4846:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4831:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4831:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4806:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:45:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4798:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4517:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4528:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4536:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4544:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4552:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4563:4:5",
														"type": ""
													}
												],
												"src": "4369:488:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4957:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4967:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4979:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4990:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4975:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4967:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5009:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5034:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5027:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5027:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5020:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5020:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5002:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5002:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4926:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4937:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4948:4:5",
														"type": ""
													}
												],
												"src": "4862:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5175:98:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5192:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5203:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5185:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5185:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5185:21:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5215:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5240:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5252:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5263:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5248:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5248:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5223:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5223:44:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5215:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5144:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5155:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5166:4:5",
														"type": ""
													}
												],
												"src": "5054:219:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5379:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5389:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5401:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5412:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5397:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5397:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5389:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5431:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5442:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5424:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5424:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5424:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5348:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5359:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5370:4:5",
														"type": ""
													}
												],
												"src": "5278:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5513:205:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5523:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5532:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5527:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5592:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5617:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5622:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5613:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5613:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "5636:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5641:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5632:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5632:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5626:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5626:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5606:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5606:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5606:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5553:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5556:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5550:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5564:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5566:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5575:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5578:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5571:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5571:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5566:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5546:3:5",
																"statements": []
															},
															"src": "5542:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5681:31:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5694:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5699:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5690:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5690:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5708:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5683:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5683:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5683:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5670:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5673:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5667:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5667:13:5"
															},
															"nodeType": "YulIf",
															"src": "5664:48:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5491:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5496:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5501:6:5",
														"type": ""
													}
												],
												"src": "5460:258:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5778:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5788:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5802:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5798:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5798:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5788:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5819:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5849:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5855:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5845:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5845:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5823:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5896:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5898:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5912:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5920:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5908:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5908:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5898:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5876:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5869:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5869:26:5"
															},
															"nodeType": "YulIf",
															"src": "5866:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5986:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6007:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6014:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6019:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6010:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6010:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6000:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6000:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6000:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6051:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6054:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6044:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6044:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6044:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6079:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6082:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6072:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6072:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6072:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5942:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5965:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5973:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5962:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5962:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5939:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5939:38:5"
															},
															"nodeType": "YulIf",
															"src": "5936:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5758:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5767:6:5",
														"type": ""
													}
												],
												"src": "5723:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6140:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6157:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6164:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6169:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6160:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6160:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6150:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6150:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6150:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6197:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6200:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6190:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6190:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6190:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6221:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6224:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6214:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6214:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6214:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "6108:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6284:87:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6349:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6358:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6361:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6351:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6351:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6351:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6307:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6318:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6329:3:5",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6334:10:5",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6325:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6325:20:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6314:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6314:32:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6304:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6304:43:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6297:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6297:51:5"
															},
															"nodeType": "YulIf",
															"src": "6294:71:5"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6273:5:5",
														"type": ""
													}
												],
												"src": "6240:131:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d6578063b88d4fde146101e9578063c87b56dd146101fc578063e985e9c51461020f57600080fd5b80636352211e146101a857806370a08231146101bb57806395d89b41146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806318160ddd1461016c57806323b872dd1461018257806342842e0e1461019557600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610b1e565b61024b565b60405190151581526020015b60405180910390f35b61011f61029d565b60405161010e9190610c09565b61013f61013a366004610b58565b61032f565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610af4565b610373565b005b600154600054035b60405190815260200161010e565b61016a6101903660046109a0565b610413565b61016a6101a33660046109a0565b6105a4565b61013f6101b6366004610b58565b6105c4565b6101746101c9366004610952565b6105cf565b61011f61061e565b61016a6101e4366004610ab8565b61062d565b61016a6101f73660046109dc565b610699565b61011f61020a366004610b58565b6106e3565b61010261021d36600461096d565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061027c57506380ac58cd60e01b6001600160e01b03198316145b806102975750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600280546102ac90610c48565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610c48565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061033a82610775565b610357576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061037e826105c4565b9050336001600160a01b038216146103b75761039a813361021d565b6103b7576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061041e8261079c565b9050836001600160a01b0316816001600160a01b0316146104515760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761049e57610481863361021d565b61049e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166104c557604051633a954ecd60e21b815260040160405180910390fd5b80156104d057600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040902055600160e11b831661055b57600184016000818152600460205260409020546105595760005481146105595760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6105bf83838360405180602001604052806000815250610699565b505050565b60006102978261079c565b60006001600160a01b0382166105f8576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546102ac90610c48565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106a4848484610413565b6001600160a01b0383163b156106dd576106c0848484846107fd565b6106dd576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606106ee82610775565b61070b57604051630a14c4b560e41b815260040160405180910390fd5b600061072260408051602081019091526000815290565b9050805160001415610743576040518060200160405280600081525061076e565b8061074d846108f4565b60405160200161075e929190610b9d565b6040516020818303038152906040525b9392505050565b6000805482108015610297575050600090815260046020526040902054600160e01b161590565b6000816000548110156107e457600081815260046020526040902054600160e01b81166107e2575b8061076e5750600019016000818152600460205260409020546107c4565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610832903390899088908890600401610bcc565b602060405180830381600087803b15801561084c57600080fd5b505af192505050801561087c575060408051601f3d908101601f1916820190925261087991810190610b3b565b60015b6108d7573d8080156108aa576040519150601f19603f3d011682016040523d82523d6000602084013e6108af565b606091505b5080516108cf576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080019081905280825b600183039250600a81066030018353600a90048061091f57610924565b610902565b50819003601f19909101908152919050565b80356001600160a01b038116811461094d57600080fd5b919050565b60006020828403121561096457600080fd5b61076e82610936565b6000806040838503121561098057600080fd5b61098983610936565b915061099760208401610936565b90509250929050565b6000806000606084860312156109b557600080fd5b6109be84610936565b92506109cc60208501610936565b9150604084013590509250925092565b600080600080608085870312156109f257600080fd5b6109fb85610936565b9350610a0960208601610936565b925060408501359150606085013567ffffffffffffffff80821115610a2d57600080fd5b818701915087601f830112610a4157600080fd5b813581811115610a5357610a53610c83565b604051601f8201601f19908116603f01168101908382118183101715610a7b57610a7b610c83565b816040528281528a6020848701011115610a9457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610acb57600080fd5b610ad483610936565b915060208301358015158114610ae957600080fd5b809150509250929050565b60008060408385031215610b0757600080fd5b610b1083610936565b946020939093013593505050565b600060208284031215610b3057600080fd5b813561076e81610c99565b600060208284031215610b4d57600080fd5b815161076e81610c99565b600060208284031215610b6a57600080fd5b5035919050565b60008151808452610b89816020860160208601610c1c565b601f01601f19169290920160200192915050565b60008351610baf818460208801610c1c565b835190830190610bc3818360208801610c1c565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610bff90830184610b71565b9695505050505050565b60208152600061076e6020830184610b71565b60005b83811015610c37578181015183820152602001610c1f565b838111156106dd5750506000910152565b600181811c90821680610c5c57607f821691505b60208210811415610c7d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610caf57600080fd5b5056fea26469706673582212200724ed5c4f4339f9517ba7bfe9ba7865470ee7b602f0e642f3f82f3a1232000064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x11F PUSH2 0x61E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x27C JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x297 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC48 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xC48 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A DUP3 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x5C4 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x3B7 JUMPI PUSH2 0x39A DUP2 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E DUP3 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x49E JUMPI PUSH2 0x481 DUP7 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP4 AND PUSH2 0x55B JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x559 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x559 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5BF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x699 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297 DUP3 PUSH2 0x79C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC48 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6A4 DUP5 DUP5 DUP5 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x6DD JUMPI PUSH2 0x6C0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x6DD JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6EE DUP3 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x722 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x76E JUMP JUMPDEST DUP1 PUSH2 0x74D DUP5 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x75E SWAP3 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x297 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH2 0x7E2 JUMPI JUMPDEST DUP1 PUSH2 0x76E JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7C4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x832 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x87C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x879 SWAP2 DUP2 ADD SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x8D7 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x8CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 ADD SWAP1 DUP2 SWAP1 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x91F JUMPI PUSH2 0x924 JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76E DUP3 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x989 DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP2 POP PUSH2 0x997 PUSH1 0x20 DUP5 ADD PUSH2 0x936 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9BE DUP5 PUSH2 0x936 JUMP JUMPDEST SWAP3 POP PUSH2 0x9CC PUSH1 0x20 DUP6 ADD PUSH2 0x936 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FB DUP6 PUSH2 0x936 JUMP JUMPDEST SWAP4 POP PUSH2 0xA09 PUSH1 0x20 DUP7 ADD PUSH2 0x936 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xA53 JUMPI PUSH2 0xA53 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xA7B JUMPI PUSH2 0xA7B PUSH2 0xC83 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xA94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAD4 DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB10 DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x76E DUP2 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x76E DUP2 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xB89 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xBAF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC1C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xBC3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC1C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xBFF SWAP1 DUP4 ADD DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x76E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC37 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC1F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6DD JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC5C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC7D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0x24 0xED 0x5C 0x4F NUMBER CODECOPY 0xF9 MLOAD PUSH28 0xA7BFE9BA7865470EE7B602F0E642F3F82F3A1232000064736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1089:41023:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9526:639;;;;;;:::i;:::-;;:::i;:::-;;;5027:14:5;;5020:22;5002:41;;4990:2;4975:18;9526:639:3;;;;;;;;10428:100;;;:::i;:::-;;;;;;;:::i;16911:218::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4325:32:5;;;4307:51;;4295:2;4280:18;16911:218:3;4161:203:5;16352:400:3;;;;;;:::i;:::-;;:::i;:::-;;6179:323;6453:12;;6240:7;6437:13;:28;6179:323;;;5424:25:5;;;5412:2;5397:18;6179:323:3;5278:177:5;20550:2817:3;;;;;;:::i;:::-;;:::i;23463:185::-;;;;;;:::i;:::-;;:::i;11821:152::-;;;;;;:::i;:::-;;:::i;7363:233::-;;;;;;:::i;:::-;;:::i;10604:104::-;;;:::i;17469:234::-;;;;;;:::i;:::-;;:::i;24246:399::-;;;;;;:::i;:::-;;:::i;10814:318::-;;;;;;:::i;:::-;;:::i;17860:164::-;;;;;;:::i;:::-;-1:-1:-1;;;;;17981:25:3;;;17957:4;17981:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17860:164;9526:639;9611:4;-1:-1:-1;;;;;;;;;9935:25:3;;;;:102;;-1:-1:-1;;;;;;;;;;10012:25:3;;;9935:102;:179;;;-1:-1:-1;;;;;;;;;;10089:25:3;;;9935:179;9915:199;9526:639;-1:-1:-1;;9526:639:3:o;10428:100::-;10482:13;10515:5;10508:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10428:100;:::o;16911:218::-;16987:7;17012:16;17020:7;17012;:16::i;:::-;17007:64;;17037:34;;-1:-1:-1;;;17037:34:3;;;;;;;;;;;17007:64;-1:-1:-1;17091:24:3;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;17091:30:3;;16911:218::o;16352:400::-;16433:13;16449:16;16457:7;16449;:16::i;:::-;16433:32;-1:-1:-1;40407:10:3;-1:-1:-1;;;;;16482:28:3;;;16478:175;;16530:44;16547:5;40407:10;17860:164;:::i;16530:44::-;16525:128;;16602:35;;-1:-1:-1;;;16602:35:3;;;;;;;;;;;16525:128;16665:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;16665:35:3;-1:-1:-1;;;;;16665:35:3;;;;;;;;;16716:28;;16665:24;;16716:28;;;;;;;16422:330;16352:400;;:::o;20550:2817::-;20684:27;20714;20733:7;20714:18;:27::i;:::-;20684:57;;20799:4;-1:-1:-1;;;;;20758:45:3;20774:19;-1:-1:-1;;;;;20758:45:3;;20754:86;;20812:28;;-1:-1:-1;;;20812:28:3;;;;;;;;;;;20754:86;20854:27;19658:24;;;:15;:24;;;;;19886:26;;40407:10;19283:30;;;-1:-1:-1;;;;;18976:28:3;;19261:20;;;19258:56;21040:180;;21133:43;21150:4;40407:10;17860:164;:::i;21133:43::-;21128:92;;21185:35;;-1:-1:-1;;;21185:35:3;;;;;;;;;;;21128:92;-1:-1:-1;;;;;21237:16:3;;21233:52;;21262:23;;-1:-1:-1;;;21262:23:3;;;;;;;;;;;21233:52;21434:15;21431:160;;;21574:1;21553:19;21546:30;21431:160;-1:-1:-1;;;;;21971:24:3;;;;;;;:18;:24;;;;;;21969:26;;-1:-1:-1;;21969:26:3;;;22040:22;;;;;;;;;22038:24;;-1:-1:-1;22038:24:3;;;15210:11;15185:23;15181:41;15168:63;-1:-1:-1;;;15168:63:3;22333:26;;;;:17;:26;;;;;:175;-1:-1:-1;;;22628:47:3;;22624:627;;22733:1;22723:11;;22701:19;22856:30;;;:17;:30;;;;;;22852:384;;22994:13;;22979:11;:28;22975:242;;23141:30;;;;:17;:30;;;;;:52;;;22975:242;22682:569;22624:627;23298:7;23294:2;-1:-1:-1;;;;;23279:27:3;23288:4;-1:-1:-1;;;;;23279:27:3;;;;;;;;;;;20673:2694;;;20550:2817;;;:::o;23463:185::-;23601:39;23618:4;23624:2;23628:7;23601:39;;;;;;;;;;;;:16;:39::i;:::-;23463:185;;;:::o;11821:152::-;11893:7;11936:27;11955:7;11936:18;:27::i;7363:233::-;7435:7;-1:-1:-1;;;;;7459:19:3;;7455:60;;7487:28;;-1:-1:-1;;;7487:28:3;;;;;;;;;;;7455:60;-1:-1:-1;;;;;;7533:25:3;;;;;:18;:25;;;;;;1522:13;7533:55;;7363:233::o;10604:104::-;10660:13;10693:7;10686:14;;;;;:::i;17469:234::-;40407:10;17564:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;17564:49:3;;;;;;;;;;;;:60;;-1:-1:-1;;17564:60:3;;;;;;;;;;17640:55;;5002:41:5;;;17564:49:3;;40407:10;17640:55;;4975:18:5;17640:55:3;;;;;;;17469:234;;:::o;24246:399::-;24413:31;24426:4;24432:2;24436:7;24413:12;:31::i;:::-;-1:-1:-1;;;;;24459:14:3;;;:19;24455:183;;24498:56;24529:4;24535:2;24539:7;24548:5;24498:30;:56::i;:::-;24493:145;;24582:40;;-1:-1:-1;;;24582:40:3;;;;;;;;;;;24493:145;24246:399;;;;:::o;10814:318::-;10887:13;10918:16;10926:7;10918;:16::i;:::-;10913:59;;10943:29;;-1:-1:-1;;;10943:29:3;;;;;;;;;;;10913:59;10985:21;11009:10;11461:9;;;;;;;;;-1:-1:-1;11461:9:3;;;11384:94;11009:10;10985:34;;11043:7;11037:21;11062:1;11037:26;;:87;;;;;;;;;;;;;;;;;11090:7;11099:18;11109:7;11099:9;:18::i;:::-;11073:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11037:87;11030:94;10814:318;-1:-1:-1;;;10814:318:3:o;18282:282::-;18347:4;18437:13;;18427:7;:23;18384:153;;;;-1:-1:-1;;18488:26:3;;;;:17;:26;;;;;;-1:-1:-1;;;18488:44:3;:49;;18282:282::o;12976:1275::-;13043:7;13078;13180:13;;13173:4;:20;13169:1015;;;13218:14;13235:23;;;:17;:23;;;;;;-1:-1:-1;;;13324:24:3;;13320:845;;13989:113;13996:11;13989:113;;-1:-1:-1;;;14067:6:3;14049:25;;;;:17;:25;;;;;;13989:113;;13320:845;13195:989;13169:1015;14212:31;;-1:-1:-1;;;14212:31:3;;;;;;;;;;;26729:716;26913:88;;-1:-1:-1;;;26913:88:3;;26892:4;;-1:-1:-1;;;;;26913:45:3;;;;;:88;;40407:10;;26980:4;;26986:7;;26995:5;;26913:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26913:88:3;;;;;;;;-1:-1:-1;;26913:88:3;;;;;;;;;;;;:::i;:::-;;;26909:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27196:13:3;;27192:235;;27242:40;;-1:-1:-1;;;27242:40:3;;;;;;;;;;;27192:235;27385:6;27379:13;27370:6;27366:2;27362:15;27355:38;26909:529;-1:-1:-1;;;;;;27072:64:3;-1:-1:-1;;;27072:64:3;;-1:-1:-1;26729:716:3;;;;;;:::o;40527:1582::-;41011:4;41005:11;;41018:4;41001:22;41097:17;;;;41001:22;41455:5;41437:428;41503:1;41498:3;41494:11;41487:18;;41674:2;41668:4;41664:13;41660:2;41656:22;41651:3;41643:36;41768:2;41758:13;;;41825:25;;41843:5;;41825:25;41437:428;;;-1:-1:-1;41895:13:3;;;-1:-1:-1;;42010:14:3;;;42072:19;;;42010:14;40527:1582;-1:-1:-1;40527:1582:3:o;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:1138::-;1076:6;1084;1092;1100;1153:3;1141:9;1132:7;1128:23;1124:33;1121:53;;;1170:1;1167;1160:12;1121:53;1193:29;1212:9;1193:29;:::i;:::-;1183:39;;1241:38;1275:2;1264:9;1260:18;1241:38;:::i;:::-;1231:48;;1326:2;1315:9;1311:18;1298:32;1288:42;;1381:2;1370:9;1366:18;1353:32;1404:18;1445:2;1437:6;1434:14;1431:34;;;1461:1;1458;1451:12;1431:34;1499:6;1488:9;1484:22;1474:32;;1544:7;1537:4;1533:2;1529:13;1525:27;1515:55;;1566:1;1563;1556:12;1515:55;1602:2;1589:16;1624:2;1620;1617:10;1614:36;;;1630:18;;:::i;:::-;1705:2;1699:9;1673:2;1759:13;;-1:-1:-1;;1755:22:5;;;1779:2;1751:31;1747:40;1735:53;;;1803:18;;;1823:22;;;1800:46;1797:72;;;1849:18;;:::i;:::-;1889:10;1885:2;1878:22;1924:2;1916:6;1909:18;1964:7;1959:2;1954;1950;1946:11;1942:20;1939:33;1936:53;;;1985:1;1982;1975:12;1936:53;2041:2;2036;2032;2028:11;2023:2;2015:6;2011:15;1998:46;2086:1;2081:2;2076;2068:6;2064:15;2060:24;2053:35;2107:6;2097:16;;;;;;;981:1138;;;;;;;:::o;2124:347::-;2189:6;2197;2250:2;2238:9;2229:7;2225:23;2221:32;2218:52;;;2266:1;2263;2256:12;2218:52;2289:29;2308:9;2289:29;:::i;:::-;2279:39;;2368:2;2357:9;2353:18;2340:32;2415:5;2408:13;2401:21;2394:5;2391:32;2381:60;;2437:1;2434;2427:12;2381:60;2460:5;2450:15;;;2124:347;;;;;:::o;2476:254::-;2544:6;2552;2605:2;2593:9;2584:7;2580:23;2576:32;2573:52;;;2621:1;2618;2611:12;2573:52;2644:29;2663:9;2644:29;:::i;:::-;2634:39;2720:2;2705:18;;;;2692:32;;-1:-1:-1;;;2476:254:5:o;2735:245::-;2793:6;2846:2;2834:9;2825:7;2821:23;2817:32;2814:52;;;2862:1;2859;2852:12;2814:52;2901:9;2888:23;2920:30;2944:5;2920:30;:::i;2985:249::-;3054:6;3107:2;3095:9;3086:7;3082:23;3078:32;3075:52;;;3123:1;3120;3113:12;3075:52;3155:9;3149:16;3174:30;3198:5;3174:30;:::i;3239:180::-;3298:6;3351:2;3339:9;3330:7;3326:23;3322:32;3319:52;;;3367:1;3364;3357:12;3319:52;-1:-1:-1;3390:23:5;;3239:180;-1:-1:-1;3239:180:5:o;3424:257::-;3465:3;3503:5;3497:12;3530:6;3525:3;3518:19;3546:63;3602:6;3595:4;3590:3;3586:14;3579:4;3572:5;3568:16;3546:63;:::i;:::-;3663:2;3642:15;-1:-1:-1;;3638:29:5;3629:39;;;;3670:4;3625:50;;3424:257;-1:-1:-1;;3424:257:5:o;3686:470::-;3865:3;3903:6;3897:13;3919:53;3965:6;3960:3;3953:4;3945:6;3941:17;3919:53;:::i;:::-;4035:13;;3994:16;;;;4057:57;4035:13;3994:16;4091:4;4079:17;;4057:57;:::i;:::-;4130:20;;3686:470;-1:-1:-1;;;;3686:470:5:o;4369:488::-;-1:-1:-1;;;;;4638:15:5;;;4620:34;;4690:15;;4685:2;4670:18;;4663:43;4737:2;4722:18;;4715:34;;;4785:3;4780:2;4765:18;;4758:31;;;4563:4;;4806:45;;4831:19;;4823:6;4806:45;:::i;:::-;4798:53;4369:488;-1:-1:-1;;;;;;4369:488:5:o;5054:219::-;5203:2;5192:9;5185:21;5166:4;5223:44;5263:2;5252:9;5248:18;5240:6;5223:44;:::i;5460:258::-;5532:1;5542:113;5556:6;5553:1;5550:13;5542:113;;;5632:11;;;5626:18;5613:11;;;5606:39;5578:2;5571:10;5542:113;;;5673:6;5670:1;5667:13;5664:48;;;-1:-1:-1;;5708:1:5;5690:16;;5683:27;5460:258::o;5723:380::-;5802:1;5798:12;;;;5845;;;5866:61;;5920:4;5912:6;5908:17;5898:27;;5866:61;5973:2;5965:6;5962:14;5942:18;5939:38;5936:161;;;6019:10;6014:3;6010:20;6007:1;6000:31;6054:4;6051:1;6044:15;6082:4;6079:1;6072:15;5936:161;;5723:380;;;:::o;6108:127::-;6169:10;6164:3;6160:20;6157:1;6150:31;6200:4;6197:1;6190:15;6224:4;6221:1;6214:15;6240:131;-1:-1:-1;;;;;;6314:32:5;;6304:43;;6294:71;;6361:1;6358;6351:12;6294:71;6240:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "660800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2640",
								"getApproved(uint256)": "6925",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26607",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4432",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4337",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedSlotAndAddress(uint256)": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5268,
									"end": 5273,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 5268,
									"end": 5273,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5292,
									"end": 5299,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 5292,
									"end": 5299,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5751,
									"end": 5758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5320,
									"end": 5351,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5320,
									"end": 5351,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200724ed5c4f4339f9517ba7bfe9ba7865470ee7b602f0e642f3f82f3a1232000064736f6c63430008070033",
									".code": [
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "A22CB465"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "A22CB465"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "B88D4FDE"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "C87B56DD"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "E985E9C5"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "42842E0E"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "81812FC"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5027,
											"end": 5041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5041,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5042,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4358,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4358,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4295,
											"end": 4297,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4161,
											"end": 4364,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6240,
											"end": 6247,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6437,
											"end": 6450,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6437,
											"end": 6465,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5424,
											"end": 5449,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5424,
											"end": 5449,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5424,
											"end": 5449,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5414,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5278,
											"end": 5455,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17957,
											"end": 17961,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 17999,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9611,
											"end": 9615,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9935,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 9935,
											"end": 10037,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10012,
											"end": 10037,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10012,
											"end": 10037,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10012,
											"end": 10037,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9935,
											"end": 10037,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 9935,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9935,
											"end": 10114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9935,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 9935,
											"end": 10114,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10089,
											"end": 10114,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10089,
											"end": 10114,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10089,
											"end": 10114,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9935,
											"end": 10114,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 9935,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9915,
											"end": 10114,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10482,
											"end": 10495,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 10515,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16987,
											"end": 16994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17012,
											"end": 17028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 17020,
											"end": 17027,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17012,
											"end": 17019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 17012,
											"end": 17028,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17012,
											"end": 17028,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 17012,
											"end": 17028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17007,
											"end": 17071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 17007,
											"end": 17071,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17007,
											"end": 17071,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 17007,
											"end": 17071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17091,
											"end": 17106,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17091,
											"end": 17121,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17091,
											"end": 17121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17091,
											"end": 17121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16433,
											"end": 16446,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16449,
											"end": 16465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 16457,
											"end": 16464,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16449,
											"end": 16456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 16449,
											"end": 16465,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16449,
											"end": 16465,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 16449,
											"end": 16465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16433,
											"end": 16465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16482,
											"end": 16510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16482,
											"end": 16510,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16482,
											"end": 16510,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 16478,
											"end": 16653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 16478,
											"end": 16653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16530,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 16547,
											"end": 16552,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 16530,
											"end": 16574,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 16530,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16525,
											"end": 16653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 16525,
											"end": 16653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16525,
											"end": 16653,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 16525,
											"end": 16653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16680,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 16422,
											"end": 16752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20684,
											"end": 20711,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 20714,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 20733,
											"end": 20740,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 20714,
											"end": 20732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 20714,
											"end": 20741,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 20714,
											"end": 20741,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 20714,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20684,
											"end": 20741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20684,
											"end": 20741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20799,
											"end": 20803,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20758,
											"end": 20803,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20774,
											"end": 20793,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20758,
											"end": 20803,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 20758,
											"end": 20803,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 20754,
											"end": 20840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 20754,
											"end": 20840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 20754,
											"end": 20840,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 20754,
											"end": 20840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 20854,
											"end": 20881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19658,
											"end": 19673,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 19886,
											"end": 19912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19886,
											"end": 19912,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 19283,
											"end": 19313,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 19283,
											"end": 19313,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 19283,
											"end": 19313,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18976,
											"end": 19004,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 18976,
											"end": 19004,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 19258,
											"end": 19314,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 21040,
											"end": 21220,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 21040,
											"end": 21220,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 21133,
											"end": 21176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 21150,
											"end": 21154,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 21133,
											"end": 21176,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 21133,
											"end": 21176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21128,
											"end": 21220,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 21128,
											"end": 21220,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 21128,
											"end": 21220,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 21128,
											"end": 21220,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21237,
											"end": 21253,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 21237,
											"end": 21253,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21233,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 21233,
											"end": 21285,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 21233,
											"end": 21285,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 21233,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 21434,
											"end": 21449,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 21574,
											"end": 21575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21553,
											"end": 21572,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 21546,
											"end": 21576,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21971,
											"end": 21989,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22038,
											"end": 22062,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 22038,
											"end": 22062,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 22038,
											"end": 22062,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22038,
											"end": 22062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22038,
											"end": 22062,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15210,
											"end": 15221,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 15185,
											"end": 15208,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 15181,
											"end": 15222,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 15168,
											"end": 15231,
											"name": "OR",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15168,
											"end": 15231,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22333,
											"end": 22350,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22333,
											"end": 22508,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22628,
											"end": 22675,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 22628,
											"end": 22675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 22624,
											"end": 23251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 22624,
											"end": 23251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 22733,
											"end": 22734,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 22723,
											"end": 22734,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 22723,
											"end": 22734,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 22701,
											"end": 22720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22856,
											"end": 22873,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22852,
											"end": 23236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 22852,
											"end": 23236,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 22994,
											"end": 23007,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 22994,
											"end": 23007,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 22979,
											"end": 22990,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 22979,
											"end": 23007,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 22975,
											"end": 23217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 22975,
											"end": 23217,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23141,
											"end": 23158,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 23141,
											"end": 23193,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 23141,
											"end": 23193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23141,
											"end": 23193,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 22975,
											"end": 23217,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 22975,
											"end": 23217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 22682,
											"end": 23251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 22624,
											"end": 23251,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 22624,
											"end": 23251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23298,
											"end": 23305,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23294,
											"end": 23296,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23288,
											"end": 23292,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 20673,
											"end": 23367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20673,
											"end": 23367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20673,
											"end": 23367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 23618,
											"end": 23622,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23624,
											"end": 23626,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23628,
											"end": 23635,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23601,
											"end": 23617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11893,
											"end": 11900,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11936,
											"end": 11963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 11955,
											"end": 11962,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11936,
											"end": 11954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 11936,
											"end": 11963,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7435,
											"end": 7442,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7459,
											"end": 7478,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7459,
											"end": 7478,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 7455,
											"end": 7515,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7515,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 7455,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7533,
											"end": 7551,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7533,
											"end": 7588,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7533,
											"end": 7588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10660,
											"end": 10673,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 10693,
											"end": 10700,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17582,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24413,
											"end": 24444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 24426,
											"end": 24430,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 24432,
											"end": 24434,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 24436,
											"end": 24443,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 24413,
											"end": 24425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 24413,
											"end": 24444,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 24413,
											"end": 24444,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 24413,
											"end": 24444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24459,
											"end": 24473,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 24459,
											"end": 24473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 24459,
											"end": 24473,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 24459,
											"end": 24478,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 24455,
											"end": 24638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 24455,
											"end": 24638,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 24498,
											"end": 24554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 24529,
											"end": 24533,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 24535,
											"end": 24537,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 24539,
											"end": 24546,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 24548,
											"end": 24553,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 24498,
											"end": 24528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 24498,
											"end": 24554,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 24498,
											"end": 24554,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 24498,
											"end": 24554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24493,
											"end": 24638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 24493,
											"end": 24638,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 24493,
											"end": 24638,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 24493,
											"end": 24638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10887,
											"end": 10900,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 10926,
											"end": 10933,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10918,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10913,
											"end": 10972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 10913,
											"end": 10972,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A14C4B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10913,
											"end": 10972,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 10913,
											"end": 10972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10985,
											"end": 11006,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11009,
											"end": 11019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11384,
											"end": 11478,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11009,
											"end": 11019,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 11009,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10985,
											"end": 11019,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10985,
											"end": 11019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11050,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11058,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11063,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11037,
											"end": 11063,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11063,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11090,
											"end": 11097,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11099,
											"end": 11117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 11109,
											"end": 11116,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11099,
											"end": 11108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 11099,
											"end": 11117,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11099,
											"end": 11117,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 11099,
											"end": 11117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11030,
											"end": 11124,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 18282,
											"end": 18564,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 18282,
											"end": 18564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18347,
											"end": 18351,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18437,
											"end": 18450,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18437,
											"end": 18450,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 18427,
											"end": 18434,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 18427,
											"end": 18450,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 18384,
											"end": 18537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18384,
											"end": 18537,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18384,
											"end": 18537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 18384,
											"end": 18537,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18488,
											"end": 18505,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18488,
											"end": 18532,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 18488,
											"end": 18537,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 18488,
											"end": 18537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 18282,
											"end": 18564,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12976,
											"end": 14251,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 12976,
											"end": 14251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13043,
											"end": 13050,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13078,
											"end": 13085,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13180,
											"end": 13193,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13180,
											"end": 13193,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 13173,
											"end": 13177,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13173,
											"end": 13193,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 13169,
											"end": 14184,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13169,
											"end": 14184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 13169,
											"end": 14184,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13218,
											"end": 13232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13235,
											"end": 13252,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13324,
											"end": 13348,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13324,
											"end": 13348,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13320,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 13320,
											"end": 14165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13996,
											"end": 14007,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14067,
											"end": 14073,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14049,
											"end": 14066,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13320,
											"end": 14165,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 13320,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13195,
											"end": 14184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13169,
											"end": 14184,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 13169,
											"end": 14184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 26892,
											"end": 26896,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 26892,
											"end": 26896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26913,
											"end": 26958,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 26958,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 26958,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 26958,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 26913,
											"end": 26958,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26980,
											"end": 26984,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 26980,
											"end": 26984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26986,
											"end": 26993,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 26986,
											"end": 26993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26995,
											"end": 27000,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 26995,
											"end": 27000,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27196,
											"end": 27209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27196,
											"end": 27209,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 27192,
											"end": 27427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 27192,
											"end": 27427,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 27192,
											"end": 27427,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 27192,
											"end": 27427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 27385,
											"end": 27391,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 27379,
											"end": 27392,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 27370,
											"end": 27376,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 27366,
											"end": 27368,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 27362,
											"end": 27377,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 27355,
											"end": 27393,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 27072,
											"end": 27136,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27072,
											"end": 27136,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 27072,
											"end": 27136,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 40527,
											"end": 42109,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 40527,
											"end": 42109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 41011,
											"end": 41015,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 41005,
											"end": 41016,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 41005,
											"end": 41016,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 41018,
											"end": 41022,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 41001,
											"end": 41023,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 41097,
											"end": 41114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 41097,
											"end": 41114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 41097,
											"end": 41114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 41097,
											"end": 41114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 41001,
											"end": 41023,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 41455,
											"end": 41460,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 41437,
											"end": 41865,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 41437,
											"end": 41865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 41503,
											"end": 41504,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 41498,
											"end": 41501,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 41494,
											"end": 41505,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 41487,
											"end": 41505,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 41487,
											"end": 41505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 41674,
											"end": 41676,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 41668,
											"end": 41672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 41664,
											"end": 41677,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 41660,
											"end": 41662,
											"name": "PUSH",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 41656,
											"end": 41678,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 41651,
											"end": 41654,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 41643,
											"end": 41679,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 41768,
											"end": 41770,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 41758,
											"end": 41771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 41758,
											"end": 41771,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 41758,
											"end": 41771,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 41825,
											"end": 41850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 41825,
											"end": 41850,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 41843,
											"end": 41848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 41843,
											"end": 41848,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 41825,
											"end": 41850,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 41825,
											"end": 41850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 41437,
											"end": 41865,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 41437,
											"end": 41865,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 41437,
											"end": 41865,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 41437,
											"end": 41865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41895,
											"end": 41908,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 41895,
											"end": 41908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 41895,
											"end": 41908,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 42010,
											"end": 42024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 42010,
											"end": 42024,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 42010,
											"end": 42024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 42072,
											"end": 42091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 42072,
											"end": 42091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 42072,
											"end": 42091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 42010,
											"end": 42024,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 40527,
											"end": 42109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40527,
											"end": 42109,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1106,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1156,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1139,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1128,
											"end": 1151,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1157,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1168,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1160,
											"end": 1172,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1212,
											"end": 1221,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1222,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1222,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1275,
											"end": 1277,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1279,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1279,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1326,
											"end": 1328,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1311,
											"end": 1329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1330,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1330,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1383,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 1379,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1422,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1445,
											"end": 1447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1463,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1484,
											"end": 1506,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1506,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1533,
											"end": 1535,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1542,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1552,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1568,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1605,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1626,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1617,
											"end": 1627,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1708,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1675,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1781,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 1751,
											"end": 1782,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1747,
											"end": 1787,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1846,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1889,
											"end": 1899,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1887,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1924,
											"end": 1926,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1922,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1909,
											"end": 1927,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 1971,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1954,
											"end": 1956,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1952,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1942,
											"end": 1962,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1972,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 1986,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1987,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2039,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2023,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2044,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2083,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2088,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2252,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2248,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2221,
											"end": 2253,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2268,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2308,
											"end": 2317,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2279,
											"end": 2318,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2279,
											"end": 2318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 2366,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2340,
											"end": 2372,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2422,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2399,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2423,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2437,
											"end": 2438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2435,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2605,
											"end": 2607,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2593,
											"end": 2602,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2591,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2621,
											"end": 2622,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2611,
											"end": 2623,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2663,
											"end": 2672,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2634,
											"end": 2673,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2722,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2692,
											"end": 2724,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2692,
											"end": 2724,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2735,
											"end": 2980,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2735,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2848,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2843,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2825,
											"end": 2832,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 2844,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2817,
											"end": 2849,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2862,
											"end": 2863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2911,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2944,
											"end": 2949,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3234,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2985,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3060,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3109,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3078,
											"end": 3110,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3120,
											"end": 3121,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3113,
											"end": 3125,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3353,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3337,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3326,
											"end": 3349,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3354,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3368,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3365,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3357,
											"end": 3369,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3413,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3390,
											"end": 3413,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3509,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3536,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3528,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3537,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 3602,
											"end": 3608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3599,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3590,
											"end": 3593,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3586,
											"end": 3600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3583,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3577,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3584,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3670,
											"end": 3674,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3625,
											"end": 3675,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3868,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3909,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 3965,
											"end": 3971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 3957,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3945,
											"end": 3951,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4035,
											"end": 4048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4035,
											"end": 4048,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4035,
											"end": 4048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4091,
											"end": 4095,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4096,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4150,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4150,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4620,
											"end": 4654,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4620,
											"end": 4654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4663,
											"end": 4706,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4737,
											"end": 4739,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4722,
											"end": 4740,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4722,
											"end": 4740,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4715,
											"end": 4749,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4715,
											"end": 4749,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4715,
											"end": 4749,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4785,
											"end": 4788,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4780,
											"end": 4782,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4765,
											"end": 4783,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4765,
											"end": 4783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 4789,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 4789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 4789,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4829,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4851,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5054,
											"end": 5273,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 5054,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5203,
											"end": 5205,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5201,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5206,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5263,
											"end": 5265,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5252,
											"end": 5261,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 5223,
											"end": 5267,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5460,
											"end": 5718,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5460,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5532,
											"end": 5533,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5562,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5554,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5550,
											"end": 5563,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5643,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 5644,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5624,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5624,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5624,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5645,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5578,
											"end": 5580,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5571,
											"end": 5581,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5673,
											"end": 5679,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5680,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5664,
											"end": 5712,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5664,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 5664,
											"end": 5712,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5708,
											"end": 5709,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5706,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5690,
											"end": 5706,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5683,
											"end": 5710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5718,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5723,
											"end": 6103,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 5723,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5802,
											"end": 5803,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5845,
											"end": 5857,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5845,
											"end": 5857,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5845,
											"end": 5857,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5866,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 5866,
											"end": 5927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5920,
											"end": 5924,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 5912,
											"end": 5918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5908,
											"end": 5925,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5898,
											"end": 5925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5898,
											"end": 5925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5866,
											"end": 5927,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 5866,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5973,
											"end": 5975,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5965,
											"end": 5971,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5962,
											"end": 5976,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 5960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5936,
											"end": 6097,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5936,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 5936,
											"end": 6097,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6019,
											"end": 6029,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 6014,
											"end": 6017,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6010,
											"end": 6030,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6007,
											"end": 6008,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6000,
											"end": 6031,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 6051,
											"end": 6052,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6044,
											"end": 6059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5936,
											"end": 6097,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 5936,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5936,
											"end": 6097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5723,
											"end": 6103,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5723,
											"end": 6103,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5723,
											"end": 6103,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5723,
											"end": 6103,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6108,
											"end": 6235,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 6108,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6169,
											"end": 6179,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 6164,
											"end": 6167,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6160,
											"end": 6180,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6150,
											"end": 6181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6200,
											"end": 6204,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 6197,
											"end": 6198,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6190,
											"end": 6205,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6224,
											"end": 6228,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6221,
											"end": 6222,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6229,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6371,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 6240,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6314,
											"end": 6346,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6346,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6304,
											"end": 6347,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6304,
											"end": 6347,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6294,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 6294,
											"end": 6365,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6358,
											"end": 6359,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6351,
											"end": 6363,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6294,
											"end": 6365,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 6294,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6371,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"contracts/ERC721A.sol\":{\"keccak256\":\"0xb0471dec724f0725c1bcbad030b9e84f9b0eb81b5ded06e14eaa549a32dfbb0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://552b6961ee7704c1f7a059d54aa6207ae2df5de4eaec77bd6dbc0b0c2a8f6aec\",\"dweb:/ipfs/QmRME5NFYsQdWBW7WLMbLFnwAejEuexqFjd9S5VkD4iQuo\"]},\"contracts/IERC721A.sol\":{\"keccak256\":\"0x62c93219335387b2052d161c29a3b38bcdb89cff897d19a5276738c44a825ee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c31b2128eed6dcaedbf256024ce4e2a104a3dfab635f1af34dfb304ea38fd556\",\"dweb:/ipfs/QmXpXFocJBGTPua7Wc7HwbbSbD1cAAe51L5daFYyFqsozS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 637,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 639,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 641,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 643,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 647,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 651,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 656,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)569_storage)"
							},
							{
								"astId": 662,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)569_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)569_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)569_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 568,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"contracts/ERC721A.sol\":{\"keccak256\":\"0xb0471dec724f0725c1bcbad030b9e84f9b0eb81b5ded06e14eaa549a32dfbb0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://552b6961ee7704c1f7a059d54aa6207ae2df5de4eaec77bd6dbc0b0c2a8f6aec\",\"dweb:/ipfs/QmRME5NFYsQdWBW7WLMbLFnwAejEuexqFjd9S5VkD4iQuo\"]},\"contracts/IERC721A.sol\":{\"keccak256\":\"0x62c93219335387b2052d161c29a3b38bcdb89cff897d19a5276738c44a825ee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c31b2128eed6dcaedbf256024ce4e2a104a3dfab635f1af34dfb304ea38fd556\",\"dweb:/ipfs/QmXpXFocJBGTPua7Wc7HwbbSbD1cAAe51L5daFYyFqsozS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC721A.sol\":{\"keccak256\":\"0x62c93219335387b2052d161c29a3b38bcdb89cff897d19a5276738c44a825ee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c31b2128eed6dcaedbf256024ce4e2a104a3dfab635f1af34dfb304ea38fd556\",\"dweb:/ipfs/QmXpXFocJBGTPua7Wc7HwbbSbD1cAAe51L5daFYyFqsozS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							294
						]
					},
					"id": 295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 294,
							"linearizedBaseContracts": [
								294
							],
							"name": "Address",
							"nameLocation": "202:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1241:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1465:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1458:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1195:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1235:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:0"
									},
									"scope": 294,
									"src": "1175:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2483:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2526:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2578:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2596:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2618:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2647:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2431:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:0"
									},
									"scope": 294,
									"src": "2412:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "3555:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3585:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3593:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															68,
															88
														],
														"referencedDeclaration": 88,
														"src": "3572:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 66,
												"nodeType": "Return",
												"src": "3565:67:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3488:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3504:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3541:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:0"
									},
									"scope": 294,
									"src": "3466:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "4008:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 81,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "4047:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 82,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "4055:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 84,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "4064:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 80,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4025:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 79,
												"id": 86,
												"nodeType": "Return",
												"src": "4018:59:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3892:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3916:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 72,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3943:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 74,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3994:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:0"
									},
									"scope": 294,
									"src": "3861:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "4589:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "4628:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4636:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 103,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4642:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 100,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4606:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 99,
												"id": 106,
												"nodeType": "Return",
												"src": "4599:94:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4486:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4510:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 92,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4537:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4575:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:0"
									},
									"scope": 294,
									"src": "4446:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "5127:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 125,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 123,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 128,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5170:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 135,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "5247:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 134,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "5236:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:0"
											},
											{
												"assignments": [
													141,
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5300:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 140,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5314:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 142,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"arguments": [
														{
															"id": 148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "5367:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 144,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "5341:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5360:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5406:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 153,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5415:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 154,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "5427:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 151,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "5389:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 121,
												"id": 156,
												"nodeType": "Return",
												"src": "5382:58:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4988:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5012:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5039:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5062:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5113:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:0"
									},
									"scope": 294,
									"src": "4948:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "5724:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "5760:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5768:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 168,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															175,
															210
														],
														"referencedDeclaration": 210,
														"src": "5741:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 167,
												"id": 173,
												"nodeType": "Return",
												"src": "5734:80:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5668:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5710:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:0"
									},
									"scope": 294,
									"src": "5624:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "6163:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 189,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "6192:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 188,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "6181:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:0"
											},
											{
												"assignments": [
													195,
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6252:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 194,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6266:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 196,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6311:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 198,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "6293:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6350:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 205,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6359:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 206,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6371:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 203,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "6333:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 186,
												"id": 208,
												"nodeType": "Return",
												"src": "6326:58:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6042:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6066:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6093:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6149:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:0"
									},
									"scope": 294,
									"src": "6005:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6667:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "6705:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6713:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 220,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															227,
															262
														],
														"referencedDeclaration": 262,
														"src": "6684:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 219,
												"id": 225,
												"nodeType": "Return",
												"src": "6677:84:0"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6600:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6616:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6653:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:0"
									},
									"scope": 294,
									"src": "6570:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7109:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 241,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "7138:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 240,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "7127:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:0"
											},
											{
												"assignments": [
													247,
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7200:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 246,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7214:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 248,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"arguments": [
														{
															"id": 252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7261:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 250,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7241:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 257,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7309:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 258,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "7321:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 255,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "7283:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 238,
												"id": 260,
												"nodeType": "Return",
												"src": "7276:58:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "6993:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7017:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7044:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7095:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:0"
									},
									"scope": 294,
									"src": "6954:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "7721:582:0",
										"statements": [
											{
												"condition": {
													"id": 274,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "7735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "7792:505:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 278,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "7876:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 288,
																"nodeType": "Block",
																"src": "8234:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 285,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "8259:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 284,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 287,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:0"
																	}
																]
															},
															"id": 289,
															"nodeType": "IfStatement",
															"src": "7872:415:0",
															"trueBody": {
																"id": 283,
																"nodeType": "Block",
																"src": "7899:329:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:0"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 282,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "7731:566:0",
												"trueBody": {
													"id": 277,
													"nodeType": "Block",
													"src": "7744:42:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7765:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 273,
															"id": 276,
															"nodeType": "Return",
															"src": "7758:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7596:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7618:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7651:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7707:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:0"
									},
									"scope": 294,
									"src": "7561:742:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 295,
							"src": "194:8111:0",
							"usedErrors": []
						}
					],
					"src": "101:8205:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							316
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 297,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 302,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 301,
												"id": 304,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 316,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 311,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 310,
												"id": 313,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 316,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 317,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							542
						]
					},
					"id": 543,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 319,
								"nodeType": "StructuredDocumentation",
								"src": "126:34:2",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 542,
							"linearizedBaseContracts": [
								542
							],
							"name": "Strings",
							"nameLocation": "169:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 322,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "208:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 542,
									"src": "183:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 320,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 321,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:18:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 325,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "270:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 542,
									"src": "247:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 323,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "247:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 324,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "463:632:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 333,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "665:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 339,
												"nodeType": "IfStatement",
												"src": "661:51:2",
												"trueBody": {
													"id": 338,
													"nodeType": "Block",
													"src": "677:35:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 332,
															"id": 337,
															"nodeType": "Return",
															"src": "691:10:2"
														}
													]
												}
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "729:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "721:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"id": 342,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 328,
													"src": "736:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:20:2"
											},
											{
												"assignments": [
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "759:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "751:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 344,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "751:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"nodeType": "VariableDeclarationStatement",
												"src": "751:14:2"
											},
											{
												"body": {
													"id": 357,
													"nodeType": "Block",
													"src": "793:57:2",
													"statements": [
														{
															"expression": {
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "807:8:2",
																"subExpression": {
																	"id": 350,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "807:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 352,
															"nodeType": "ExpressionStatement",
															"src": "807:8:2"
														},
														{
															"expression": {
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 353,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "829:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "837:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "829:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 356,
															"nodeType": "ExpressionStatement",
															"src": "829:10:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 347,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "782:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "790:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "782:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "WhileStatement",
												"src": "775:75:2"
											},
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "872:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "859:19:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 359,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "859:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 365,
												"initialValue": {
													"arguments": [
														{
															"id": 363,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "891:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "881:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 361,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "885:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:39:2"
											},
											{
												"body": {
													"id": 396,
													"nodeType": "Block",
													"src": "927:131:2",
													"statements": [
														{
															"expression": {
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 369,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "941:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "951:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "941:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 372,
															"nodeType": "ExpressionStatement",
															"src": "941:11:2"
														},
														{
															"expression": {
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 373,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 360,
																		"src": "966:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 375,
																	"indexExpression": {
																		"id": 374,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "973:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "966:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 387,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 380,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "996:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 385,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 383,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 328,
																									"src": "1009:5:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 384,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1017:2:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1009:10:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 382,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1001:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 381,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1001:7:2",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 386,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1001:19:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "996:24:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "990:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 378,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "990:5:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "990:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "983:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 376,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "983:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "983:39:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "966:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 391,
															"nodeType": "ExpressionStatement",
															"src": "966:56:2"
														},
														{
															"expression": {
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 392,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "1036:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1045:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1036:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 395,
															"nodeType": "ExpressionStatement",
															"src": "1036:11:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 366,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "915:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "915:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 397,
												"nodeType": "WhileStatement",
												"src": "908:150:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "1081:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1074:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 398,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1074:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 332,
												"id": 402,
												"nodeType": "Return",
												"src": "1067:21:2"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "297:90:2",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "401:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "418:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "410:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:15:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "448:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 330,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:15:2"
									},
									"scope": 542,
									"src": "392:703:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1274:255:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 412,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "1288:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1288:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 418,
												"nodeType": "IfStatement",
												"src": "1284:54:2",
												"trueBody": {
													"id": 417,
													"nodeType": "Block",
													"src": "1300:38:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1321:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 411,
															"id": 416,
															"nodeType": "Return",
															"src": "1314:13:2"
														}
													]
												}
											},
											{
												"assignments": [
													420
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1355:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "1347:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 419,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1347:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 422,
												"initialValue": {
													"id": 421,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 407,
													"src": "1362:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1347:20:2"
											},
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1385:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "1377:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 423,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1377:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 426,
												"initialValue": {
													"hexValue": "30",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1394:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:18:2"
											},
											{
												"body": {
													"id": 437,
													"nodeType": "Block",
													"src": "1423:57:2",
													"statements": [
														{
															"expression": {
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1437:8:2",
																"subExpression": {
																	"id": 430,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "1437:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 432,
															"nodeType": "ExpressionStatement",
															"src": "1437:8:2"
														},
														{
															"expression": {
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 433,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "1459:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1468:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 436,
															"nodeType": "ExpressionStatement",
															"src": "1459:10:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 427,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "1412:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1420:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1412:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 438,
												"nodeType": "WhileStatement",
												"src": "1405:75:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "1508:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 441,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "1515:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															445,
															521,
															541
														],
														"referencedDeclaration": 521,
														"src": "1496:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 411,
												"id": 443,
												"nodeType": "Return",
												"src": "1489:33:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "1101:94:2",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1209:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1221:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:15:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1259:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1259:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:15:2"
									},
									"scope": 542,
									"src": "1200:329:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "1742:351:2",
										"statements": [
											{
												"assignments": [
													456
												],
												"declarations": [
													{
														"constant": false,
														"id": 456,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1765:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 520,
														"src": "1752:19:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 455,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1752:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 465,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1784:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 460,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "1788:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1797:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1784:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1774:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 457,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1778:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1752:47:2"
											},
											{
												"expression": {
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 466,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "1809:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 468,
														"indexExpression": {
															"hexValue": "30",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1809:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1809:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "1809:15:2"
											},
											{
												"expression": {
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 472,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "1834:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 474,
														"indexExpression": {
															"hexValue": "31",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1846:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1834:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "1834:15:2"
											},
											{
												"body": {
													"id": 506,
													"nodeType": "Block",
													"src": "1904:87:2",
													"statements": [
														{
															"expression": {
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 492,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "1918:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 494,
																	"indexExpression": {
																		"id": 493,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "1925:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1918:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 495,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 322,
																		"src": "1930:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 499,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 496,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 448,
																			"src": "1943:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1951:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1943:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1930:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1918:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 501,
															"nodeType": "ExpressionStatement",
															"src": "1918:37:2"
														},
														{
															"expression": {
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 502,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "1969:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1979:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1969:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 505,
															"nodeType": "ExpressionStatement",
															"src": "1969:11:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "1892:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1896:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1892:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 507,
												"initializationExpression": {
													"assignments": [
														479
													],
													"declarations": [
														{
															"constant": false,
															"id": 479,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1872:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 507,
															"src": "1864:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 478,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1864:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 485,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1876:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 481,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "1880:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1876:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1889:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1876:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1864:26:2"
												},
												"loopExpression": {
													"expression": {
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1899:3:2",
														"subExpression": {
															"id": 489,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "1901:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 491,
													"nodeType": "ExpressionStatement",
													"src": "1899:3:2"
												},
												"nodeType": "ForStatement",
												"src": "1859:132:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 509,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "2008:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2008:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2000:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "2000:55:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2079:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2072:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 515,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2072:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 454,
												"id": 519,
												"nodeType": "Return",
												"src": "2065:21:2"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "1535:112:2",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1661:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1681:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1673:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1696:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1688:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:31:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1727:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 452,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:15:2"
									},
									"scope": 542,
									"src": "1652:441:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "2318:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 534,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 524,
																			"src": "2363:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 532,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2347:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 530,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2347:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 537,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "2371:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 529,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															445,
															521,
															541
														],
														"referencedDeclaration": 521,
														"src": "2335:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 528,
												"id": 539,
												"nodeType": "Return",
												"src": "2328:59:2"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "2099:141:2",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2254:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2274:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2266:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:14:2"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2303:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 526,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:15:2"
									},
									"scope": 542,
									"src": "2245:149:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 543,
							"src": "161:2235:2",
							"usedErrors": []
						}
					],
					"src": "101:2296:2"
				},
				"id": 2
			},
			"contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "contracts/ERC721A.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"Context": [
							316
						],
						"ERC721A": [
							2168
						],
						"ERC721A__IERC721Receiver": [
							563
						],
						"IERC721A": [
							2374
						],
						"Strings": [
							542
						]
					},
					"id": 2169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 544,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:3"
						},
						{
							"absolutePath": "contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 545,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2169,
							"sourceUnit": 2375,
							"src": "115:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 546,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2169,
							"sourceUnit": 295,
							"src": "141:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 547,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2169,
							"sourceUnit": 317,
							"src": "194:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 548,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2169,
							"sourceUnit": 543,
							"src": "247:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 549,
								"nodeType": "StructuredDocumentation",
								"src": "302:53:3",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 563,
							"linearizedBaseContracts": [
								563
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "367:24:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "408:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "443:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "435:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "470:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "462:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "493:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "485:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "526:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "511:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "511:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:113:3"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "556:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 559,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "556:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:8:3"
									},
									"scope": 563,
									"src": "399:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2169,
							"src": "357:210:3",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 565,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2374,
										"src": "1109:8:3"
									},
									"id": 566,
									"nodeType": "InheritanceSpecifier",
									"src": "1109:8:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 564,
								"nodeType": "StructuredDocumentation",
								"src": "571:516:3",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 2168,
							"linearizedBaseContracts": [
								2168,
								2374
							],
							"name": "ERC721A",
							"nameLocation": "1098:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 569,
									"members": [
										{
											"constant": false,
											"id": 568,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1211:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 569,
											"src": "1203:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 567,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1203:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1175:16:3",
									"nodeType": "StructDefinition",
									"scope": 2168,
									"src": "1168:56:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 577,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1492:27:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "1467:68:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 570,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1467:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 576,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1523:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1528:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1523:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 574,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1522:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 575,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1534:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1522:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 580,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "1636:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "1611:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 578,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1611:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 579,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1660:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 583,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "1763:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "1738:52:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 581,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1738:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 582,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1787:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 586,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "1882:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "1857:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 584,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1857:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 585,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1896:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 594,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "2015:23:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "1990:65:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 587,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1990:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 593,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2042:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2047:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "2042:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 591,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2041:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 592,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2054:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2041:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 597,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "2155:23:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "2130:54:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 595,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2130:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 596,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2181:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 602,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "2280:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "2255:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 598,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2255:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 601,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 599,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2298:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 600,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2303:3:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "2298:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 605,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2415:24:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "2390:55:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 603,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2390:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 604,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2442:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 610,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2550:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "2525:61:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 606,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2525:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 609,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 607,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2578:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 608,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2583:3:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2578:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 613,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "2681:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "2656:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 611,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2656:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 612,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2702:3:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 621,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2826:30:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "2801:72:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 614,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2801:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 620,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2860:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2865:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2860:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 618,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2859:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 619,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2872:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2859:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 629,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2961:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "2936:58:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 622,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2936:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 628,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2981:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2986:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2981:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 626,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2980:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 627,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2993:1:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2980:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 632,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "3308:32:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "3283:64:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 630,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3283:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 631,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3343:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 635,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "3498:25:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "3473:128:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 633,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3473:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 634,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3535:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 637,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3851:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "3835:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 636,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3835:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 639,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3926:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "3910:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 638,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3910:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 641,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3981:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "3966:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 640,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3966:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 643,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "4031:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "4016:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 642,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4016:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 647,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "4470:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "4434:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 646,
										"keyType": {
											"id": 644,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4442:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4434:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 645,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4453:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 651,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "4738:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "4702:54:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 650,
										"keyType": {
											"id": 648,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4710:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4702:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 649,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4721:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 656,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4861:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "4816:60:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$569_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 655,
										"keyType": {
											"id": 652,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4824:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4816:36:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$569_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueType": {
											"id": 654,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 653,
												"name": "TokenApprovalRef",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "4835:16:3"
											},
											"referencedDeclaration": 569,
											"src": "4835:16:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$569_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 662,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4987:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "4934:71:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 661,
										"keyType": {
											"id": 657,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4942:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4934:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 660,
											"keyType": {
												"id": 658,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4961:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4953:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 659,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4972:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "5257:102:3",
										"statements": [
											{
												"expression": {
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 669,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "5268:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 670,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "5276:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5268:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "5268:13:3"
											},
											{
												"expression": {
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 673,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "5292:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 674,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "5302:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5292:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "5292:17:3"
											},
											{
												"expression": {
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 677,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "5320:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 678,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "5336:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5336:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5320:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "5320:31:3"
											}
										]
									},
									"id": 683,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "5227:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "5213:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 663,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5213:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "5248:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "5234:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 665,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5234:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5212:44:3"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5257:0:3"
									},
									"scope": 2168,
									"src": "5201:158:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "5760:27:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5778:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 688,
												"id": 690,
												"nodeType": "Return",
												"src": "5771:8:3"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "5561:128:3",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5704:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5717:2:3"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "5751:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5750:9:3"
									},
									"scope": 2168,
									"src": "5695:92:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "5930:39:3",
										"statements": [
											{
												"expression": {
													"id": 698,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 637,
													"src": "5948:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 697,
												"id": 699,
												"nodeType": "Return",
												"src": "5941:20:3"
											}
										]
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "5795:65:3",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "5875:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5887:2:3"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "5921:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5921:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5920:9:3"
									},
									"scope": 2168,
									"src": "5866:103:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2225
									],
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "6249:253:3",
										"statements": [
											{
												"id": 715,
												"nodeType": "UncheckedBlock",
												"src": "6405:90:3",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 708,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "6437:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 709,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "6453:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6437:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 711,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "6468:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6468:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6437:46:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 707,
														"id": 714,
														"nodeType": "Return",
														"src": "6430:53:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "5977:196:3",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6188:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 704,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6222:8:3"
									},
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6199:2:3"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "6240:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6240:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6239:9:3"
									},
									"scope": 2168,
									"src": "6179:323:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "6664:232:3",
										"statements": [
											{
												"id": 728,
												"nodeType": "UncheckedBlock",
												"src": "6814:75:3",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 723,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "6846:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 724,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "6862:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6862:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6846:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 722,
														"id": 727,
														"nodeType": "Return",
														"src": "6839:38:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "6510:84:3",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "6609:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6621:2:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "6655:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6655:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6654:9:3"
									},
									"scope": 2168,
									"src": "6600:296:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "7042:38:3",
										"statements": [
											{
												"expression": {
													"id": 736,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 639,
													"src": "7060:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 735,
												"id": 737,
												"nodeType": "Return",
												"src": "7053:19:3"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "6904:68:3",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "6987:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6999:2:3"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "7033:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7033:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7032:9:3"
									},
									"scope": 2168,
									"src": "6978:102:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2268
									],
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "7444:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 748,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "7459:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7476:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7468:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 749,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7468:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7468:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7459:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 757,
												"nodeType": "IfStatement",
												"src": "7455:60:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 754,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "7487:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7487:28:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 756,
													"nodeType": "RevertStatement",
													"src": "7480:35:3"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 758,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "7533:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 760,
														"indexExpression": {
															"id": 759,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "7552:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7533:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 761,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "7561:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7533:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 747,
												"id": 763,
												"nodeType": "Return",
												"src": "7526:62:3"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "7281:76:3",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7372:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 744,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7417:8:3"
									},
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7390:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "7382:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7382:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7381:15:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "7435:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7434:9:3"
									},
									"scope": 2168,
									"src": "7363:233:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "7748:108:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 773,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "7767:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 775,
																	"indexExpression": {
																		"id": 774,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "7786:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7767:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 776,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "7796:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7767:50:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 778,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7766:52:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 779,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "7821:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7766:82:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 781,
												"nodeType": "Return",
												"src": "7759:89:3"
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "7604:68:3",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "7687:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "7701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7700:15:3"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "7739:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7738:9:3"
									},
									"scope": 2168,
									"src": "7678:178:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "8024:108:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 791,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "8043:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 793,
																	"indexExpression": {
																		"id": 792,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "8062:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8043:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 794,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "8072:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8043:50:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 796,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8042:52:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 797,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "8097:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8042:82:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 790,
												"id": 799,
												"nodeType": "Return",
												"src": "8035:89:3"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "7864:84:3",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "7963:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7985:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "7977:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7977:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7976:15:3"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "8015:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8015:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8014:9:3"
									},
									"scope": 2168,
									"src": "7954:178:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "8313:74:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 811,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "8338:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 813,
																"indexExpression": {
																	"id": 812,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "8357:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8338:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 814,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "8367:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8338:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8331:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 809,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "8331:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8331:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 808,
												"id": 817,
												"nodeType": "Return",
												"src": "8324:55:3"
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "8140:104:3",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "8259:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8275:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "8267:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8267:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8266:15:3"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "8305:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 806,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8305:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8304:8:3"
									},
									"scope": 2168,
									"src": "8250:137:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "8636:343:3",
										"statements": [
											{
												"assignments": [
													828
												],
												"declarations": [
													{
														"constant": false,
														"id": 828,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "8655:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "8647:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 827,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 832,
												"initialValue": {
													"baseExpression": {
														"id": 829,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "8664:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 831,
													"indexExpression": {
														"id": 830,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "8683:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8664:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8647:42:3"
											},
											{
												"assignments": [
													834
												],
												"declarations": [
													{
														"constant": false,
														"id": 834,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "8708:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "8700:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 833,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8700:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 835,
												"nodeType": "VariableDeclarationStatement",
												"src": "8700:17:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8802:42:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8817:16:3",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "8830:3:3"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "8817:9:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 824,
														"isOffset": false,
														"isSlot": false,
														"src": "8830:3:3",
														"valueSize": 1
													},
													{
														"declaration": 834,
														"isOffset": false,
														"isSlot": false,
														"src": "8817:9:3",
														"valueSize": 1
													}
												],
												"id": 836,
												"nodeType": "InlineAssembly",
												"src": "8793:51:3"
											},
											{
												"expression": {
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 837,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "8854:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 838,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "8864:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 839,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "8873:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8864:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 841,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8863:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 842,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "8901:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 843,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "8914:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8901:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 845,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8900:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8863:63:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8854:72:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "8854:72:3"
											},
											{
												"expression": {
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 849,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "8937:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 851,
														"indexExpression": {
															"id": 850,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "8956:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8937:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 852,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "8965:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8937:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "8937:34:3"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "8395:174:3",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "8584:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8600:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "8592:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8592:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "8614:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "8607:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 823,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8607:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8591:27:3"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8636:0:3"
									},
									"scope": 2168,
									"src": "8575:404:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2233
									],
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "9617:548:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 865,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "9935:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9950:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "9935:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 868,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "10012:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10027:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "10012:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9935:102:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 872,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "10089:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10104:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "10089:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9935:179:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 864,
												"id": 876,
												"nodeType": "Return",
												"src": "9915:199:3"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "9172:348:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "9535:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 861,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9593:8:3"
									},
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "9560:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "9553:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 858,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "9553:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9552:20:3"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "9611:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 862,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9611:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9610:6:3"
									},
									"scope": 2168,
									"src": "9526:639:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2348
									],
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "10497:31:3",
										"statements": [
											{
												"expression": {
													"id": 885,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 641,
													"src": "10515:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 884,
												"id": 886,
												"nodeType": "Return",
												"src": "10508:12:3"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "10362:60:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10437:4:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 881,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10464:8:3"
									},
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10441:2:3"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "10482:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 882,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10482:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10481:15:3"
									},
									"scope": 2168,
									"src": "10428:100:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2354
									],
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "10675:33:3",
										"statements": [
											{
												"expression": {
													"id": 895,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 643,
													"src": "10693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 894,
												"id": 896,
												"nodeType": "Return",
												"src": "10686:14:3"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "10536:62:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10613:6:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 891,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10642:8:3"
									},
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10619:2:3"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "10660:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 892,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10660:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10659:15:3"
									},
									"scope": 2168,
									"src": "10604:104:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2362
									],
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "10902:230:3",
										"statements": [
											{
												"condition": {
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10917:17:3",
													"subExpression": {
														"arguments": [
															{
																"id": 908,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "10926:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 907,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "10918:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10918:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 914,
												"nodeType": "IfStatement",
												"src": "10913:59:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 911,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2204,
															"src": "10943:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10943:29:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 913,
													"nodeType": "RevertStatement",
													"src": "10936:36:3"
												}
											},
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "10999:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "10985:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 915,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10985:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 917,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "11009:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11009:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10985:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 922,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "11043:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11037:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 920,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "11037:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11037:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11037:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11062:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11037:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11122:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11037:87:3",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 931,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "11090:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 933,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 901,
																				"src": "11109:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 932,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2167,
																			"src": "11099:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11099:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 929,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "11073:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "11073:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11073:45:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11066:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 927,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "11066:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11066:53:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 906,
												"id": 939,
												"nodeType": "Return",
												"src": "11030:94:3"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "10716:92:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "10823:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 903,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10869:8:3"
									},
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10840:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "10832:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10832:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10831:17:3"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "10887:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 904,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10887:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10886:15:3"
									},
									"scope": 2168,
									"src": "10814:318:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "11450:28:3",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11468:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 946,
												"id": 948,
												"nodeType": "Return",
												"src": "11461:9:3"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "11140:238:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "11393:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11401:2:3"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "11435:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11435:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11434:15:3"
									},
									"scope": 2168,
									"src": "11384:94:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2276
									],
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "11902:71:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 964,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 953,
																			"src": "11955:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 963,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1078,
																		"src": "11936:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11936:27:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11928:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 961,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11928:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11928:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11920:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 959,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11920:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11920:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 958,
												"id": 968,
												"nodeType": "Return",
												"src": "11913:52:3"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "11678:137:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "11830:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 955,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11875:8:3"
									},
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11846:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "11838:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11838:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11837:17:3"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "11893:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11893:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11892:9:3"
									},
									"scope": 2168,
									"src": "11821:152:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "12255:73:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 981,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "12311:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 980,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "12292:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12292:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 979,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "12273:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2219_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12273:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2219_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 978,
												"id": 984,
												"nodeType": "Return",
												"src": "12266:54:3"
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "11981:175:3",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "12171:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12192:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "12184:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12184:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12183:17:3"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "12232:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2219_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 976,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 975,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2219,
														"src": "12232:14:3"
													},
													"referencedDeclaration": 2219,
													"src": "12232:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2219_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12231:23:3"
									},
									"scope": 2168,
									"src": "12162:166:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "12515:70:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 996,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "12552:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 998,
															"indexExpression": {
																"id": 997,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "12570:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12552:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 995,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "12533:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2219_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12533:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2219_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 994,
												"id": 1000,
												"nodeType": "Return",
												"src": "12526:51:3"
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "12336:82:3",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "12433:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "12446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12445:15:3"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "12492:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2219_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 992,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 991,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2219,
														"src": "12492:14:3"
													},
													"referencedDeclaration": 2219,
													"src": "12492:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2219_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12491:23:3"
									},
									"scope": 2168,
									"src": "12424:161:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "12762:132:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1008,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "12777:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1010,
														"indexExpression": {
															"id": 1009,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "12795:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12777:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12805:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12777:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1022,
												"nodeType": "IfStatement",
												"src": "12773:114:3",
												"trueBody": {
													"id": 1021,
													"nodeType": "Block",
													"src": "12808:79:3",
													"statements": [
														{
															"expression": {
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1013,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "12823:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1015,
																	"indexExpression": {
																		"id": 1014,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "12841:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12823:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1017,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1005,
																			"src": "12869:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1016,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1078,
																		"src": "12850:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12850:25:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12823:52:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1020,
															"nodeType": "ExpressionStatement",
															"src": "12823:52:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "12593:99:3",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "12707:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12738:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "12730:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12730:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12729:15:3"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12762:0:3"
									},
									"scope": 2168,
									"src": "12698:196:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "13052:1199:3",
										"statements": [
											{
												"assignments": [
													1033
												],
												"declarations": [
													{
														"constant": false,
														"id": 1033,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "13071:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 1077,
														"src": "13063:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1032,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13063:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1035,
												"initialValue": {
													"id": 1034,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1027,
													"src": "13078:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13063:22:3"
											},
											{
												"id": 1073,
												"nodeType": "UncheckedBlock",
												"src": "13098:1097:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1036,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "13127:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13127:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1038,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "13146:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13127:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1072,
														"nodeType": "IfStatement",
														"src": "13123:1061:3",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1040,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "13173:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1041,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "13180:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13173:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1071,
															"nodeType": "IfStatement",
															"src": "13169:1015:3",
															"trueBody": {
																"id": 1070,
																"nodeType": "Block",
																"src": "13195:989:3",
																"statements": [
																	{
																		"assignments": [
																			1044
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1044,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "13226:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1070,
																				"src": "13218:14:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1043,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13218:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1048,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1045,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "13235:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1047,
																			"indexExpression": {
																				"id": 1046,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1033,
																				"src": "13253:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13235:23:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13218:40:3"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1049,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1044,
																					"src": "13324:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 1050,
																					"name": "_BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "13333:15:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13324:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13352:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "13324:29:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1069,
																		"nodeType": "IfStatement",
																		"src": "13320:845:3",
																		"trueBody": {
																			"id": 1068,
																			"nodeType": "Block",
																			"src": "13355:810:3",
																			"statements": [
																				{
																					"body": {
																						"id": 1064,
																						"nodeType": "Block",
																						"src": "14009:93:3",
																						"statements": [
																							{
																								"expression": {
																									"id": 1062,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1057,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1044,
																										"src": "14040:6:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 1058,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 647,
																											"src": "14049:17:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 1061,
																										"indexExpression": {
																											"id": 1060,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "14067:6:3",
																											"subExpression": {
																												"id": 1059,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1033,
																												"src": "14069:4:3",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "14049:25:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "14040:34:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1063,
																								"nodeType": "ExpressionStatement",
																								"src": "14040:34:3"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1056,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1054,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1044,
																							"src": "13996:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1055,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14006:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "13996:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1065,
																					"nodeType": "WhileStatement",
																					"src": "13989:113:3"
																				},
																				{
																					"expression": {
																						"id": 1066,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1044,
																						"src": "14135:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 1031,
																					"id": 1067,
																					"nodeType": "Return",
																					"src": "14128:13:3"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1074,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "14212:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14212:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "RevertStatement",
												"src": "14205:38:3"
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "12902:68:3",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "12985:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13012:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13004:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13004:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13003:17:3"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13043:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13043:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13042:9:3"
									},
									"scope": 2168,
									"src": "12976:1275:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "14449:267:3",
										"statements": [
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1087,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "14460:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2219_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2212,
														"src": "14460:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1094,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "14493:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14485:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1092,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "14485:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14485:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14477:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1090,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14477:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14477:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14460:41:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "14460:41:3"
											},
											{
												"expression": {
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1099,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "14512:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2219_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2214,
														"src": "14512:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1104,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "14546:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1105,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "14556:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14546:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14539:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 1102,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "14539:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14539:41:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "14512:68:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "14512:68:3"
											},
											{
												"expression": {
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1110,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "14591:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2219_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2216,
														"src": "14591:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1113,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "14610:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1114,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "14619:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14610:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14638:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14610:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14591:48:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "14591:48:3"
											},
											{
												"expression": {
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1120,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "14650:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2219_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2218,
														"src": "14650:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1125,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "14679:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1126,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "14689:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14679:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14672:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 1123,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "14672:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14672:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "14650:58:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "14650:58:3"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "14259:85:3",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "14359:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "14386:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "14378:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14378:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14377:16:3"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "14438:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "14416:31:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2219_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1084,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1083,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2219,
														"src": "14416:14:3"
													},
													"referencedDeclaration": 2219,
													"src": "14416:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2219_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14415:33:3"
									},
									"scope": 2168,
									"src": "14350:366:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "14895:354:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14915:327:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15027:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15040:5:3"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "15047:16:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15036:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15036:28:3"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "15027:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15158:73:3",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15171:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "15185:23:3"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "15210:9:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15210:11:3"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "15181:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15181:41:3"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "15224:5:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "15178:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15178:52:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15168:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15168:63:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15158:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 629,
														"isOffset": false,
														"isSlot": false,
														"src": "15047:16:3",
														"valueSize": 1
													},
													{
														"declaration": 597,
														"isOffset": false,
														"isSlot": false,
														"src": "15185:23:3",
														"valueSize": 1
													},
													{
														"declaration": 1137,
														"isOffset": false,
														"isSlot": false,
														"src": "15224:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1135,
														"isOffset": false,
														"isSlot": false,
														"src": "15027:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1135,
														"isOffset": false,
														"isSlot": false,
														"src": "15040:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1135,
														"isOffset": false,
														"isSlot": false,
														"src": "15171:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1140,
														"isOffset": false,
														"isSlot": false,
														"src": "15158:6:3",
														"valueSize": 1
													}
												],
												"id": 1142,
												"nodeType": "InlineAssembly",
												"src": "14906:336:3"
											}
										]
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "14724:69:3",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "14808:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14835:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "14827:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14827:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "14850:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "14842:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14842:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14826:30:3"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14887:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "14879:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14879:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14878:16:3"
									},
									"scope": 2168,
									"src": "14799:450:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "15437:238:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15523:145:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15601:56:3",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "15615:24:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "15644:8:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15654:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15641:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15641:15:3"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "15611:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15611:46:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15601:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 605,
														"isOffset": false,
														"isSlot": false,
														"src": "15615:24:3",
														"valueSize": 1
													},
													{
														"declaration": 1147,
														"isOffset": false,
														"isSlot": false,
														"src": "15644:8:3",
														"valueSize": 1
													},
													{
														"declaration": 1150,
														"isOffset": false,
														"isSlot": false,
														"src": "15601:6:3",
														"valueSize": 1
													}
												],
												"id": 1152,
												"nodeType": "InlineAssembly",
												"src": "15514:154:3"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "15257:88:3",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "15360:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15389:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "15381:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15381:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15380:18:3"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15429:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "15421:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15421:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15420:16:3"
									},
									"scope": 2168,
									"src": "15351:324:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2316
									],
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "16422:330:3",
										"statements": [
											{
												"assignments": [
													1164
												],
												"declarations": [
													{
														"constant": false,
														"id": 1164,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16441:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1198,
														"src": "16433:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1163,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16433:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"arguments": [
														{
															"id": 1166,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "16457:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1165,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "16449:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16449:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16433:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1169,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "16482:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16482:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1171,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "16505:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16482:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1184,
												"nodeType": "IfStatement",
												"src": "16478:175:3",
												"trueBody": {
													"condition": {
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "16529:45:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 1174,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "16547:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1175,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2157,
																		"src": "16554:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16554:19:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1173,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "16530:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16530:44:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1183,
													"nodeType": "IfStatement",
													"src": "16525:128:3",
													"trueBody": {
														"id": 1182,
														"nodeType": "Block",
														"src": "16576:77:3",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1179,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "16602:33:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16602:35:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1181,
																"nodeType": "RevertStatement",
																"src": "16595:42:3"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1185,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "16665:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$569_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 1187,
															"indexExpression": {
																"id": 1186,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "16681:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16665:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$569_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 568,
														"src": "16665:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1189,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "16698:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16665:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "16665:35:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1193,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "16725:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "16732:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "16736:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1192,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2251,
														"src": "16716:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16716:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "EmitStatement",
												"src": "16711:33:3"
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "15874:472:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "16361:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1161,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16413:8:3"
									},
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16377:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "16369:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16369:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16389:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "16381:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16381:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16368:29:3"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16422:0:3"
									},
									"scope": 2168,
									"src": "16352:400:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2332
									],
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "16996:133:3",
										"statements": [
											{
												"condition": {
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "17011:17:3",
													"subExpression": {
														"arguments": [
															{
																"id": 1209,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "17020:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1208,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "17012:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17012:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "17007:64:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1212,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2177,
															"src": "17037:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17037:34:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1214,
													"nodeType": "RevertStatement",
													"src": "17030:41:3"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1216,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "17091:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$569_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 1218,
														"indexExpression": {
															"id": 1217,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "17107:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17091:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$569_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 568,
													"src": "17091:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1207,
												"id": 1220,
												"nodeType": "Return",
												"src": "17084:37:3"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "16760:145:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "16920:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1204,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16969:8:3"
									},
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "16932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16932:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16931:17:3"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "16987:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16987:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16986:9:3"
									},
									"scope": 2168,
									"src": "16911:218:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2324
									],
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "17553:150:3",
										"statements": [
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1231,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "17564:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1235,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1232,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "17583:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17583:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17564:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1236,
														"indexExpression": {
															"id": 1234,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "17604:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17564:49:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1237,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "17616:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17564:60:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "17564:60:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1241,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2157,
																"src": "17655:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17655:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1243,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "17676:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1244,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "17686:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1240,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2260,
														"src": "17640:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17640:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1246,
												"nodeType": "EmitStatement",
												"src": "17635:60:3"
											}
										]
									},
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "17137:326:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "17478:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1229,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17544:8:3"
									},
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17504:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "17496:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17496:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17519:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "17514:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17514:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17495:33:3"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17553:0:3"
									},
									"scope": 2168,
									"src": "17469:234:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2342
									],
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "17963:61:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1259,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "17981:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1261,
														"indexExpression": {
															"id": 1260,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "18000:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17981:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1263,
													"indexExpression": {
														"id": 1262,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "18007:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17981:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1258,
												"id": 1264,
												"nodeType": "Return",
												"src": "17974:42:3"
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "17711:143:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17869:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1255,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17939:8:3"
									},
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17894:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "17886:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17886:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17909:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "17901:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17901:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17885:33:3"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "17957:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17957:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17956:6:3"
									},
									"scope": 2168,
									"src": "17860:164:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "18353:211:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1274,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "18384:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18384:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1276,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1269,
																"src": "18403:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18384:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1278,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1269,
																"src": "18427:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1279,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "18437:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18427:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "18384:66:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1282,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "18488:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1284,
																"indexExpression": {
																	"id": 1283,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "18506:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18488:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1285,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "18517:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18488:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18536:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "18488:49:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18384:153:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1273,
												"id": 1290,
												"nodeType": "Return",
												"src": "18364:173:3"
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "18032:244:3",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "18291:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18307:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "18299:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18299:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18298:17:3"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "18347:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18347:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18346:6:3"
									},
									"scope": 2168,
									"src": "18282:282:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "18835:497:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18855:470:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18967:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "18980:5:3"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "18987:16:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18976:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "18976:28:3"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "18967:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19119:45:3",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "19136:9:3"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "19147:16:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19132:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "19132:32:3"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "19119:9:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19248:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "19264:9:3"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "19275:5:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19261:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19261:20:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "19286:9:3"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "19297:15:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19283:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19283:30:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19258:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "19258:56:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "19248:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 629,
														"isOffset": false,
														"isSlot": false,
														"src": "18987:16:3",
														"valueSize": 1
													},
													{
														"declaration": 629,
														"isOffset": false,
														"isSlot": false,
														"src": "19147:16:3",
														"valueSize": 1
													},
													{
														"declaration": 1295,
														"isOffset": false,
														"isSlot": false,
														"src": "19297:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1299,
														"isOffset": false,
														"isSlot": false,
														"src": "19119:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1299,
														"isOffset": false,
														"isSlot": false,
														"src": "19136:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1299,
														"isOffset": false,
														"isSlot": false,
														"src": "19264:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1299,
														"isOffset": false,
														"isSlot": false,
														"src": "19286:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1297,
														"isOffset": false,
														"isSlot": false,
														"src": "18967:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1297,
														"isOffset": false,
														"isSlot": false,
														"src": "18980:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1297,
														"isOffset": false,
														"isSlot": false,
														"src": "19275:5:3",
														"valueSize": 1
													},
													{
														"declaration": 1302,
														"isOffset": false,
														"isSlot": false,
														"src": "19248:6:3",
														"valueSize": 1
													}
												],
												"id": 1304,
												"nodeType": "InlineAssembly",
												"src": "18846:479:3"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "18572:95:3",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 1306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "18682:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18725:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "18717:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18717:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "18751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18751:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "18783:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "18775:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18775:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18706:93:3"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18827:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "18822:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1301,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18822:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18821:13:3"
									},
									"scope": 2168,
									"src": "18673:659:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "19606:324:3",
										"statements": [
											{
												"assignments": [
													1318
												],
												"declarations": [
													{
														"constant": false,
														"id": 1318,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "19642:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "19617:38:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$569_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 1317,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1316,
																"name": "TokenApprovalRef",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 569,
																"src": "19617:16:3"
															},
															"referencedDeclaration": 569,
															"src": "19617:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$569_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"baseExpression": {
														"id": 1319,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "19658:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$569_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 1321,
													"indexExpression": {
														"id": 1320,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "19674:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19658:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$569_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19617:65:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19797:126:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19812:41:3",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "19835:18:3"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "19812:19:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19867:45:3",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "19892:19:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "19886:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "19886:26:3"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "19867:15:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1314,
														"isOffset": false,
														"isSlot": false,
														"src": "19867:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1312,
														"isOffset": false,
														"isSlot": false,
														"src": "19812:19:3",
														"valueSize": 1
													},
													{
														"declaration": 1312,
														"isOffset": false,
														"isSlot": false,
														"src": "19892:19:3",
														"valueSize": 1
													},
													{
														"declaration": 1318,
														"isOffset": false,
														"isSlot": true,
														"src": "19835:18:3",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1323,
												"nodeType": "InlineAssembly",
												"src": "19788:135:3"
											}
										]
									},
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "19340:99:3",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "19454:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19489:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "19481:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19481:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19480:17:3"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "19555:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "19547:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "19584:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "19576:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19576:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19546:54:3"
									},
									"scope": 2168,
									"src": "19445:485:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2308
									],
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "20673:2694:3",
										"statements": [
											{
												"assignments": [
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1337,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "20692:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 1469,
														"src": "20684:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1336,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20684:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1341,
												"initialValue": {
													"arguments": [
														{
															"id": 1339,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "20733:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1338,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "20714:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20714:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20684:57:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1346,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1337,
																		"src": "20774:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20766:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1344,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20766:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20766:28:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20758:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1342,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20758:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20758:37:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1349,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "20799:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20758:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "20754:86:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1351,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "20812:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20812:28:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1353,
													"nodeType": "RevertStatement",
													"src": "20805:35:3"
												}
											},
											{
												"assignments": [
													1356,
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1356,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "20862:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 1469,
														"src": "20854:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20854:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "20891:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 1469,
														"src": "20883:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1357,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20883:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1362,
												"initialValue": {
													"arguments": [
														{
															"id": 1360,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "20937:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1359,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "20910:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20910:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20853:92:3"
											},
											{
												"condition": {
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "21044:69:3",
													"subExpression": {
														"arguments": [
															{
																"id": 1364,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "21070:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1365,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1328,
																"src": "21087:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1366,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "21093:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21093:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1363,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "21045:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21045:68:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1380,
												"nodeType": "IfStatement",
												"src": "21040:180:3",
												"trueBody": {
													"condition": {
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "21132:44:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 1371,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "21150:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1372,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2157,
																		"src": "21156:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21156:19:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1370,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "21133:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21133:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1379,
													"nodeType": "IfStatement",
													"src": "21128:92:3",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1376,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2192,
																"src": "21185:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21185:35:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1378,
														"nodeType": "RevertStatement",
														"src": "21178:42:3"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1381,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1330,
														"src": "21237:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21251:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21243:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1382,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21243:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21243:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21237:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1390,
												"nodeType": "IfStatement",
												"src": "21233:52:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1387,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "21262:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21262:23:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1389,
													"nodeType": "RevertStatement",
													"src": "21255:30:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1392,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "21320:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1393,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "21326:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1394,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "21330:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21339:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1391,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "21298:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21298:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "21298:43:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21416:186:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21450:141:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "21553:19:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21574:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "21546:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21546:30:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21546:30:3"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "21434:15:3"
															},
															"nodeType": "YulIf",
															"src": "21431:160:3"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1358,
														"isOffset": false,
														"isSlot": false,
														"src": "21434:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1356,
														"isOffset": false,
														"isSlot": false,
														"src": "21553:19:3",
														"valueSize": 1
													}
												],
												"id": 1398,
												"nodeType": "InlineAssembly",
												"src": "21407:195:3"
											},
											{
												"id": 1455,
												"nodeType": "UncheckedBlock",
												"src": "21874:1388:3",
												"statements": [
													{
														"expression": {
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "21969:26:3",
															"subExpression": {
																"baseExpression": {
																	"id": 1399,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "21971:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1401,
																"indexExpression": {
																	"id": 1400,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "21990:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21971:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1403,
														"nodeType": "ExpressionStatement",
														"src": "21969:26:3"
													},
													{
														"expression": {
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "22038:24:3",
															"subExpression": {
																"baseExpression": {
																	"id": 1404,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "22040:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1406,
																"indexExpression": {
																	"id": 1405,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "22059:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "22040:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1408,
														"nodeType": "ExpressionStatement",
														"src": "22038:24:3"
													},
													{
														"expression": {
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1409,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "22333:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1411,
																"indexExpression": {
																	"id": 1410,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1332,
																	"src": "22351:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "22333:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1413,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1330,
																		"src": "22399:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1414,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 610,
																			"src": "22420:25:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1416,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1328,
																					"src": "22463:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1417,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1330,
																					"src": "22469:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1418,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "22473:19:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1415,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2147,
																				"src": "22448:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22448:45:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22420:73:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1412,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "22362:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22362:146:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22333:175:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1423,
														"nodeType": "ExpressionStatement",
														"src": "22333:175:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1424,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "22628:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1425,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "22650:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22628:47:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22679:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22628:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1454,
														"nodeType": "IfStatement",
														"src": "22624:627:3",
														"trueBody": {
															"id": 1453,
															"nodeType": "Block",
															"src": "22682:569:3",
															"statements": [
																{
																	"assignments": [
																		1430
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1430,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "22709:11:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 1453,
																			"src": "22701:19:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1429,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22701:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1434,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1431,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1332,
																			"src": "22723:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22733:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22723:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22701:33:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1435,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "22856:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1437,
																			"indexExpression": {
																				"id": 1436,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1430,
																				"src": "22874:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22856:30:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22890:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "22856:35:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1452,
																	"nodeType": "IfStatement",
																	"src": "22852:384:3",
																	"trueBody": {
																		"id": 1451,
																		"nodeType": "Block",
																		"src": "22893:343:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1442,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1440,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1430,
																						"src": "22979:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1441,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 637,
																						"src": "22994:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22979:28:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1450,
																				"nodeType": "IfStatement",
																				"src": "22975:242:3",
																				"trueBody": {
																					"id": 1449,
																					"nodeType": "Block",
																					"src": "23009:208:3",
																					"statements": [
																						{
																							"expression": {
																								"id": 1447,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1443,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 647,
																										"src": "23141:17:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1445,
																									"indexExpression": {
																										"id": 1444,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1430,
																										"src": "23159:11:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "23141:30:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1446,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1337,
																									"src": "23174:19:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "23141:52:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1448,
																							"nodeType": "ExpressionStatement",
																							"src": "23141:52:3"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1457,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "23288:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1458,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "23294:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1459,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "23298:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1456,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2242,
														"src": "23279:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23279:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "EmitStatement",
												"src": "23274:32:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1463,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "23338:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1464,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "23344:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1465,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "23348:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23357:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1462,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "23317:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23317:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "23317:42:3"
											}
										]
									},
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "20129:415:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "20559:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1334,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20664:8:3"
									},
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20590:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "20582:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20613:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "20605:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20605:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20634:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "20626:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20626:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20571:77:3"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20673:0:3"
									},
									"scope": 2168,
									"src": "20550:2817:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2298
									],
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "23590:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1482,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "23618:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1483,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "23624:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1484,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "23628:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23637:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1481,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1489,
															1527
														],
														"referencedDeclaration": 1527,
														"src": "23601:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23601:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1487,
												"nodeType": "ExpressionStatement",
												"src": "23601:39:3"
											}
										]
									},
									"documentation": {
										"id": 1471,
										"nodeType": "StructuredDocumentation",
										"src": "23375:82:3",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23472:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1479,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23581:8:3"
									},
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23507:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "23499:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23499:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23530:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "23522:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23522:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23551:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "23543:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23543:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23488:77:3"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23590:0:3"
									},
									"scope": 2168,
									"src": "23463:185:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2288
									],
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "24402:243:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1503,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "24426:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1504,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "24432:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1505,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "24436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1502,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "24413:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24413:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "ExpressionStatement",
												"src": "24413:31:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1508,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1494,
																"src": "24459:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "24459:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "24459:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24477:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24459:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1525,
												"nodeType": "IfStatement",
												"src": "24455:183:3",
												"trueBody": {
													"condition": {
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "24497:57:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 1514,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1492,
																	"src": "24529:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1515,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1494,
																	"src": "24535:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1516,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1496,
																	"src": "24539:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1517,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "24548:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1513,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1608,
																"src": "24498:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24498:56:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1524,
													"nodeType": "IfStatement",
													"src": "24493:145:3",
													"trueBody": {
														"id": 1523,
														"nodeType": "Block",
														"src": "24556:82:3",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1520,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2198,
																		"src": "24582:38:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24582:40:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1522,
																"nodeType": "RevertStatement",
																"src": "24575:47:3"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "23656:584:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24255:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1500,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24393:8:3"
									},
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24290:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "24282:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24282:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24313:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "24305:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24305:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "24326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24326:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "24365:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "24352:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1497,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24352:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24271:106:3"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24402:0:3"
									},
									"scope": 2168,
									"src": "24246:399:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1539,
										"nodeType": "Block",
										"src": "25464:2:3",
										"statements": []
									},
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "24653:648:3",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "25316:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25356:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "25348:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25348:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25379:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "25371:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25371:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "25400:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "25392:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25392:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "25431:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "25423:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25423:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25337:109:3"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25464:0:3"
									},
									"scope": 2168,
									"src": "25307:159:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "26287:2:3",
										"statements": []
									},
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "25474:651:3",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "26140:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26179:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "26171:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26171:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26202:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "26194:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26194:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "26223:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "26215:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26215:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "26254:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "26246:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26160:109:3"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26287:0:3"
									},
									"scope": 2168,
									"src": "26131:158:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "26898:547:3",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1588,
															"nodeType": "Block",
															"src": "27050:98:3",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1580,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1578,
																			"src": "27072:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1582,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1558,
																							"src": "27107:2:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1581,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 563,
																						"src": "27082:24:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$563_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1583,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27082:28:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$563",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 562,
																				"src": "27082:45:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "27082:54:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "27072:64:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1566,
																	"id": 1587,
																	"nodeType": "Return",
																	"src": "27065:71:3"
																}
															]
														},
														"errorName": "",
														"id": 1589,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1579,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1578,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "27032:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1589,
																	"src": "27025:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1577,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "27025:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "27010:39:3"
														},
														"src": "27002:146:3"
													},
													{
														"block": {
															"id": 1604,
															"nodeType": "Block",
															"src": "27177:261:3",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1593,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1591,
																				"src": "27196:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "27196:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27213:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "27196:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 1602,
																		"nodeType": "Block",
																		"src": "27304:123:3",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "27332:80:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "27366:2:3",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "27370:6:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "27362:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27362:15:3"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "27385:6:3"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "27379:5:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27379:13:3"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "27355:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "27355:38:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "27355:38:3"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 1591,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "27370:6:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 1591,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "27385:6:3",
																						"valueSize": 1
																					}
																				],
																				"id": 1601,
																				"nodeType": "InlineAssembly",
																				"src": "27323:89:3"
																			}
																		]
																	},
																	"id": 1603,
																	"nodeType": "IfStatement",
																	"src": "27192:235:3",
																	"trueBody": {
																		"id": 1600,
																		"nodeType": "Block",
																		"src": "27216:82:3",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1597,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2198,
																						"src": "27242:38:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 1598,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27242:40:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1599,
																				"nodeType": "RevertStatement",
																				"src": "27235:47:3"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 1605,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1592,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1591,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "27169:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1605,
																	"src": "27156:19:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1590,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "27156:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "27155:21:3"
														},
														"src": "27149:289:3"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1571,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2157,
																"src": "26959:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26959:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1573,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "26980:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1574,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "26986:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1575,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "26995:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1568,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "26938:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1567,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "26913:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$563_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26913:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$563",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 562,
														"src": "26913:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26913:88:3",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1606,
												"nodeType": "TryStatement",
												"src": "26909:529:3"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "26297:426:3",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "26738:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26787:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "26779:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26779:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26810:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "26802:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26802:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26831:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "26823:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26823:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "26862:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "26849:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26849:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26768:106:3"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "26892:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26892:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26891:6:3"
									},
									"scope": 2168,
									"src": "26729:716:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "27969:2658:3",
										"statements": [
											{
												"assignments": [
													1617
												],
												"declarations": [
													{
														"constant": false,
														"id": 1617,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "27988:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 1703,
														"src": "27980:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1616,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27980:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1619,
												"initialValue": {
													"id": 1618,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 637,
													"src": "28003:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27980:36:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1620,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "28031:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28043:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "28031:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1626,
												"nodeType": "IfStatement",
												"src": "28027:44:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1623,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2186,
															"src": "28053:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28053:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1625,
													"nodeType": "RevertStatement",
													"src": "28046:25:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28114:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28106:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1628,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28106:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28106:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1632,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "28118:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1633,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "28122:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1634,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "28136:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1627,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "28084:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28084:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "28084:61:3"
											},
											{
												"id": 1692,
												"nodeType": "UncheckedBlock",
												"src": "28333:2216:3",
												"statements": [
													{
														"expression": {
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1637,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "28559:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1639,
																"indexExpression": {
																	"id": 1638,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "28578:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28559:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1640,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "28585:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1643,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1641,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28598:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1642,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 580,
																							"src": "28603:21:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "28598:26:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1644,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "28597:28:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28628:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "28597:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1647,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "28596:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28585:45:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28559:71:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1650,
														"nodeType": "ExpressionStatement",
														"src": "28559:71:3"
													},
													{
														"expression": {
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1651,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "28873:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1653,
																"indexExpression": {
																	"id": 1652,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "28891:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28873:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1655,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "28944:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1657,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1613,
																					"src": "28986:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1656,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1154,
																				"src": "28965:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28965:30:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1662,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "29021:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1661,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "29013:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1660,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "29013:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1663,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29013:10:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1664,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1611,
																					"src": "29025:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1665,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "29029:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1659,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2147,
																				"src": "28998:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28998:33:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28965:66:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1654,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "28907:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28907:139:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28873:173:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1670,
														"nodeType": "ExpressionStatement",
														"src": "28873:173:3"
													},
													{
														"assignments": [
															1672
														],
														"declarations": [
															{
																"constant": false,
																"id": 1672,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "29071:8:3",
																"nodeType": "VariableDeclaration",
																"scope": 1692,
																"src": "29063:16:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1671,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29063:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1673,
														"nodeType": "VariableDeclarationStatement",
														"src": "29063:16:3"
													},
													{
														"assignments": [
															1675
														],
														"declarations": [
															{
																"constant": false,
																"id": 1675,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "29102:3:3",
																"nodeType": "VariableDeclaration",
																"scope": 1692,
																"src": "29094:11:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1674,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29094:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1679,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1676,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1617,
																"src": "29108:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1677,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1613,
																"src": "29123:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29108:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29094:37:3"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "29507:935:3",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "29624:37:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "29640:2:3"
																			},
																			{
																				"name": "_BITMASK_ADDRESS",
																				"nodeType": "YulIdentifier",
																				"src": "29644:16:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "29636:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29636:25:3"
																	},
																	"variableNames": [
																		{
																			"name": "toMasked",
																			"nodeType": "YulIdentifier",
																			"src": "29624:8:3"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29753:1:3",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29814:1:3",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "_TRANSFER_EVENT_SIGNATURE",
																				"nodeType": "YulIdentifier",
																				"src": "29873:25:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29935:1:3",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "toMasked",
																				"nodeType": "YulIdentifier",
																				"src": "29976:8:3"
																			},
																			{
																				"name": "startTokenId",
																				"nodeType": "YulIdentifier",
																				"src": "30016:12:3"
																			}
																		],
																		"functionName": {
																			"name": "log4",
																			"nodeType": "YulIdentifier",
																			"src": "29726:4:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29726:335:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "29726:335:3"
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "30257:170:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30354:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30357:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nodeType": "YulIdentifier",
																							"src": "30360:25:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30387:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nodeType": "YulIdentifier",
																							"src": "30390:8:3"
																						},
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30400:7:3"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nodeType": "YulIdentifier",
																						"src": "30349:4:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30349:59:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "30349:59:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "30173:7:3"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "30182:3:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "30170:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30170:16:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "30163:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30163:24:3"
																	},
																	"nodeType": "YulForLoop",
																	"post": {
																		"nodeType": "YulBlock",
																		"src": "30188:68:3",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "30211:26:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30226:7:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30235:1:3",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "30222:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30222:15:3"
																				},
																				"variableNames": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "30211:7:3"
																					}
																				]
																			}
																		]
																	},
																	"pre": {
																		"nodeType": "YulBlock",
																		"src": "30085:77:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "30108:35:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "startTokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30127:12:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30141:1:3",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "30123:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30123:20:3"
																				},
																				"variables": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulTypedName",
																						"src": "30112:7:3",
																						"type": ""
																					}
																				]
																			}
																		]
																	},
																	"src": "30081:346:3"
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 629,
																"isOffset": false,
																"isSlot": false,
																"src": "29644:16:3",
																"valueSize": 1
															},
															{
																"declaration": 635,
																"isOffset": false,
																"isSlot": false,
																"src": "29873:25:3",
																"valueSize": 1
															},
															{
																"declaration": 635,
																"isOffset": false,
																"isSlot": false,
																"src": "30360:25:3",
																"valueSize": 1
															},
															{
																"declaration": 1675,
																"isOffset": false,
																"isSlot": false,
																"src": "30182:3:3",
																"valueSize": 1
															},
															{
																"declaration": 1617,
																"isOffset": false,
																"isSlot": false,
																"src": "30016:12:3",
																"valueSize": 1
															},
															{
																"declaration": 1617,
																"isOffset": false,
																"isSlot": false,
																"src": "30127:12:3",
																"valueSize": 1
															},
															{
																"declaration": 1611,
																"isOffset": false,
																"isSlot": false,
																"src": "29640:2:3",
																"valueSize": 1
															},
															{
																"declaration": 1672,
																"isOffset": false,
																"isSlot": false,
																"src": "29624:8:3",
																"valueSize": 1
															},
															{
																"declaration": 1672,
																"isOffset": false,
																"isSlot": false,
																"src": "29976:8:3",
																"valueSize": 1
															},
															{
																"declaration": 1672,
																"isOffset": false,
																"isSlot": false,
																"src": "30390:8:3",
																"valueSize": 1
															}
														],
														"id": 1680,
														"nodeType": "InlineAssembly",
														"src": "29498:944:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1681,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "30460:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30472:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30460:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1687,
														"nodeType": "IfStatement",
														"src": "30456:45:3",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1684,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2183,
																	"src": "30482:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30482:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1686,
															"nodeType": "RevertStatement",
															"src": "30475:26:3"
														}
													},
													{
														"expression": {
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1688,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "30518:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1689,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "30534:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30518:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1691,
														"nodeType": "ExpressionStatement",
														"src": "30518:19:3"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30588:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30580:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1694,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30580:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30580:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1698,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "30592:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1699,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "30596:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1700,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "30610:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1693,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "30559:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30559:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "30559:60:3"
											}
										]
									},
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "27642:259:3",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "27916:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27930:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "27922:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27922:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "27942:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "27934:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27934:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27921:30:3"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27969:0:3"
									},
									"scope": 2168,
									"src": "27907:2720:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "31559:1406:3",
										"statements": [
											{
												"assignments": [
													1713
												],
												"declarations": [
													{
														"constant": false,
														"id": 1713,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "31578:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 1815,
														"src": "31570:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1712,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31570:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1715,
												"initialValue": {
													"id": 1714,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 637,
													"src": "31593:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31570:36:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1716,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "31621:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31635:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31627:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1717,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "31627:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31627:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31621:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1725,
												"nodeType": "IfStatement",
												"src": "31617:48:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1722,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "31646:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31646:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1724,
													"nodeType": "RevertStatement",
													"src": "31639:26:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1726,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1709,
														"src": "31680:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31692:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31680:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1732,
												"nodeType": "IfStatement",
												"src": "31676:44:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1729,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2186,
															"src": "31702:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31702:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1731,
													"nodeType": "RevertStatement",
													"src": "31695:25:3"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1733,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1709,
														"src": "31735:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1734,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "31746:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31735:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1739,
												"nodeType": "IfStatement",
												"src": "31731:89:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1736,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2207,
															"src": "31787:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31787:33:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1738,
													"nodeType": "RevertStatement",
													"src": "31780:40:3"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31863:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31855:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1741,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31855:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31855:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1745,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "31867:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1746,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "31871:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1747,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "31885:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1740,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "31833:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31833:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "31833:61:3"
											},
											{
												"id": 1804,
												"nodeType": "UncheckedBlock",
												"src": "32006:881:3",
												"statements": [
													{
														"expression": {
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1750,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "32232:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1752,
																"indexExpression": {
																	"id": 1751,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1707,
																	"src": "32251:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32232:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1753,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1709,
																	"src": "32258:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1756,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1754,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32271:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1755,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 580,
																							"src": "32276:21:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "32271:26:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1757,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "32270:28:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32301:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "32270:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1760,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32269:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32258:45:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32232:71:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1763,
														"nodeType": "ExpressionStatement",
														"src": "32232:71:3"
													},
													{
														"expression": {
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1764,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "32546:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1766,
																"indexExpression": {
																	"id": 1765,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "32564:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32546:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1768,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "32617:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1770,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1709,
																					"src": "32659:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1769,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1154,
																				"src": "32638:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32638:30:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1775,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32694:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1774,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "32686:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1773,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "32686:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1776,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "32686:10:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1777,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1707,
																					"src": "32698:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1778,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "32702:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1772,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2147,
																				"src": "32671:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32671:33:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32638:66:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1767,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "32580:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32580:139:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32546:173:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1783,
														"nodeType": "ExpressionStatement",
														"src": "32546:173:3"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1785,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "32761:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1786,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1713,
																			"src": "32775:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1787,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1709,
																			"src": "32790:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32775:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32801:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32775:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32812:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32804:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1791,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "32804:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32804:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1795,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1707,
																	"src": "32816:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1784,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "32741:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32741:78:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1797,
														"nodeType": "EmitStatement",
														"src": "32736:83:3"
													},
													{
														"expression": {
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1798,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "32836:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1799,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "32852:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1800,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1709,
																	"src": "32867:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32852:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32836:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1803,
														"nodeType": "ExpressionStatement",
														"src": "32836:39:3"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32926:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32918:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1806,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32918:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32918:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1810,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "32930:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1811,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "32934:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1812,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "32948:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1805,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "32897:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32897:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1814,
												"nodeType": "ExpressionStatement",
												"src": "32897:60:3"
											}
										]
									},
									"documentation": {
										"id": 1705,
										"nodeType": "StructuredDocumentation",
										"src": "30635:849:3",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "31499:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31520:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "31512:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31512:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "31532:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "31524:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31524:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31511:30:3"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31559:0:3"
									},
									"scope": 2168,
									"src": "31490:1475:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "33499:569:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1827,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "33516:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1828,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "33520:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1826,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1704,
														"src": "33510:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33510:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1830,
												"nodeType": "ExpressionStatement",
												"src": "33510:19:3"
											},
											{
												"id": 1876,
												"nodeType": "UncheckedBlock",
												"src": "33542:519:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1831,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1819,
																		"src": "33571:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "33571:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "33571:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33589:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33571:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1875,
														"nodeType": "IfStatement",
														"src": "33567:483:3",
														"trueBody": {
															"id": 1874,
															"nodeType": "Block",
															"src": "33592:458:3",
															"statements": [
																{
																	"assignments": [
																		1837
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1837,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "33619:3:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 1874,
																			"src": "33611:11:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1836,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33611:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1839,
																	"initialValue": {
																		"id": 1838,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "33625:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33611:27:3"
																},
																{
																	"assignments": [
																		1841
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1841,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "33665:5:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 1874,
																			"src": "33657:13:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1840,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33657:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1845,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1842,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1837,
																			"src": "33673:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1843,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1821,
																			"src": "33679:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33673:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33657:30:3"
																},
																{
																	"body": {
																		"id": 1862,
																		"nodeType": "Block",
																		"src": "33709:209:3",
																		"statements": [
																			{
																				"condition": {
																					"id": 1856,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "33736:63:3",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1849,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "33776:1:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1848,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "33768:7:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1847,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "33768:7:3",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1850,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33768:10:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1851,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1819,
																								"src": "33780:2:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1853,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "33784:7:3",
																								"subExpression": {
																									"id": 1852,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1841,
																									"src": "33784:5:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1854,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1823,
																								"src": "33793:5:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1846,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1608,
																							"src": "33737:30:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1855,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "33737:62:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1861,
																				"nodeType": "IfStatement",
																				"src": "33732:167:3",
																				"trueBody": {
																					"id": 1860,
																					"nodeType": "Block",
																					"src": "33801:98:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1857,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2198,
																									"src": "33835:38:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 1858,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33835:40:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1859,
																							"nodeType": "RevertStatement",
																							"src": "33828:47:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1863,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1841,
																			"src": "33926:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1864,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1837,
																			"src": "33934:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33926:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1866,
																	"nodeType": "DoWhileStatement",
																	"src": "33706:233:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1867,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "34004:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1868,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1837,
																			"src": "34021:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34004:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1873,
																	"nodeType": "IfStatement",
																	"src": "34000:34:3",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1870,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "34026:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34026:8:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1872,
																		"nodeType": "ExpressionStatement",
																		"src": "34026:8:3"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "32973:400:3",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "33388:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33416:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "33408:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33408:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33437:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "33429:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33429:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "33469:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "33456:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1822,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33456:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33397:84:3"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33499:0:3"
									},
									"scope": 2168,
									"src": "33379:689:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "34218:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1887,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "34239:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1888,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "34243:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34253:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1886,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1878,
															1893
														],
														"referencedDeclaration": 1878,
														"src": "34229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34229:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1891,
												"nodeType": "ExpressionStatement",
												"src": "34229:27:3"
											}
										]
									},
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "34076:70:3",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "34161:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34179:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "34171:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34171:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "34191:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "34183:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34183:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34170:30:3"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34218:0:3"
									},
									"scope": 2168,
									"src": "34152:112:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1904,
										"nodeType": "Block",
										"src": "34580:40:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1900,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "34597:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34606:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1899,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1905,
															2057
														],
														"referencedDeclaration": 2057,
														"src": "34591:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34591:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1903,
												"nodeType": "ExpressionStatement",
												"src": "34591:21:3"
											}
										]
									},
									"documentation": {
										"id": 1894,
										"nodeType": "StructuredDocumentation",
										"src": "34461:64:3",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "34540:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34554:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "34546:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34546:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34545:17:3"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34580:0:3"
									},
									"scope": 2168,
									"src": "34531:89:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2056,
										"nodeType": "Block",
										"src": "34918:3012:3",
										"statements": [
											{
												"assignments": [
													1914
												],
												"declarations": [
													{
														"constant": false,
														"id": 1914,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "34937:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 2056,
														"src": "34929:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1913,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34929:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1918,
												"initialValue": {
													"arguments": [
														{
															"id": 1916,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "34978:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1915,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "34959:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34959:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34929:57:3"
											},
											{
												"assignments": [
													1920
												],
												"declarations": [
													{
														"constant": false,
														"id": 1920,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "35007:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 2056,
														"src": "34999:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1919,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34999:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1928,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1925,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1914,
																	"src": "35030:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35022:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1923,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "35022:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35022:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "35014:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1921,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35014:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35014:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34999:52:3"
											},
											{
												"assignments": [
													1930,
													1932
												],
												"declarations": [
													{
														"constant": false,
														"id": 1930,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "35073:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 2056,
														"src": "35065:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1929,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1932,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "35102:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 2056,
														"src": "35094:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1931,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35094:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1936,
												"initialValue": {
													"arguments": [
														{
															"id": 1934,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "35148:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1933,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "35121:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35121:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35064:92:3"
											},
											{
												"condition": {
													"id": 1937,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1910,
													"src": "35173:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1957,
												"nodeType": "IfStatement",
												"src": "35169:316:3",
												"trueBody": {
													"id": 1956,
													"nodeType": "Block",
													"src": "35188:297:3",
													"statements": [
														{
															"condition": {
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "35293:69:3",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1939,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1932,
																			"src": "35319:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1940,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1920,
																			"src": "35336:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1941,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2157,
																				"src": "35342:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35342:19:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1938,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1306,
																		"src": "35294:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35294:68:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1955,
															"nodeType": "IfStatement",
															"src": "35289:184:3",
															"trueBody": {
																"condition": {
																	"id": 1950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "35385:44:3",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1946,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1920,
																				"src": "35403:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1947,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2157,
																					"src": "35409:17:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1948,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "35409:19:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1945,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "35386:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35386:43:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1954,
																"nodeType": "IfStatement",
																"src": "35381:92:3",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1951,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2192,
																			"src": "35438:33:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35438:35:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1953,
																	"nodeType": "RevertStatement",
																	"src": "35431:42:3"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1959,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "35519:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35533:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35525:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1960,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35525:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35525:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1964,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "35537:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35546:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1958,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "35497:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35497:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "35497:51:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "35623:186:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "35657:141:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "35760:19:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35781:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "35753:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35753:30:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "35753:30:3"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "35641:15:3"
															},
															"nodeType": "YulIf",
															"src": "35638:160:3"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1932,
														"isOffset": false,
														"isSlot": false,
														"src": "35641:15:3",
														"valueSize": 1
													},
													{
														"declaration": 1930,
														"isOffset": false,
														"isSlot": false,
														"src": "35760:19:3",
														"valueSize": 1
													}
												],
												"id": 1968,
												"nodeType": "InlineAssembly",
												"src": "35614:195:3"
											},
											{
												"id": 2032,
												"nodeType": "UncheckedBlock",
												"src": "36081:1576:3",
												"statements": [
													{
														"expression": {
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1969,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "36400:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1971,
																"indexExpression": {
																	"id": 1970,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1920,
																	"src": "36419:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36400:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1972,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36429:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1973,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 583,
																				"src": "36434:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "36429:26:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1975,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "36428:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36459:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "36428:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36400:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1979,
														"nodeType": "ExpressionStatement",
														"src": "36400:60:3"
													},
													{
														"expression": {
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1980,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "36698:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1982,
																"indexExpression": {
																	"id": 1981,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1908,
																	"src": "36716:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36698:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1984,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1920,
																		"src": "36764:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1987,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1985,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 602,
																						"src": "36788:15:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1986,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 610,
																						"src": "36806:25:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "36788:43:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1988,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "36787:45:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1990,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1920,
																					"src": "36850:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1993,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "36864:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1992,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "36856:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1991,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "36856:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1994,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36856:10:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1995,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1914,
																					"src": "36868:19:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1989,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2147,
																				"src": "36835:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36835:53:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36787:101:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1983,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "36727:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36727:176:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36698:205:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2000,
														"nodeType": "ExpressionStatement",
														"src": "36698:205:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2001,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1914,
																	"src": "37023:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2002,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "37045:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37023:47:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37074:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37023:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2031,
														"nodeType": "IfStatement",
														"src": "37019:627:3",
														"trueBody": {
															"id": 2030,
															"nodeType": "Block",
															"src": "37077:569:3",
															"statements": [
																{
																	"assignments": [
																		2007
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2007,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "37104:11:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 2030,
																			"src": "37096:19:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2006,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "37096:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2011,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2008,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "37118:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37128:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "37118:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "37096:33:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 2012,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "37251:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 2014,
																			"indexExpression": {
																				"id": 2013,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2007,
																				"src": "37269:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "37251:30:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37285:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "37251:35:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2029,
																	"nodeType": "IfStatement",
																	"src": "37247:384:3",
																	"trueBody": {
																		"id": 2028,
																		"nodeType": "Block",
																		"src": "37288:343:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2019,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2017,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2007,
																						"src": "37374:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 2018,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 637,
																						"src": "37389:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "37374:28:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2027,
																				"nodeType": "IfStatement",
																				"src": "37370:242:3",
																				"trueBody": {
																					"id": 2026,
																					"nodeType": "Block",
																					"src": "37404:208:3",
																					"statements": [
																						{
																							"expression": {
																								"id": 2024,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 2020,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 647,
																										"src": "37536:17:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 2022,
																									"indexExpression": {
																										"id": 2021,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2007,
																										"src": "37554:11:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "37536:30:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 2023,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1914,
																									"src": "37569:19:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "37536:52:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2025,
																							"nodeType": "ExpressionStatement",
																							"src": "37536:52:3"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2034,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "37683:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37697:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37689:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2035,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37689:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37689:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2039,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "37701:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2033,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2242,
														"src": "37674:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37674:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2041,
												"nodeType": "EmitStatement",
												"src": "37669:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2043,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "37741:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37755:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37747:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2044,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37747:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37747:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2048,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "37759:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37768:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2042,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "37720:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37720:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2051,
												"nodeType": "ExpressionStatement",
												"src": "37720:50:3"
											},
											{
												"id": 2055,
												"nodeType": "UncheckedBlock",
												"src": "37872:51:3",
												"statements": [
													{
														"expression": {
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "37897:14:3",
															"subExpression": {
																"id": 2052,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "37897:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2054,
														"nodeType": "ExpressionStatement",
														"src": "37897:14:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "34628:215:3",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "34858:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34872:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "34864:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34864:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "34886:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "34881:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1909,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34881:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34863:37:3"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34918:0:3"
									},
									"scope": 2168,
									"src": "34849:3081:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "38297:457:3",
										"statements": [
											{
												"assignments": [
													2066
												],
												"declarations": [
													{
														"constant": false,
														"id": 2066,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "38316:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 2100,
														"src": "38308:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2065,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38308:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2070,
												"initialValue": {
													"baseExpression": {
														"id": 2067,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "38325:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2069,
													"indexExpression": {
														"id": 2068,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2060,
														"src": "38343:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "38325:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38308:41:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2071,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2066,
														"src": "38364:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38374:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38364:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2077,
												"nodeType": "IfStatement",
												"src": "38360:61:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2074,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2210,
															"src": "38384:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38384:37:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2076,
													"nodeType": "RevertStatement",
													"src": "38377:44:3"
												}
											},
											{
												"assignments": [
													2079
												],
												"declarations": [
													{
														"constant": false,
														"id": 2079,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "38440:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 2100,
														"src": "38432:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2078,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38432:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2080,
												"nodeType": "VariableDeclarationStatement",
												"src": "38432:23:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "38546:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "38561:28:3",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "38580:9:3"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "38561:15:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2062,
														"isOffset": false,
														"isSlot": false,
														"src": "38580:9:3",
														"valueSize": 1
													},
													{
														"declaration": 2079,
														"isOffset": false,
														"isSlot": false,
														"src": "38561:15:3",
														"valueSize": 1
													}
												],
												"id": 2081,
												"nodeType": "InlineAssembly",
												"src": "38537:63:3"
											},
											{
												"expression": {
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2082,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2066,
														"src": "38610:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2083,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2066,
																		"src": "38620:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 2084,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 621,
																		"src": "38629:30:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38620:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2086,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38619:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2087,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2079,
																		"src": "38664:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 2088,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "38683:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38664:37:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2090,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38663:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "38619:83:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38610:92:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2093,
												"nodeType": "ExpressionStatement",
												"src": "38610:92:3"
											},
											{
												"expression": {
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2094,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "38713:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2096,
														"indexExpression": {
															"id": 2095,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2060,
															"src": "38731:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38713:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2097,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2066,
														"src": "38740:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38713:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2099,
												"nodeType": "ExpressionStatement",
												"src": "38713:33:3"
											}
										]
									},
									"documentation": {
										"id": 2058,
										"nodeType": "StructuredDocumentation",
										"src": "38130:86:3",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "38231:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "38255:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "38247:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38247:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "38269:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "38262:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2061,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "38262:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38246:33:3"
									},
									"returnParameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38297:0:3"
									},
									"scope": 2168,
									"src": "38222:532:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2113,
										"nodeType": "Block",
										"src": "39475:2:3",
										"statements": []
									},
									"documentation": {
										"id": 2102,
										"nodeType": "StructuredDocumentation",
										"src": "38762:562:3",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "39339:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39368:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "39360:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39360:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39391:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "39383:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39383:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "39411:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "39404:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2107,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39404:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39349:86:3"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "39467:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2110,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39467:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39466:8:3"
									},
									"scope": 2168,
									"src": "39330:147:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "39773:167:3",
										"statements": [
											{
												"assignments": [
													2127
												],
												"declarations": [
													{
														"constant": false,
														"id": 2127,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "39791:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 2146,
														"src": "39784:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 2126,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "39784:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2134,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2130,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2121,
																"src": "39810:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 2131,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "39833:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39810:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "39803:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 2128,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "39803:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39803:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39784:68:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2138,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2117,
																		"src": "39889:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2139,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2119,
																		"src": "39895:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2140,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2127,
																		"src": "39899:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 2137,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2114,
																	"src": "39878:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 2141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39878:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "39870:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2135,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "39870:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 2142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39870:40:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 2143,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "39914:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39870:62:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2125,
												"id": 2145,
												"nodeType": "Return",
												"src": "39863:69:3"
											}
										]
									},
									"documentation": {
										"id": 2115,
										"nodeType": "StructuredDocumentation",
										"src": "39485:138:3",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "39638:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39671:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "39663:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39694:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "39686:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39686:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "39715:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "39707:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39707:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39652:89:3"
									},
									"returnParameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "39764:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39764:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39763:9:3"
									},
									"scope": 2168,
									"src": "39629:311:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2156,
										"nodeType": "Block",
										"src": "40389:36:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2153,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "40407:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "40407:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2152,
												"id": 2155,
												"nodeType": "Return",
												"src": "40400:17:3"
											}
										]
									},
									"documentation": {
										"id": 2148,
										"nodeType": "StructuredDocumentation",
										"src": "40137:177:3",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 2157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "40329:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40346:2:3"
									},
									"returnParameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "40380:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40380:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40379:9:3"
									},
									"scope": 2168,
									"src": "40320:105:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2166,
										"nodeType": "Block",
										"src": "40611:1498:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "40631:1471:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "40994:29:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "41011:4:3",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "41005:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "41005:11:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41018:4:3",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "41001:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "41001:22:3"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "40994:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41104:4:3",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41110:3:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41097:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "41097:17:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41097:17:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41205:14:3",
															"value": {
																"name": "str",
																"nodeType": "YulIdentifier",
																"src": "41216:3:3"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "41209:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "41468:397:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "41487:18:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "41498:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "41503:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "41494:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41494:11:3"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "41487:3:3"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "41651:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "41660:2:3",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "41668:4:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "41674:2:3",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "41664:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "41664:13:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "41656:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "41656:22:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "41643:7:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41643:36:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "41643:36:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "41750:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "41762:4:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "41768:2:3",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "41758:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41758:13:3"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "41750:4:3"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "41841:9:3",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "41843:5:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "41835:4:3"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "41828:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41828:12:3"
																		},
																		"nodeType": "YulIf",
																		"src": "41825:25:3"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "41463:1:3",
																"type": "",
																"value": "1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "41465:2:3",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "41441:21:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "41443:17:3",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "41455:5:3"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "41447:4:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "41437:428:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41881:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "41899:3:3"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41904:3:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "41895:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "41895:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "41885:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "42003:21:3",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42014:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42019:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "42010:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "42010:14:3"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "42003:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42079:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "42084:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "42072:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "42072:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "42072:19:3"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2163,
														"isOffset": false,
														"isSlot": false,
														"src": "40994:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2163,
														"isOffset": false,
														"isSlot": false,
														"src": "41110:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2163,
														"isOffset": false,
														"isSlot": false,
														"src": "41216:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2163,
														"isOffset": false,
														"isSlot": false,
														"src": "41487:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2163,
														"isOffset": false,
														"isSlot": false,
														"src": "41498:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2163,
														"isOffset": false,
														"isSlot": false,
														"src": "41651:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2163,
														"isOffset": false,
														"isSlot": false,
														"src": "41904:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2163,
														"isOffset": false,
														"isSlot": false,
														"src": "42003:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2163,
														"isOffset": false,
														"isSlot": false,
														"src": "42014:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2163,
														"isOffset": false,
														"isSlot": false,
														"src": "42079:3:3",
														"valueSize": 1
													},
													{
														"declaration": 2160,
														"isOffset": false,
														"isSlot": false,
														"src": "41455:5:3",
														"valueSize": 1
													}
												],
												"id": 2165,
												"nodeType": "InlineAssembly",
												"src": "40622:1480:3"
											}
										]
									},
									"documentation": {
										"id": 2158,
										"nodeType": "StructuredDocumentation",
										"src": "40433:88:3",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 2167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "40536:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40554:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "40546:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40546:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40545:15:3"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "40606:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "40592:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2162,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40592:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40591:19:3"
									},
									"scope": 2168,
									"src": "40527:1582:3",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2169,
							"src": "1089:41023:3",
							"usedErrors": [
								2174,
								2177,
								2180,
								2183,
								2186,
								2189,
								2192,
								2195,
								2198,
								2201,
								2204,
								2207,
								2210
							]
						}
					],
					"src": "88:42026:3"
				},
				"id": 3
			},
			"contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							2374
						]
					},
					"id": 2375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2171,
								"nodeType": "StructuredDocumentation",
								"src": "115:39:4",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 2374,
							"linearizedBaseContracts": [
								2374
							],
							"name": "IERC721A",
							"nameLocation": "166:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2172,
										"nodeType": "StructuredDocumentation",
										"src": "182:78:4",
										"text": " The caller must own the token or be an approved operator."
									},
									"id": 2174,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "272:33:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:2:4"
									},
									"src": "266:42:4"
								},
								{
									"documentation": {
										"id": 2175,
										"nodeType": "StructuredDocumentation",
										"src": "316:46:4",
										"text": " The token does not exist."
									},
									"id": 2177,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "374:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:2:4"
									},
									"src": "368:41:4"
								},
								{
									"documentation": {
										"id": 2178,
										"nodeType": "StructuredDocumentation",
										"src": "417:67:4",
										"text": " Cannot query the balance for the zero address."
									},
									"id": 2180,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "496:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:2:4"
									},
									"src": "490:35:4"
								},
								{
									"documentation": {
										"id": 2181,
										"nodeType": "StructuredDocumentation",
										"src": "533:53:4",
										"text": " Cannot mint to the zero address."
									},
									"id": 2183,
									"name": "MintToZeroAddress",
									"nameLocation": "598:17:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:4"
									},
									"src": "592:26:4"
								},
								{
									"documentation": {
										"id": 2184,
										"nodeType": "StructuredDocumentation",
										"src": "626:74:4",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"id": 2186,
									"name": "MintZeroQuantity",
									"nameLocation": "712:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "728:2:4"
									},
									"src": "706:25:4"
								},
								{
									"documentation": {
										"id": 2187,
										"nodeType": "StructuredDocumentation",
										"src": "739:46:4",
										"text": " The token does not exist."
									},
									"id": 2189,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "797:29:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "826:2:4"
									},
									"src": "791:38:4"
								},
								{
									"documentation": {
										"id": 2190,
										"nodeType": "StructuredDocumentation",
										"src": "837:78:4",
										"text": " The caller must own the token or be an approved operator."
									},
									"id": 2192,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "927:33:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:2:4"
									},
									"src": "921:42:4"
								},
								{
									"documentation": {
										"id": 2193,
										"nodeType": "StructuredDocumentation",
										"src": "971:55:4",
										"text": " The token must be owned by `from`."
									},
									"id": 2195,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1038:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1064:2:4"
									},
									"src": "1032:35:4"
								},
								{
									"documentation": {
										"id": 2196,
										"nodeType": "StructuredDocumentation",
										"src": "1075:119:4",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"id": 2198,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1206:38:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1244:2:4"
									},
									"src": "1200:47:4"
								},
								{
									"documentation": {
										"id": 2199,
										"nodeType": "StructuredDocumentation",
										"src": "1255:57:4",
										"text": " Cannot transfer to the zero address."
									},
									"id": 2201,
									"name": "TransferToZeroAddress",
									"nameLocation": "1324:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1345:2:4"
									},
									"src": "1318:30:4"
								},
								{
									"documentation": {
										"id": 2202,
										"nodeType": "StructuredDocumentation",
										"src": "1356:46:4",
										"text": " The token does not exist."
									},
									"id": 2204,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1414:27:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1441:2:4"
									},
									"src": "1408:36:4"
								},
								{
									"documentation": {
										"id": 2205,
										"nodeType": "StructuredDocumentation",
										"src": "1452:81:4",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"id": 2207,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1545:31:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1576:2:4"
									},
									"src": "1539:40:4"
								},
								{
									"documentation": {
										"id": 2208,
										"nodeType": "StructuredDocumentation",
										"src": "1587:85:4",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"id": 2210,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1684:35:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1719:2:4"
									},
									"src": "1678:44:4"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 2219,
									"members": [
										{
											"constant": false,
											"id": 2212,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1994:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 2219,
											"src": "1986:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2211,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1986:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2214,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2101:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 2219,
											"src": "2094:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2213,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2094:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2216,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2178:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 2219,
											"src": "2173:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2215,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2173:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2218,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2291:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 2219,
											"src": "2284:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2217,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2284:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1922:14:4",
									"nodeType": "StructDefinition",
									"scope": 2374,
									"src": "1915:393:4",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2220,
										"nodeType": "StructuredDocumentation",
										"src": "2505:196:4",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 2225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2716:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:4"
									},
									"returnParameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "2753:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:9:4"
									},
									"scope": 2374,
									"src": "2707:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2226,
										"nodeType": "StructuredDocumentation",
										"src": "2955:348:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3318:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3343:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "3336:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2227,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3336:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3335:20:4"
									},
									"returnParameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "3379:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3379:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3378:6:4"
									},
									"scope": 2374,
									"src": "3309:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2234,
										"nodeType": "StructuredDocumentation",
										"src": "3578:90:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 2242,
									"name": "Transfer",
									"nameLocation": "3680:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3705:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "3689:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3727:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "3711:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3747:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "3731:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3688:67:4"
									},
									"src": "3674:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2243,
										"nodeType": "StructuredDocumentation",
										"src": "3764:96:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 2251,
									"name": "Approval",
									"nameLocation": "3872:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3897:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "3881:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3881:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2247,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3920:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "3904:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3946:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "3930:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3880:74:4"
									},
									"src": "3866:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2252,
										"nodeType": "StructuredDocumentation",
										"src": "3963:127:4",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"id": 2260,
									"name": "ApprovalForAll",
									"nameLocation": "4102:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4133:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "4117:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4117:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4156:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "4140:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4140:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2258,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4171:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "4166:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2257,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4166:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4116:64:4"
									},
									"src": "4096:85:4"
								},
								{
									"documentation": {
										"id": 2261,
										"nodeType": "StructuredDocumentation",
										"src": "4189:76:4",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 2268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4280:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4298:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "4290:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:15:4"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4336:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "4328:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4328:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4327:17:4"
									},
									"scope": 2374,
									"src": "4271:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2269,
										"nodeType": "StructuredDocumentation",
										"src": "4353:137:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 2276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4505:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4521:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "4513:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4512:17:4"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4561:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "4553:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4553:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4552:15:4"
									},
									"scope": 2374,
									"src": "4496:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "4576:727:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 2288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5318:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5353:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "5345:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5345:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5376:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "5368:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5368:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5397:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "5389:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5389:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5430:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "5415:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5415:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5334:107:4"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5450:0:4"
									},
									"scope": 2374,
									"src": "5309:142:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2289,
										"nodeType": "StructuredDocumentation",
										"src": "5459:82:4",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 2298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5556:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5591:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "5583:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5614:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "5606:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5606:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5635:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "5627:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5627:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5572:77:4"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5658:0:4"
									},
									"scope": 2374,
									"src": "5547:112:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2299,
										"nodeType": "StructuredDocumentation",
										"src": "5667:527:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6209:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6240:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "6232:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6232:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6263:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "6255:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6255:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6284:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "6276:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6221:77:4"
									},
									"returnParameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6307:0:4"
									},
									"scope": 2374,
									"src": "6200:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2309,
										"nodeType": "StructuredDocumentation",
										"src": "6316:472:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6803:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6819:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "6811:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6811:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6831:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "6823:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6823:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6810:29:4"
									},
									"returnParameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6848:0:4"
									},
									"scope": 2374,
									"src": "6794:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2317,
										"nodeType": "StructuredDocumentation",
										"src": "6857:326:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 2324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7198:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7224:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "7216:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7216:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7239:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "7234:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7234:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7215:34:4"
									},
									"returnParameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7258:0:4"
									},
									"scope": 2374,
									"src": "7189:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2325,
										"nodeType": "StructuredDocumentation",
										"src": "7267:145:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 2332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7427:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7447:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "7439:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7439:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7438:17:4"
									},
									"returnParameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7487:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "7479:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7479:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7478:18:4"
									},
									"scope": 2374,
									"src": "7418:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "7505:143:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7663:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7688:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "7680:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7680:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7703:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "7695:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7695:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7679:33:4"
									},
									"returnParameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "7736:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7736:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:6:4"
									},
									"scope": 2374,
									"src": "7654:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2343,
										"nodeType": "StructuredDocumentation",
										"src": "7939:60:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8014:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8018:2:4"
									},
									"returnParameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "8044:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2345,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8044:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8043:15:4"
									},
									"scope": 2374,
									"src": "8005:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2349,
										"nodeType": "StructuredDocumentation",
										"src": "8067:62:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8144:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8150:2:4"
									},
									"returnParameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "8176:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2351,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8176:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8175:15:4"
									},
									"scope": 2374,
									"src": "8135:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2355,
										"nodeType": "StructuredDocumentation",
										"src": "8199:92:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8306:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8323:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "8315:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8315:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8314:17:4"
									},
									"returnParameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "8355:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8355:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8354:15:4"
									},
									"scope": 2374,
									"src": "8297:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2363,
										"nodeType": "StructuredDocumentation",
										"src": "8563:273:4",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"id": 2373,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8848:19:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8884:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "8868:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8868:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8905:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "8897:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8897:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8932:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "8916:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8916:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2371,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8954:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "8938:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8938:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8867:90:4"
									},
									"src": "8842:116:4"
								}
							],
							"scope": 2375,
							"src": "156:8805:4",
							"usedErrors": [
								2174,
								2177,
								2180,
								2183,
								2186,
								2189,
								2192,
								2195,
								2198,
								2201,
								2204,
								2207,
								2210
							]
						}
					],
					"src": "88:8875:4"
				},
				"id": 4
			}
		}
	}
}